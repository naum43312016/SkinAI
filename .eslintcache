[{"C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\App.js":"3","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Contexts\\Authentication.js":"4","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Components\\Slides\\Slides.jsx":"5","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Components\\UploadForm\\UploadForm.jsx":"6","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Components\\NavBar\\Navbar.jsx":"7","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Tools\\WebsiteResponses.js":"8","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Components\\Modals\\SignupModal.jsx":"9","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Components\\Modals\\LoginModal.jsx":"10","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Components\\ImageCrop\\ImageCrop.js":"11"},{"size":517,"mtime":1611131656604,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1611131656605,"results":"14","hashOfConfig":"13"},{"size":1397,"mtime":1611131656595,"results":"15","hashOfConfig":"13"},{"size":89,"mtime":1611131656603,"results":"16","hashOfConfig":"13"},{"size":1260,"mtime":1611131656600,"results":"17","hashOfConfig":"13"},{"size":5038,"mtime":1611139496769,"results":"18","hashOfConfig":"13"},{"size":3166,"mtime":1611131656598,"results":"19","hashOfConfig":"13"},{"size":1844,"mtime":1611131656603,"results":"20","hashOfConfig":"13"},{"size":3192,"mtime":1611131656597,"results":"21","hashOfConfig":"13"},{"size":2761,"mtime":1611131656596,"results":"22","hashOfConfig":"13"},{"size":2965,"mtime":1611139514722,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1k911i9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\index.js",[],["51","52"],"C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\App.js",["53"],"import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Slides from \"./Components/Slides/Slides\";\r\nimport Navbar from \"./Components/NavBar/Navbar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Authentication } from './Contexts/Authentication';\r\nimport UploadForm from \"./Components/UploadForm/UploadForm\";\r\nimport './App.css'\r\n\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nfunction App() {\r\n  const [isLogged, setIsLogged] = useState(null)\r\n  const token = localStorage.getItem('token')\r\n\r\n  useEffect(() => {\r\n    if(token) {\r\n      setIsLogged(true)\r\n    } else {\r\n      setIsLogged(false)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Authentication.Provider value={{isLogged, setIsLogged}}>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n            <Route path=\"/upload\">\r\n              <UploadForm/>\r\n            </Route>\r\n            <Route path=\"/\" >\r\n              <div className=\"my-container\">\r\n              <Slides />\r\n              {<Link to='/upload' className='open-upload-form' >\r\n              <div>\r\n                  <div> Upload </div>\r\n              </div>\r\n              </Link>}\r\n              {/* <UploadForm /> */}\r\n              </div>\r\n            </Route>         \r\n        </Switch>\r\n      </Router>\r\n    </Authentication.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Contexts\\Authentication.js",[],"C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Components\\Slides\\Slides.jsx",[],"C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Components\\UploadForm\\UploadForm.jsx",["54","55","56"],"C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Components\\NavBar\\Navbar.jsx",["57"],"import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faHome, faPlus, faSignInAlt, faSignOutAlt, faUserMd } from '@fortawesome/free-solid-svg-icons'\r\nimport './Navbar.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { useState, useContext, useRef } from 'react'\r\nimport LoginModal from '../Modals/LoginModal'\r\nimport SignupModal from '../Modals/SignupModal' \r\nimport { Authentication } from '../../Contexts/Authentication';\r\nimport { confirmLogout } from '../../Tools/WebsiteResponses';\r\n\r\nconst Navbar = (props) => {\r\n    const [isLoginOpen,setIsLoginOpen] = useState(false);\r\n    const [isSignupOpen,setIsSignupOpen] = useState(false);\r\n    const {isLogged, setIsLogged} = useContext(Authentication)\r\n    \r\n    const openLogin = () => {\r\n        setIsLoginOpen(true);\r\n    }\r\n    const closeLogin = () => {\r\n        setIsLoginOpen(false)\r\n    }\r\n    const closeSignup = () => {\r\n        setIsSignupOpen(false)\r\n    }\r\n    const handleLogout = () => {\r\n        confirmLogout(setIsLogged);\r\n    }\r\n    \r\n    const modalStyle = {\r\n        overlay: {\r\n            backgroundColor     : '#2b1d13a0'\r\n        },\r\n        content : {\r\n          borderRadius          : '13px',\r\n          border                : '1px solid black',\r\n          backgroundColor       : 'whitesmoke',\r\n          top                   : '50%',\r\n          left                  : '50%',\r\n          right                 : 'auto',\r\n          bottom                : 'auto',\r\n          marginRight           : '-50%',\r\n          transform             : 'translate(-50%, -50%)',\r\n          display               : 'flex',\r\n          flexDirection : 'column',\r\n          justifyContent : 'center',\r\n          zIndex: 3\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo\"> SkinAI </div>\r\n            <ul className=\"nav-links-container\">\r\n                <Link to=\"/\"> \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faHome} size=\"2x\"/></li>\r\n                </Link>\r\n                <Link to=\"/upload\"> \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faPlus} size=\"2x\"/></li>\r\n                </Link>\r\n                {!isLogged && <li className=\"nav-links\" onClick={openLogin}><FontAwesomeIcon color='#36d68b' icon={faSignInAlt} size=\"2x\"/></li>}\r\n                {isLogged && <Link to='/'> \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faUserMd} size=\"2x\"/></li>\r\n                </Link>}\r\n                {isLogged && \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' onClick={handleLogout}icon={faSignOutAlt} size=\"2x\"/></li>\r\n                }\r\n            </ul>\r\n            <LoginModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isLoginOpen={isLoginOpen} closeLogin={closeLogin} modalStyle={modalStyle}/>\r\n            <SignupModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isSignupOpen={isSignupOpen} closeLogin={closeSignup} modalStyle={modalStyle}/>         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar ","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Tools\\WebsiteResponses.js",[],"C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Components\\Modals\\SignupModal.jsx",["58"],"import Modal from 'react-modal';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport { useContext, useState } from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {BASE_URL} from '../../App'\r\nimport { Authentication } from '../../Contexts/Authentication'\r\nimport { signUpSuccess } from '../../Tools/WebsiteResponses';\r\n\r\nconst SignupModal = (props) => {\r\n    const [input, setInput] = useState(null)  // Get input\r\n    const [error, setError] = useState(null) // // Handle error from API\r\n\r\n    const {isLogged, setIsLogged} = useContext(Authentication)\r\n\r\n    const handleChange = (e) => {\r\n        setInput({...input, [e.target.name] : e.target.value})\r\n    }\r\n    const signUp = (e) => {\r\n        e.preventDefault()\r\n        axios.post(`${BASE_URL}/signup`, input)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                setIsLogged(true);\r\n                signUpSuccess();\r\n                localStorage.setItem('token', res.data.token)\r\n                localStorage.setItem('sessionID', res.data.user._id)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const error = err.response.data\r\n            // Define error message based on API\r\n            const errorType = error.message || error.firstName || error.lastName || error.phone \r\n            if(err.response.status === 409) {\r\n                setError(errorType)\r\n            }\r\n        })\r\n    }\r\n\r\n    const errorStyle = {\r\n        color: '#d10000', \r\n        fontSize: '18px', \r\n        marginTop: '10px', \r\n        padding: '7px',\r\n        borderRadius: '9px',\r\n        backgroundColor: 'whitesmoke'\r\n    }\r\n\r\n    const goToLogin = () => {\r\n        props.setIsSignupOpen(false)\r\n        props.setIsLoginOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        isOpen={props.isSignupOpen}\r\n        onRequestClose={props.closeSignup}\r\n        style={props.modalStyle}\r\n        contentLabel=\"Example Modal\"\r\n        closeLogin={props.closeSignup}\r\n          >\r\n        <span onClick={goToLogin} className='modal-close-btn'><FontAwesomeIcon icon={faArrowLeft}/></span>\r\n        <h2 style={{textAlign: 'center', color: '#434343'}}>Signup</h2>\r\n        <Form className ='login-form' onSubmit={signUp}>\r\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm password\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"firstName\" placeholder=\"First name\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"lastName\" placeholder=\"Last name\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"phone\" placeholder=\"Phone number\" onChange={e=>handleChange(e)}/>\r\n            <Button type='submit' className=\"login-btn\"> Signup </Button>\r\n            {error && <span style={errorStyle}> {error} </span>}\r\n        </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SignupModal","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Components\\Modals\\LoginModal.jsx",["59"],"import axios from 'axios'\r\nimport { useContext, useState } from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {BASE_URL} from '../../App'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Authentication } from '../../Contexts/Authentication'\r\nimport Modal from 'react-modal';\r\nimport { signInSuccess } from '../../Tools/WebsiteResponses';\r\n\r\nconst LoginModal = (props) => {\r\n    const [input, setInput] = useState(null) // Get input\r\n    const [error, setError] = useState(null) // Handle error from API\r\n\r\n    const {isLogged, setIsLogged} = useContext(Authentication) \r\n\r\n    const handleChange = (e) => {\r\n        setInput({...input, [e.target.name] : e.target.value})\r\n    }\r\n\r\n    const logIn = (e) => {\r\n        e.preventDefault()\r\n        axios.post(`${BASE_URL}/login`, input)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                signInSuccess()\r\n                setIsLogged(true);\r\n                localStorage.setItem('token', res.data.token)\r\n                localStorage.setItem('sessionID', res.data.user._id)\r\n            }\r\n            props.setIsLoginOpen(false)\r\n        })\r\n        .catch(err => {\r\n            if(err.response.status === 409) {\r\n                setError(err.response.data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const errorStyle = {\r\n        color: '#d10000', \r\n        fontSize: '18px', \r\n        margin: '10px', \r\n        padding: '7px',\r\n        borderRadius: '9px',\r\n        backgroundColor: 'whitesmoke'\r\n    }\r\n\r\n    const goToSignup = () => {\r\n        props.setIsLoginOpen(false)\r\n        props.setIsSignupOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={props.isLoginOpen}\r\n          onRequestClose={props.closeLogin}\r\n          style={props.modalStyle}\r\n          contentLabel=\"Example Modal\"\r\n          closeLogin={props.closeLogin}\r\n            >\r\n            <span onClick={() => props.setIsLoginOpen(false)} className='modal-close-btn'><FontAwesomeIcon icon={faTimes}/></span>\r\n            <h2 style={{textAlign: 'center', color: '#434343'}}>Login</h2>\r\n            <Form className ='login-form' onSubmit={logIn}>\r\n                <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\r\n                <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\r\n                <Button type='submit' className='login-btn'> Login </Button>\r\n                {error && <span style={errorStyle}> {error} </span>}\r\n            </Form>\r\n            <div className='go-to-signup' onClick={goToSignup}> New ? Sign Up ! </div>\r\n       </Modal>\r\n    )\r\n}\r\n\r\nexport default LoginModal","C:\\Users\\user\\Desktop\\Assignments\\SkinAiProject\\SkinAI\\src\\Components\\ImageCrop\\ImageCrop.js",["60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":16,"column":3,"nodeType":"67","endLine":16,"endColumn":12,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":45,"nodeType":"67","messageId":"71","endLine":5,"endColumn":48},{"ruleId":"69","severity":1,"message":"72","line":5,"column":50,"nodeType":"67","messageId":"71","endLine":5,"endColumn":57},{"ruleId":"69","severity":1,"message":"73","line":17,"column":22,"nodeType":"67","messageId":"71","endLine":17,"endColumn":33},{"ruleId":"69","severity":1,"message":"74","line":5,"column":32,"nodeType":"67","messageId":"71","endLine":5,"endColumn":38},{"ruleId":"69","severity":1,"message":"75","line":15,"column":12,"nodeType":"67","messageId":"71","endLine":15,"endColumn":20},{"ruleId":"69","severity":1,"message":"75","line":15,"column":12,"nodeType":"67","messageId":"71","endLine":15,"endColumn":20},{"ruleId":"69","severity":1,"message":"76","line":94,"column":36,"nodeType":"67","messageId":"71","endLine":94,"endColumn":39},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsLogged'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.","Identifier",["79"],"no-unused-vars","'Row' is defined but never used.","unusedVar","'Spinner' is defined but never used.","'setRedirect' is assigned a value but never used.","'useRef' is defined but never used.","'isLogged' is assigned a value but never used.","'src' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Add dependencies array: [token]",{"range":"82","text":"83"},[710,710],", [token]"]