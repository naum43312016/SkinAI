[{"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\index.js":"1","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\reportWebVitals.js":"2","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\App.js":"3","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Contexts\\Authentication.js":"4","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\UploadForm\\UploadForm.jsx":"5","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Slides\\Slides.jsx":"6","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\NavBar\\Navbar.jsx":"7","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Modals\\LoginModal.jsx":"8","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Modals\\SignupModal.jsx":"9","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Tools\\WebsiteResponses.js":"10"},{"size":517,"mtime":1610998001924,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1610998001924,"results":"13","hashOfConfig":"12"},{"size":1397,"mtime":1611075503635,"results":"14","hashOfConfig":"12"},{"size":89,"mtime":1611047761048,"results":"15","hashOfConfig":"12"},{"size":4290,"mtime":1611088619961,"results":"16","hashOfConfig":"12"},{"size":1260,"mtime":1611075503636,"results":"17","hashOfConfig":"12"},{"size":3166,"mtime":1611081420319,"results":"18","hashOfConfig":"12"},{"size":2761,"mtime":1611082028689,"results":"19","hashOfConfig":"12"},{"size":3192,"mtime":1611082097630,"results":"20","hashOfConfig":"12"},{"size":1844,"mtime":1611086758992,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"hewr9m",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\index.js",[],["48","49"],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\reportWebVitals.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\App.js",["50"],"import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Slides from \"./Components/Slides/Slides\";\r\nimport Navbar from \"./Components/NavBar/Navbar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Authentication } from './Contexts/Authentication';\r\nimport UploadForm from \"./Components/UploadForm/UploadForm\";\r\nimport './App.css'\r\n\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nfunction App() {\r\n  const [isLogged, setIsLogged] = useState(null)\r\n  const token = localStorage.getItem('token')\r\n\r\n  useEffect(() => {\r\n    if(token) {\r\n      setIsLogged(true)\r\n    } else {\r\n      setIsLogged(false)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Authentication.Provider value={{isLogged, setIsLogged}}>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n            <Route path=\"/upload\">\r\n              <UploadForm/>\r\n            </Route>\r\n            <Route path=\"/\" >\r\n              <div className=\"my-container\">\r\n              <Slides />\r\n              {<Link to='/upload' className='open-upload-form' >\r\n              <div>\r\n                  <div> Upload </div>\r\n              </div>\r\n              </Link>}\r\n              {/* <UploadForm /> */}\r\n              </div>\r\n            </Route>         \r\n        </Switch>\r\n      </Router>\r\n    </Authentication.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Contexts\\Authentication.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\UploadForm\\UploadForm.jsx",["51","52"],"import { faCamera } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from 'axios';\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { Container, Form, Button, Dropdown, Row } from 'react-bootstrap'\r\nimport './UploadForm.css'\r\nimport { Redirect } from 'react-router'\r\nimport { itemUploaded, formImageIssue, displayFormDoctorImage } from '../../Tools/WebsiteResponses';\r\nimport ModalDoctorDisplay from './ModalDoctorDisplay.png';\r\n\r\nconst UploadForm = () => {\r\n    const [infos, setInfos] = useState(null)\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [pic, setPic] = useState({ selectedFile: null })\r\n    const [previewPic, setPreviewPic] = useState(\"\")\r\n    const [redirect, setRedirect] = useState(false) // in case of success\r\n    const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    const ref = useRef(null)\r\n\r\n    const handleChange = (e) => {\r\n        setInfos({\r\n            ...infos,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const imageUploadStyle = {\r\n        color: \"#434343\",\r\n        fontSize: \"35px\",\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        setInfos({ ...infos, category: e.target.name })\r\n    }\r\n\r\n    const uploadForm = (e) => {\r\n        e.preventDefault()\r\n        const data = new FormData()\r\n        for (let key in infos) {\r\n            data.append(key, infos[key])\r\n        }\r\n        console.log(pic.selectedFile)\r\n        if (pic.selectedFile) {\r\n            data.append('user', localStorage.getItem('sessionID'));\r\n            data.append('image', pic.selectedFile);\r\n        }\r\n        axios.post(`${BASE_URL}/upload-image`, data)\r\n            .then(res => itemUploaded('Image Uploaded'))\r\n            .catch(err => formImageIssue(\"There was an issue uploading your image\"));\r\n    }\r\n\r\n    useEffect(() => {\r\n        displayFormDoctorImage(ModalDoctorDisplay);\r\n    }, [])\r\n\r\n    const imageUploader = (e) => {\r\n        const file = e.target.files[0]\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => {\r\n            console.log(e.target.result)\r\n            setPreviewPic(e.target.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n        setPic({selectedFile :e.target.files[0]})\r\n    }\r\n\r\n    if (redirect) {\r\n        return (\r\n            <Redirect to={BASE_URL} />\r\n        )\r\n    }\r\n    return (\r\n        <Container>\r\n            <Form action=\"\" name=\"image\" className=\"upload-form\" onSubmit={e => uploadForm(e)} method=\"post\" enctype=\"multipart/form-data\">\r\n                <div>\r\n                    <h5 className=\"mt-5\">1. Keep the spot in the absolute middle of the picture.</h5>\r\n                    <br />\r\n                    <h5>2. Make sure the quality of the picture is good enough.</h5>\r\n                    <br />\r\n                    <h5>3. Do not take a picture in a dark environment.</h5>\r\n                </div>\r\n                <input type=\"file\" name=\"image\" ref={ref} id=\"hidden\" onChange={(e) => imageUploader(e)} />\r\n                <div className=\"image-upload\" onClick={() => ref.current.click()}><FontAwesomeIcon style={imageUploadStyle} icon={faCamera} /></div>\r\n                {previewPic && <div className=\"image-preview\"><img src={previewPic} alt=\"loaded pic\" /></div>}\r\n                <Form.Control className=\"upload-input\" name=\"name\" placeholder=\"Name\" onChange={e => handleChange(e)} />\r\n                <Form.Control className=\"upload-input\" type=\"number\" name=\"age\" placeholder=\"Age\" onChange={e => handleChange(e)} />\r\n                <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                    <Dropdown.Toggle caret>{(infos && infos.category) || 'Gender'}</Dropdown.Toggle>\r\n                    <Dropdown.Menu align='right'>\r\n                        <Dropdown.Item onClick={(e) => handleSelect(e)} name='Male'> Male </Dropdown.Item>\r\n                        <Dropdown.Item onClick={(e) => handleSelect(e)} name='Female'> Female </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Button type=\"submit\"> Add an item </Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UploadForm","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Slides\\Slides.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\NavBar\\Navbar.jsx",["53"],"import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faHome, faPlus, faSignInAlt, faSignOutAlt, faUserMd } from '@fortawesome/free-solid-svg-icons'\r\nimport './Navbar.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { useState, useContext, useRef } from 'react'\r\nimport LoginModal from '../Modals/LoginModal'\r\nimport SignupModal from '../Modals/SignupModal' \r\nimport { Authentication } from '../../Contexts/Authentication';\r\nimport { confirmLogout } from '../../Tools/WebsiteResponses';\r\n\r\nconst Navbar = (props) => {\r\n    const [isLoginOpen,setIsLoginOpen] = useState(false);\r\n    const [isSignupOpen,setIsSignupOpen] = useState(false);\r\n    const {isLogged, setIsLogged} = useContext(Authentication)\r\n    \r\n    const openLogin = () => {\r\n        setIsLoginOpen(true);\r\n    }\r\n    const closeLogin = () => {\r\n        setIsLoginOpen(false)\r\n    }\r\n    const closeSignup = () => {\r\n        setIsSignupOpen(false)\r\n    }\r\n    const handleLogout = () => {\r\n        confirmLogout(setIsLogged);\r\n    }\r\n    \r\n    const modalStyle = {\r\n        overlay: {\r\n            backgroundColor     : '#2b1d13a0'\r\n        },\r\n        content : {\r\n          borderRadius          : '13px',\r\n          border                : '1px solid black',\r\n          backgroundColor       : 'whitesmoke',\r\n          top                   : '50%',\r\n          left                  : '50%',\r\n          right                 : 'auto',\r\n          bottom                : 'auto',\r\n          marginRight           : '-50%',\r\n          transform             : 'translate(-50%, -50%)',\r\n          display               : 'flex',\r\n          flexDirection : 'column',\r\n          justifyContent : 'center',\r\n          zIndex: 3\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo\"> SkinAI </div>\r\n            <ul className=\"nav-links-container\">\r\n                <Link to=\"/\"> \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faHome} size=\"2x\"/></li>\r\n                </Link>\r\n                <Link to=\"/upload\"> \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faPlus} size=\"2x\"/></li>\r\n                </Link>\r\n                {!isLogged && <li className=\"nav-links\" onClick={openLogin}><FontAwesomeIcon color='#36d68b' icon={faSignInAlt} size=\"2x\"/></li>}\r\n                {isLogged && <Link to='/'> \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faUserMd} size=\"2x\"/></li>\r\n                </Link>}\r\n                {isLogged && \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' onClick={handleLogout}icon={faSignOutAlt} size=\"2x\"/></li>\r\n                }\r\n            </ul>\r\n            <LoginModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isLoginOpen={isLoginOpen} closeLogin={closeLogin} modalStyle={modalStyle}/>\r\n            <SignupModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isSignupOpen={isSignupOpen} closeLogin={closeSignup} modalStyle={modalStyle}/>         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar ","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Modals\\LoginModal.jsx",["54"],"import axios from 'axios'\r\nimport { useContext, useState } from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {BASE_URL} from '../../App'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Authentication } from '../../Contexts/Authentication'\r\nimport Modal from 'react-modal';\r\nimport { signInSuccess } from '../../Tools/WebsiteResponses';\r\n\r\nconst LoginModal = (props) => {\r\n    const [input, setInput] = useState(null) // Get input\r\n    const [error, setError] = useState(null) // Handle error from API\r\n\r\n    const {isLogged, setIsLogged} = useContext(Authentication) \r\n\r\n    const handleChange = (e) => {\r\n        setInput({...input, [e.target.name] : e.target.value})\r\n    }\r\n\r\n    const logIn = (e) => {\r\n        e.preventDefault()\r\n        axios.post(`${BASE_URL}/login`, input)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                signInSuccess()\r\n                setIsLogged(true);\r\n                localStorage.setItem('token', res.data.token)\r\n                localStorage.setItem('sessionID', res.data.user._id)\r\n            }\r\n            props.setIsLoginOpen(false)\r\n        })\r\n        .catch(err => {\r\n            if(err.response.status === 409) {\r\n                setError(err.response.data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const errorStyle = {\r\n        color: '#d10000', \r\n        fontSize: '18px', \r\n        margin: '10px', \r\n        padding: '7px',\r\n        borderRadius: '9px',\r\n        backgroundColor: 'whitesmoke'\r\n    }\r\n\r\n    const goToSignup = () => {\r\n        props.setIsLoginOpen(false)\r\n        props.setIsSignupOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={props.isLoginOpen}\r\n          onRequestClose={props.closeLogin}\r\n          style={props.modalStyle}\r\n          contentLabel=\"Example Modal\"\r\n          closeLogin={props.closeLogin}\r\n            >\r\n            <span onClick={() => props.setIsLoginOpen(false)} className='modal-close-btn'><FontAwesomeIcon icon={faTimes}/></span>\r\n            <h2 style={{textAlign: 'center', color: '#434343'}}>Login</h2>\r\n            <Form className ='login-form' onSubmit={logIn}>\r\n                <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\r\n                <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\r\n                <Button type='submit' className='login-btn'> Login </Button>\r\n                {error && <span style={errorStyle}> {error} </span>}\r\n            </Form>\r\n            <div className='go-to-signup' onClick={goToSignup}> New ? Sign Up ! </div>\r\n       </Modal>\r\n    )\r\n}\r\n\r\nexport default LoginModal","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Modals\\SignupModal.jsx",["55"],"import Modal from 'react-modal';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport { useContext, useState } from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {BASE_URL} from '../../App'\r\nimport { Authentication } from '../../Contexts/Authentication'\r\nimport { signUpSuccess } from '../../Tools/WebsiteResponses';\r\n\r\nconst SignupModal = (props) => {\r\n    const [input, setInput] = useState(null)  // Get input\r\n    const [error, setError] = useState(null) // // Handle error from API\r\n\r\n    const {isLogged, setIsLogged} = useContext(Authentication)\r\n\r\n    const handleChange = (e) => {\r\n        setInput({...input, [e.target.name] : e.target.value})\r\n    }\r\n    const signUp = (e) => {\r\n        e.preventDefault()\r\n        axios.post(`${BASE_URL}/signup`, input)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                setIsLogged(true);\r\n                signUpSuccess();\r\n                localStorage.setItem('token', res.data.token)\r\n                localStorage.setItem('sessionID', res.data.user._id)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const error = err.response.data\r\n            // Define error message based on API\r\n            const errorType = error.message || error.firstName || error.lastName || error.phone \r\n            if(err.response.status === 409) {\r\n                setError(errorType)\r\n            }\r\n        })\r\n    }\r\n\r\n    const errorStyle = {\r\n        color: '#d10000', \r\n        fontSize: '18px', \r\n        marginTop: '10px', \r\n        padding: '7px',\r\n        borderRadius: '9px',\r\n        backgroundColor: 'whitesmoke'\r\n    }\r\n\r\n    const goToLogin = () => {\r\n        props.setIsSignupOpen(false)\r\n        props.setIsLoginOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        isOpen={props.isSignupOpen}\r\n        onRequestClose={props.closeSignup}\r\n        style={props.modalStyle}\r\n        contentLabel=\"Example Modal\"\r\n        closeLogin={props.closeSignup}\r\n          >\r\n        <span onClick={goToLogin} className='modal-close-btn'><FontAwesomeIcon icon={faArrowLeft}/></span>\r\n        <h2 style={{textAlign: 'center', color: '#434343'}}>Signup</h2>\r\n        <Form className ='login-form' onSubmit={signUp}>\r\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm password\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"firstName\" placeholder=\"First name\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"lastName\" placeholder=\"Last name\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"phone\" placeholder=\"Phone number\" onChange={e=>handleChange(e)}/>\r\n            <Button type='submit' className=\"login-btn\"> Signup </Button>\r\n            {error && <span style={errorStyle}> {error} </span>}\r\n        </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SignupModal","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Tools\\WebsiteResponses.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":16,"column":3,"nodeType":"62","endLine":16,"endColumn":12,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":5,"column":45,"nodeType":"62","messageId":"66","endLine":5,"endColumn":48},{"ruleId":"64","severity":1,"message":"67","line":16,"column":22,"nodeType":"62","messageId":"66","endLine":16,"endColumn":33},{"ruleId":"64","severity":1,"message":"68","line":5,"column":32,"nodeType":"62","messageId":"66","endLine":5,"endColumn":38},{"ruleId":"64","severity":1,"message":"69","line":15,"column":12,"nodeType":"62","messageId":"66","endLine":15,"endColumn":20},{"ruleId":"64","severity":1,"message":"69","line":15,"column":12,"nodeType":"62","messageId":"66","endLine":15,"endColumn":20},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsLogged'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.","Identifier",["72"],"no-unused-vars","'Row' is defined but never used.","unusedVar","'setRedirect' is assigned a value but never used.","'useRef' is defined but never used.","'isLogged' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Add dependencies array: [token]",{"range":"75","text":"76"},[710,710],", [token]"]