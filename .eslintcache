[{"/Users/doronassness/Desktop/untitled folder/SkinAI/src/index.js":"1","/Users/doronassness/Desktop/untitled folder/SkinAI/src/reportWebVitals.js":"2","/Users/doronassness/Desktop/untitled folder/SkinAI/src/App.js":"3","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Contexts/Authentication.js":"4","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/NavBar/Navbar.jsx":"5","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/Slides/Slides.jsx":"6","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/UploadForm/UploadForm.jsx":"7","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Tools/WebsiteResponses.js":"8","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/Modals/LoginModal.jsx":"9","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/Modals/SignupModal.jsx":"10","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/Prediction/Prediction.jsx":"11","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/GoogleMap/GoogleMap.jsx":"12","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/GoogleMap/MapContainer.jsx":"13","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/GoogleMap/mapsModal.jsx":"14"},{"size":500,"mtime":1611127398063,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1611127398063,"results":"17","hashOfConfig":"16"},{"size":1521,"mtime":1611132736162,"results":"18","hashOfConfig":"16"},{"size":86,"mtime":1611127398062,"results":"19","hashOfConfig":"16"},{"size":3093,"mtime":1611127398061,"results":"20","hashOfConfig":"16"},{"size":1155,"mtime":1611130670022,"results":"21","hashOfConfig":"16"},{"size":4195,"mtime":1611127398062,"results":"22","hashOfConfig":"16"},{"size":1762,"mtime":1611127398062,"results":"23","hashOfConfig":"16"},{"size":2687,"mtime":1611127398060,"results":"24","hashOfConfig":"16"},{"size":3114,"mtime":1611127398060,"results":"25","hashOfConfig":"16"},{"size":366,"mtime":1611136446017,"results":"26","hashOfConfig":"16"},{"size":2152,"mtime":1611133597485,"results":"27","hashOfConfig":"16"},{"size":2370,"mtime":1611136653987,"results":"28","hashOfConfig":"16"},{"size":898,"mtime":1611136299599,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1s23aik",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/doronassness/Desktop/untitled folder/SkinAI/src/index.js",[],["64","65"],"/Users/doronassness/Desktop/untitled folder/SkinAI/src/reportWebVitals.js",[],"/Users/doronassness/Desktop/untitled folder/SkinAI/src/App.js",["66"],"import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Slides from \"./Components/Slides/Slides\";\nimport Navbar from \"./Components/NavBar/Navbar\";\nimport { useEffect, useState } from \"react\";\nimport { Authentication } from \"./Contexts/Authentication\";\nimport UploadForm from \"./Components/UploadForm/UploadForm\";\nimport \"./App.css\";\nimport Prediction from \"./Components/Prediction/Prediction\";\n\nexport const BASE_URL = process.env.REACT_APP_BASE_URL;\n\nfunction App() {\n  const [isLogged, setIsLogged] = useState(null);\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    if (token) {\n      setIsLogged(true);\n    } else {\n      setIsLogged(false);\n    }\n  });\n\n  return (\n    <Authentication.Provider value={{ isLogged, setIsLogged }}>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/upload\">\n            <UploadForm />\n          </Route>\n          <Route path=\"/Prediction\">\n            <Prediction />\n          </Route>\n          <Route path=\"/\">\n            <div className=\"my-container\">\n              <Slides />\n              {\n                <Link to=\"/upload\" className=\"open-upload-form\">\n                  <div>\n                    <div> Upload </div>\n                  </div>\n                </Link>\n              }\n              {/* <UploadForm /> */}\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </Authentication.Provider>\n  );\n}\n\nexport default App;\n","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Contexts/Authentication.js",[],"/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/NavBar/Navbar.jsx",["67"],"import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faHome, faPlus, faSignInAlt, faSignOutAlt, faUserMd } from '@fortawesome/free-solid-svg-icons'\nimport './Navbar.css'\nimport {Link} from 'react-router-dom'\nimport { useState, useContext, useRef } from 'react'\nimport LoginModal from '../Modals/LoginModal'\nimport SignupModal from '../Modals/SignupModal' \nimport { Authentication } from '../../Contexts/Authentication';\nimport { confirmLogout } from '../../Tools/WebsiteResponses';\n\nconst Navbar = (props) => {\n    const [isLoginOpen,setIsLoginOpen] = useState(false);\n    const [isSignupOpen,setIsSignupOpen] = useState(false);\n    const {isLogged, setIsLogged} = useContext(Authentication)\n    \n    const openLogin = () => {\n        setIsLoginOpen(true);\n    }\n    const closeLogin = () => {\n        setIsLoginOpen(false)\n    }\n    const closeSignup = () => {\n        setIsSignupOpen(false)\n    }\n    const handleLogout = () => {\n        confirmLogout(setIsLogged);\n    }\n    \n    const modalStyle = {\n        overlay: {\n            backgroundColor     : '#2b1d13a0'\n        },\n        content : {\n          borderRadius          : '13px',\n          border                : '1px solid black',\n          backgroundColor       : 'whitesmoke',\n          top                   : '50%',\n          left                  : '50%',\n          right                 : 'auto',\n          bottom                : 'auto',\n          marginRight           : '-50%',\n          transform             : 'translate(-50%, -50%)',\n          display               : 'flex',\n          flexDirection : 'column',\n          justifyContent : 'center',\n          zIndex: 3\n        }\n      };\n\n    return (\n        <div className=\"nav-container\">\n            <div className=\"logo\"> SkinAI </div>\n            <ul className=\"nav-links-container\">\n                <Link to=\"/\"> \n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faHome} size=\"2x\"/></li>\n                </Link>\n                <Link to=\"/upload\"> \n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faPlus} size=\"2x\"/></li>\n                </Link>\n                {!isLogged && <li className=\"nav-links\" onClick={openLogin}><FontAwesomeIcon color='#36d68b' icon={faSignInAlt} size=\"2x\"/></li>}\n                {isLogged && <Link to='/'> \n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faUserMd} size=\"2x\"/></li>\n                </Link>}\n                {isLogged && \n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' onClick={handleLogout}icon={faSignOutAlt} size=\"2x\"/></li>\n                }\n            </ul>\n            <LoginModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isLoginOpen={isLoginOpen} closeLogin={closeLogin} modalStyle={modalStyle}/>\n            <SignupModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isSignupOpen={isSignupOpen} closeLogin={closeSignup} modalStyle={modalStyle}/>         \n        </div>\n    )\n}\n\nexport default Navbar ","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/Slides/Slides.jsx",[],"/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/UploadForm/UploadForm.jsx",["68","69"],"import { faCamera } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react'\nimport { Container, Form, Button, Dropdown, Row } from 'react-bootstrap'\nimport './UploadForm.css'\nimport { Redirect } from 'react-router'\nimport { itemUploaded, formImageIssue, displayFormDoctorImage } from '../../Tools/WebsiteResponses';\nimport ModalDoctorDisplay from './ModalDoctorDisplay.png';\n\nconst UploadForm = () => {\n    const [infos, setInfos] = useState(null)\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [pic, setPic] = useState({ selectedFile: null })\n    const [previewPic, setPreviewPic] = useState(\"\")\n    const [redirect, setRedirect] = useState(false) // in case of success\n    const BASE_URL = process.env.REACT_APP_BASE_URL;\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    const ref = useRef(null)\n\n    const handleChange = (e) => {\n        setInfos({\n            ...infos,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const imageUploadStyle = {\n        color: \"#434343\",\n        fontSize: \"35px\",\n    }\n\n    const handleSelect = (e) => {\n        setInfos({ ...infos, category: e.target.name })\n    }\n\n    const uploadForm = (e) => {\n        e.preventDefault()\n        const data = new FormData()\n        for (let key in infos) {\n            data.append(key, infos[key])\n        }\n        console.log(pic.selectedFile)\n        if (pic.selectedFile) {\n            data.append('user', localStorage.getItem('sessionID'));\n            data.append('image', pic.selectedFile);\n        }\n        axios.post(`${BASE_URL}/upload-image`, data)\n            .then(res => itemUploaded('Image Uploaded'))\n            .catch(err => formImageIssue(\"There was an issue uploading your image\"));\n    }\n\n    useEffect(() => {\n        displayFormDoctorImage(ModalDoctorDisplay);\n    }, [])\n\n    const imageUploader = (e) => {\n        const file = e.target.files[0]\n        const reader = new FileReader()\n        reader.onload = (e) => {\n            console.log(e.target.result)\n            setPreviewPic(e.target.result)\n        }\n        reader.readAsDataURL(file)\n        setPic({selectedFile :e.target.files[0]})\n    }\n\n    if (redirect) {\n        return (\n            <Redirect to={BASE_URL} />\n        )\n    }\n    return (\n        <Container>\n            <Form action=\"\" name=\"image\" className=\"upload-form\" onSubmit={e => uploadForm(e)} method=\"post\" enctype=\"multipart/form-data\">\n                <div>\n                    <h5 className=\"mt-5\">1. Keep the spot in the absolute middle of the picture.</h5>\n                    <br />\n                    <h5>2. Make sure the quality of the picture is good enough.</h5>\n                    <br />\n                    <h5>3. Do not take a picture in a dark environment.</h5>\n                </div>\n                <input type=\"file\" name=\"image\" ref={ref} id=\"hidden\" onChange={(e) => imageUploader(e)} />\n                <div className=\"image-upload\" onClick={() => ref.current.click()}><FontAwesomeIcon style={imageUploadStyle} icon={faCamera} /></div>\n                {previewPic && <div className=\"image-preview\"><img src={previewPic} alt=\"loaded pic\" /></div>}\n                <Form.Control className=\"upload-input\" name=\"name\" placeholder=\"Name\" onChange={e => handleChange(e)} />\n                <Form.Control className=\"upload-input\" type=\"number\" name=\"age\" placeholder=\"Age\" onChange={e => handleChange(e)} />\n                <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                    <Dropdown.Toggle caret>{(infos && infos.category) || 'Gender'}</Dropdown.Toggle>\n                    <Dropdown.Menu align='right'>\n                        <Dropdown.Item onClick={(e) => handleSelect(e)} name='Male'> Male </Dropdown.Item>\n                        <Dropdown.Item onClick={(e) => handleSelect(e)} name='Female'> Female </Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <Button type=\"submit\"> Submit for results </Button>\n            </Form>\n        </Container>\n    )\n}\n\nexport default UploadForm","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Tools/WebsiteResponses.js",[],"/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/Modals/LoginModal.jsx",["70"],"import axios from 'axios'\nimport { useContext, useState } from 'react'\nimport {Form, Button} from 'react-bootstrap'\nimport {BASE_URL} from '../../App'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Authentication } from '../../Contexts/Authentication'\nimport Modal from 'react-modal';\nimport { signInSuccess } from '../../Tools/WebsiteResponses';\n\nconst LoginModal = (props) => {\n    const [input, setInput] = useState(null) // Get input\n    const [error, setError] = useState(null) // Handle error from API\n\n    const {isLogged, setIsLogged} = useContext(Authentication) \n\n    const handleChange = (e) => {\n        setInput({...input, [e.target.name] : e.target.value})\n    }\n\n    const logIn = (e) => {\n        e.preventDefault()\n        axios.post(`${BASE_URL}/login`, input)\n        .then(res => {\n            if (res.status === 200) {\n                signInSuccess()\n                setIsLogged(true);\n                localStorage.setItem('token', res.data.token)\n                localStorage.setItem('sessionID', res.data.user._id)\n            }\n            props.setIsLoginOpen(false)\n        })\n        .catch(err => {\n            if(err.response.status === 409) {\n                setError(err.response.data.message)\n            }\n        })\n    }\n\n    const errorStyle = {\n        color: '#d10000', \n        fontSize: '18px', \n        margin: '10px', \n        padding: '7px',\n        borderRadius: '9px',\n        backgroundColor: 'whitesmoke'\n    }\n\n    const goToSignup = () => {\n        props.setIsLoginOpen(false)\n        props.setIsSignupOpen(true)\n    }\n\n    return (\n        <Modal\n          isOpen={props.isLoginOpen}\n          onRequestClose={props.closeLogin}\n          style={props.modalStyle}\n          contentLabel=\"Example Modal\"\n          closeLogin={props.closeLogin}\n            >\n            <span onClick={() => props.setIsLoginOpen(false)} className='modal-close-btn'><FontAwesomeIcon icon={faTimes}/></span>\n            <h2 style={{textAlign: 'center', color: '#434343'}}>Login</h2>\n            <Form className ='login-form' onSubmit={logIn}>\n                <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\n                <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\n                <Button type='submit' className='login-btn'> Login </Button>\n                {error && <span style={errorStyle}> {error} </span>}\n            </Form>\n            <div className='go-to-signup' onClick={goToSignup}> New ? Sign Up ! </div>\n       </Modal>\n    )\n}\n\nexport default LoginModal","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/Modals/SignupModal.jsx",["71"],"import Modal from 'react-modal';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport axios from 'axios'\nimport { useContext, useState } from 'react'\nimport {Form, Button} from 'react-bootstrap'\nimport {BASE_URL} from '../../App'\nimport { Authentication } from '../../Contexts/Authentication'\nimport { signUpSuccess } from '../../Tools/WebsiteResponses';\n\nconst SignupModal = (props) => {\n    const [input, setInput] = useState(null)  // Get input\n    const [error, setError] = useState(null) // // Handle error from API\n\n    const {isLogged, setIsLogged} = useContext(Authentication)\n\n    const handleChange = (e) => {\n        setInput({...input, [e.target.name] : e.target.value})\n    }\n    const signUp = (e) => {\n        e.preventDefault()\n        axios.post(`${BASE_URL}/signup`, input)\n        .then(res => {\n            if (res.status === 200) {\n                setIsLogged(true);\n                signUpSuccess();\n                localStorage.setItem('token', res.data.token)\n                localStorage.setItem('sessionID', res.data.user._id)\n            }\n        })\n        .catch(err => {\n            const error = err.response.data\n            // Define error message based on API\n            const errorType = error.message || error.firstName || error.lastName || error.phone \n            if(err.response.status === 409) {\n                setError(errorType)\n            }\n        })\n    }\n\n    const errorStyle = {\n        color: '#d10000', \n        fontSize: '18px', \n        marginTop: '10px', \n        padding: '7px',\n        borderRadius: '9px',\n        backgroundColor: 'whitesmoke'\n    }\n\n    const goToLogin = () => {\n        props.setIsSignupOpen(false)\n        props.setIsLoginOpen(true)\n    }\n\n    return (\n        <Modal\n        isOpen={props.isSignupOpen}\n        onRequestClose={props.closeSignup}\n        style={props.modalStyle}\n        contentLabel=\"Example Modal\"\n        closeLogin={props.closeSignup}\n          >\n        <span onClick={goToLogin} className='modal-close-btn'><FontAwesomeIcon icon={faArrowLeft}/></span>\n        <h2 style={{textAlign: 'center', color: '#434343'}}>Signup</h2>\n        <Form className ='login-form' onSubmit={signUp}>\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\n            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\n            <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm password\" onChange={e=>handleChange(e)}/>\n            <Form.Control name=\"firstName\" placeholder=\"First name\" onChange={e=>handleChange(e)}/>\n            <Form.Control name=\"lastName\" placeholder=\"Last name\" onChange={e=>handleChange(e)}/>\n            <Form.Control name=\"phone\" placeholder=\"Phone number\" onChange={e=>handleChange(e)}/>\n            <Button type='submit' className=\"login-btn\"> Signup </Button>\n            {error && <span style={errorStyle}> {error} </span>}\n        </Form>\n        </Modal>\n    )\n}\n\nexport default SignupModal","/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/Prediction/Prediction.jsx",["72","73","74","75"],"/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/GoogleMap/GoogleMap.jsx",["76","77","78","79"],"/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/GoogleMap/MapContainer.jsx",[],"/Users/doronassness/Desktop/untitled folder/SkinAI/src/Components/GoogleMap/mapsModal.jsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":17,"column":3,"nodeType":"86","endLine":17,"endColumn":12,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":5,"column":32,"nodeType":"86","messageId":"90","endLine":5,"endColumn":38},{"ruleId":"88","severity":1,"message":"91","line":5,"column":45,"nodeType":"86","messageId":"90","endLine":5,"endColumn":48},{"ruleId":"88","severity":1,"message":"92","line":16,"column":22,"nodeType":"86","messageId":"90","endLine":16,"endColumn":33},{"ruleId":"88","severity":1,"message":"93","line":15,"column":12,"nodeType":"86","messageId":"90","endLine":15,"endColumn":20},{"ruleId":"88","severity":1,"message":"93","line":15,"column":12,"nodeType":"86","messageId":"90","endLine":15,"endColumn":20},{"ruleId":"88","severity":1,"message":"94","line":1,"column":27,"nodeType":"86","messageId":"90","endLine":1,"endColumn":31},{"ruleId":"88","severity":1,"message":"95","line":1,"column":33,"nodeType":"86","messageId":"90","endLine":1,"endColumn":39},{"ruleId":"88","severity":1,"message":"96","line":1,"column":41,"nodeType":"86","messageId":"90","endLine":1,"endColumn":49},{"ruleId":"88","severity":1,"message":"91","line":1,"column":51,"nodeType":"86","messageId":"90","endLine":1,"endColumn":54},{"ruleId":"88","severity":1,"message":"97","line":2,"column":33,"nodeType":"86","messageId":"90","endLine":2,"endColumn":43},{"ruleId":"88","severity":1,"message":"98","line":2,"column":45,"nodeType":"86","messageId":"90","endLine":2,"endColumn":51},{"ruleId":"99","severity":1,"message":"100","line":29,"column":18,"nodeType":"101","messageId":"102","endLine":29,"endColumn":20},{"ruleId":"88","severity":1,"message":"103","line":35,"column":15,"nodeType":"86","messageId":"90","endLine":35,"endColumn":20},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsLogged'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.","Identifier",["106"],"no-unused-vars","'useRef' is defined but never used.","unusedVar","'Row' is defined but never used.","'setRedirect' is assigned a value but never used.","'isLogged' is assigned a value but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Dropdown' is defined but never used.","'InfoWindow' is defined but never used.","'Marker' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'image' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Add dependencies array: [token]",{"range":"109","text":"110"},[756,756],", [token]"]