[{"/home/burslf/ITC/SkinAI/frontend/src/index.js":"1","/home/burslf/ITC/SkinAI/frontend/src/App.js":"2","/home/burslf/ITC/SkinAI/frontend/src/reportWebVitals.js":"3","/home/burslf/ITC/SkinAI/frontend/src/Components/About/About.jsx":"4","/home/burslf/ITC/SkinAI/frontend/src/Components/NavBar/Navbar.jsx":"5","/home/burslf/ITC/SkinAI/frontend/src/Components/Modals/LoginModal.jsx":"6","/home/burslf/ITC/SkinAI/frontend/src/Components/Modals/SignupModal.jsx":"7","/home/burslf/ITC/SkinAI/frontend/src/Components/Modals/LogoutModal.jsx":"8","/home/burslf/ITC/SkinAI/frontend/src/Contexts/Authentication.js":"9"},{"size":500,"mtime":1610985285359,"results":"10","hashOfConfig":"11"},{"size":958,"mtime":1610997820794,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610985285359,"results":"13","hashOfConfig":"11"},{"size":575,"mtime":1610985285359,"results":"14","hashOfConfig":"11"},{"size":3066,"mtime":1610999143146,"results":"15","hashOfConfig":"11"},{"size":2588,"mtime":1610998856247,"results":"16","hashOfConfig":"11"},{"size":3014,"mtime":1610998934474,"results":"17","hashOfConfig":"11"},{"size":1024,"mtime":1610999055707,"results":"18","hashOfConfig":"11"},{"size":86,"mtime":1610996907696,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"lllxnl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/burslf/ITC/SkinAI/frontend/src/index.js",[],["44","45"],"/home/burslf/ITC/SkinAI/frontend/src/App.js",["46","47"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport About from \"./Components/About/About\";\nimport Navbar from \"./Components/NavBar/Navbar\";\nimport { useEffect, useState } from \"react\";\nimport { Authentication } from './Contexts/Authentication';\n\nexport const BASE_URL = process.env.REACT_APP_BASE_URL;\n\nfunction App() {\n  const [isLogged, setIsLogged] = useState(null)\n  const token = localStorage.getItem('token')\n\n  useEffect(() => {\n    if(localStorage.getItem('token')) {\n      setIsLogged(true)\n    } else {\n      setIsLogged(false)\n    }\n  })\n\n  return (\n    <Authentication.Provider value={{isLogged, setIsLogged}}>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/prediction\"></Route>\n          <Route path=\"/\">\n            <About />\n          </Route>\n        </Switch>\n      </Router>\n    </Authentication.Provider>\n\n  );\n}\n\nexport default App;\n","/home/burslf/ITC/SkinAI/frontend/src/reportWebVitals.js",[],"/home/burslf/ITC/SkinAI/frontend/src/Components/About/About.jsx",[],"/home/burslf/ITC/SkinAI/frontend/src/Components/NavBar/Navbar.jsx",["48","49"],"import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faHome, faSignInAlt, faSignOutAlt, faUserMd } from '@fortawesome/free-solid-svg-icons'\nimport './Navbar.css'\nimport {Link} from 'react-router-dom'\nimport { useState, useContext } from 'react'\nimport Modal from 'react-modal';\nimport LoginModal from '../Modals/LoginModal'\nimport SignupModal from '../Modals/SignupModal' \nimport LogoutModal from '../Modals/LogoutModal'\nimport { Authentication } from '../../Contexts/Authentication';\n\nconst Navbar = (props) => {\n    const [isLoginOpen,setIsLoginOpen] = useState(false);\n    const [isSignupOpen,setIsSignupOpen] = useState(false);\n    const [isLogoutOpen,setIsLogoutOpen] = useState(false);\n    const {isLogged, setIsLogged} = useContext(Authentication)\n\n    const openLogin = () => {\n        setIsLoginOpen(true)\n    }\n    const closeLogin = () => {\n        setIsLoginOpen(false)\n    }\n    const closeSignup = () => {\n        setIsSignupOpen(false)\n    }\n    const handleLogout = () => {\n        setIsLogoutOpen(true)\n    }\n    \n    const modalStyle = {\n        overlay: {\n            backgroundColor     : '#2b1d13a0'\n        },\n        content : {\n          borderRadius          : '13px',\n          border                : '1px solid black',\n          backgroundColor       : '#997b66',\n          top                   : '50%',\n          left                  : '50%',\n          right                 : 'auto',\n          bottom                : 'auto',\n          marginRight           : '-50%',\n          transform             : 'translate(-50%, -50%)',\n          display               : 'flex',\n          flexDirection : 'column',\n          justifyContent : 'center'\n        }\n      };\n\n    return (\n        <div className=\"nav-container\">\n            <div className=\"logo\"> SkinAI </div>\n            <ul className=\"nav-links-container\">\n                <Link to=\"/\"> \n                    <li className=\"nav-links\"><FontAwesomeIcon color='#ffc55a' icon={faHome} size=\"2x\"/></li>\n                </Link>\n                {!isLogged && <li className=\"nav-links\" onClick={openLogin}><FontAwesomeIcon color='#ffc55a' icon={faSignInAlt} size=\"2x\"/></li>}\n                {isLogged && <Link to='/'> \n                    <li className=\"nav-links\"><FontAwesomeIcon color='#ffc55a' icon={faUserMd} size=\"2x\"/></li>\n                </Link>}\n                {isLogged && \n                    <li className=\"nav-links\"><FontAwesomeIcon color='#ffc55a' onClick={handleLogout}icon={faSignOutAlt} size=\"2x\"/></li>\n                }\n            </ul>\n            <LoginModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isLoginOpen={isLoginOpen} closeLogin={closeLogin} modalStyle={modalStyle}/>\n            <SignupModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isSignupOpen={isSignupOpen} closeLogin={closeSignup} modalStyle={modalStyle}/>\n            <LogoutModal setIsLogoutOpen={setIsLogoutOpen} isLogoutOpen={isLogoutOpen} modalStyle={modalStyle}/>            \n        </div>\n    )\n}\n\nexport default Navbar ","/home/burslf/ITC/SkinAI/frontend/src/Components/Modals/LoginModal.jsx",["50","51"],"import axios from 'axios'\nimport { useContext, useState } from 'react'\nimport {Form, Button} from 'react-bootstrap'\nimport {BASE_URL} from '../../App'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Authentication } from '../../Contexts/Authentication'\nimport Modal from 'react-modal';\n\nconst LoginModal = (props) => {\n    const [input, setInput] = useState(null) // Get input\n    const [error, setError] = useState(null) // Handle error from API\n\n    const {isLogged, setIsLogged} = useContext(Authentication) \n\n    const handleChange = (e) => {\n        setInput({...input, [e.target.name] : e.target.value})\n    }\n\n    const logIn = (e) => {\n        e.preventDefault()\n        axios.post(`${BASE_URL}/login`, input)\n        .then(res => {\n            if (res.status === 200) {\n                setIsLogged(true)\n                localStorage.setItem('token', res.data.token)\n                localStorage.setItem('sessionID', res.data.user._id)\n            }\n            props.setIsLoginOpen(false)\n        })\n        .catch(err => {\n            if(err.response.status == 409) {\n                setError(err.response.data.message)\n            }\n        })\n    }\n\n    const errorStyle = {\n        color: '#d10000', \n        fontSize: '18px', \n        margin: '10px', \n        padding: '7px',\n        borderRadius: '9px',\n        backgroundColor: '#ffc55a'\n    }\n\n    const goToSignup = () => {\n        props.setIsLoginOpen(false)\n        props.setIsSignupOpen(true)\n    }\n\n    return (\n        <Modal\n          isOpen={props.isLoginOpen}\n          onRequestClose={props.closeLogin}\n          style={props.modalStyle}\n          contentLabel=\"Example Modal\"\n          closeLogin={props.closeLogin}\n            >\n            <span onClick={() => props.setIsLoginOpen(false)} className='modal-close-btn'><FontAwesomeIcon icon={faTimes}/></span>\n            <h2 style={{textAlign: 'center', color: '#ffc55a'}}>Login</h2>\n            <Form className ='login-form' onSubmit={logIn}>\n                <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\n                <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\n                <Button type='submit' className='login-btn'> Login </Button>\n                {error && <span style={errorStyle}> {error} </span>}\n            </Form>\n            <div className='go-to-signup' onClick={goToSignup}> New ? Sign Up ! </div>\n       </Modal>\n    )\n}\n\nexport default LoginModal","/home/burslf/ITC/SkinAI/frontend/src/Components/Modals/SignupModal.jsx",["52","53"],"import Modal from 'react-modal';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport axios from 'axios'\nimport { useContext, useState } from 'react'\nimport {Form, Button} from 'react-bootstrap'\nimport {BASE_URL} from '../../App'\nimport { Authentication } from '../../Contexts/Authentication'\n\nconst SignupModal = (props) => {\n    const [input, setInput] = useState(null)  // Get input\n    const [error, setError] = useState(null) // // Handle error from API\n\n    const {isLogged, setIsLogged} = useContext(Authentication)\n\n    const handleChange = (e) => {\n        setInput({...input, [e.target.name] : e.target.value})\n    }\n    const signUp = (e) => {\n        e.preventDefault()\n        axios.post(`${BASE_URL}/signup`, input)\n        .then(res => {\n            if (res.status === 200) {\n                setIsLogged(true)\n                localStorage.setItem('token', res.data.token)\n                localStorage.setItem('sessionID', res.data.user._id)\n            }\n        })\n        .catch(err => {\n            const error = err.response.data\n            // Define error message based on API\n            const errorType = error.message || error.firstName || error.lastName || error.phone \n            if(err.response.status == 409) {\n                setError(errorType)\n            }\n        })\n    }\n\n    const errorStyle = {\n        color: '#d10000', \n        fontSize: '18px', \n        marginTop: '10px', \n        padding: '7px',\n        borderRadius: '9px',\n        backgroundColor: '#ffc55a'\n    }\n\n    const goToLogin = () => {\n        props.setIsSignupOpen(false)\n        props.setIsLoginOpen(true)\n    }\n\n    return (\n        <Modal\n        isOpen={props.isSignupOpen}\n        onRequestClose={props.closeSignup}\n        style={props.modalStyle}\n        contentLabel=\"Example Modal\"\n        closeLogin={props.closeSignup}\n          >\n        <span onClick={goToLogin} className='modal-close-btn'><FontAwesomeIcon icon={faArrowLeft}/></span>\n        <h2 style={{textAlign: 'center', color: '#ffc55a'}}>Signup</h2>\n        <Form className ='login-form' onSubmit={signUp}>\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\n            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\n            <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm password\" onChange={e=>handleChange(e)}/>\n            <Form.Control name=\"firstName\" placeholder=\"First name\" onChange={e=>handleChange(e)}/>\n            <Form.Control name=\"lastName\" placeholder=\"Last name\" onChange={e=>handleChange(e)}/>\n            <Form.Control name=\"phone\" placeholder=\"Phone number\" onChange={e=>handleChange(e)}/>\n            <Button type='submit' className=\"login-btn\"> Signup </Button>\n            {error && <span style={errorStyle}> {error} </span>}\n        </Form>\n        </Modal>\n    )\n}\n\nexport default SignupModal","/home/burslf/ITC/SkinAI/frontend/src/Components/Modals/LogoutModal.jsx",["54"],"import Modal from 'react-modal';\nimport { useContext } from 'react'\nimport {Button} from 'react-bootstrap'\nimport { Authentication } from '../../Contexts/Authentication'\nimport '../../Components/NavBar/Navbar.css'\n\nconst LogoutModal = (props) => {\n    const {isLogged, setIsLogged} = useContext(Authentication)\n\n    const logOut = () => {\n        setIsLogged(false)\n        localStorage.clear()\n        props.setIsLogoutOpen(false)\n    }\n\n    return (\n        <Modal\n        isOpen={props.isLogoutOpen}\n        onRequestClose={() => props.setIsLogoutOpen(false)}\n        style={props.modalStyle}\n        contentLabel=\"Example Modal\"\n        closeLogin={() => props.setIsLogoutOpen(false)}\n          >\n        <div className='logout-modal'>\n            <h2>Are you sure ?</h2>\n            <Button className='login-btn' onClick={logOut}> Logout </Button>\n            <Button className='login-btn' onClick={() => props.setIsLogoutOpen(false)}> Close </Button>\n        </div>\n        </Modal>\n    )\n}\n\nexport default LogoutModal","/home/burslf/ITC/SkinAI/frontend/src/Contexts/Authentication.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":12,"column":9,"nodeType":"61","messageId":"62","endLine":12,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":14,"column":3,"nodeType":"61","endLine":14,"endColumn":12,"suggestions":"65"},{"ruleId":"59","severity":1,"message":"66","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":13},{"ruleId":"59","severity":1,"message":"67","line":16,"column":22,"nodeType":"61","messageId":"62","endLine":16,"endColumn":33},{"ruleId":"59","severity":1,"message":"68","line":14,"column":12,"nodeType":"61","messageId":"62","endLine":14,"endColumn":20},{"ruleId":"69","severity":1,"message":"70","line":32,"column":36,"nodeType":"71","messageId":"72","endLine":32,"endColumn":38},{"ruleId":"59","severity":1,"message":"68","line":14,"column":12,"nodeType":"61","messageId":"62","endLine":14,"endColumn":20},{"ruleId":"69","severity":1,"message":"70","line":33,"column":36,"nodeType":"71","messageId":"72","endLine":33,"endColumn":38},{"ruleId":"59","severity":1,"message":"68","line":8,"column":12,"nodeType":"61","messageId":"62","endLine":8,"endColumn":20},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsLogged'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["75"],"'Modal' is defined but never used.","'setIsLogged' is assigned a value but never used.","'isLogged' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Add dependencies array: []",{"range":"78","text":"79"},[624,624],", []"]