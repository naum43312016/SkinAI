[{"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\index.js":"1","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\reportWebVitals.js":"2","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\App.js":"3","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Contexts\\Authentication.js":"4","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\UploadForm\\UploadForm.jsx":"5","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Slides\\Slides.jsx":"6","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\NavBar\\Navbar.jsx":"7","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Modals\\LoginModal.jsx":"8","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Modals\\SignupModal.jsx":"9","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Tools\\WebsiteResponses.js":"10","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Tools\\URLs.js":"11","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Prediction\\Prediction.jsx":"12","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\GoogleMap\\mapsModal.jsx":"13","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\GoogleMap\\MapContainer.jsx":"14","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\GoogleMap\\GoogleMap.jsx":"15"},{"size":517,"mtime":1610998001924,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1610998001924,"results":"18","hashOfConfig":"17"},{"size":1576,"mtime":1611138579941,"results":"19","hashOfConfig":"17"},{"size":89,"mtime":1611047761048,"results":"20","hashOfConfig":"17"},{"size":4477,"mtime":1611139518043,"results":"21","hashOfConfig":"17"},{"size":1191,"mtime":1611138579951,"results":"22","hashOfConfig":"17"},{"size":3166,"mtime":1611132135387,"results":"23","hashOfConfig":"17"},{"size":2793,"mtime":1611134728199,"results":"24","hashOfConfig":"17"},{"size":3188,"mtime":1611134728200,"results":"25","hashOfConfig":"17"},{"size":1844,"mtime":1611132187505,"results":"26","hashOfConfig":"17"},{"size":248,"mtime":1611134728200,"results":"27","hashOfConfig":"17"},{"size":383,"mtime":1611138579943,"results":"28","hashOfConfig":"17"},{"size":932,"mtime":1611138579943,"results":"29","hashOfConfig":"17"},{"size":2442,"mtime":1611138579942,"results":"30","hashOfConfig":"17"},{"size":2224,"mtime":1611138579942,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"hewr9m",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\index.js",[],["69","70"],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\reportWebVitals.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\App.js",["71"],"import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Slides from \"./Components/Slides/Slides\";\r\nimport Navbar from \"./Components/NavBar/Navbar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Authentication } from \"./Contexts/Authentication\";\r\nimport UploadForm from \"./Components/UploadForm/UploadForm\";\r\nimport \"./App.css\";\r\nimport Prediction from \"./Components/Prediction/Prediction\";\r\n\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nfunction App() {\r\n  const [isLogged, setIsLogged] = useState(null);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      setIsLogged(true);\r\n    } else {\r\n      setIsLogged(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Authentication.Provider value={{ isLogged, setIsLogged }}>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/upload\">\r\n            <UploadForm />\r\n          </Route>\r\n          <Route path=\"/Prediction\">\r\n            <Prediction />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <div className=\"my-container\">\r\n              <Slides />\r\n              {\r\n                <Link to=\"/upload\" className=\"open-upload-form\">\r\n                  <div>\r\n                    <div> Upload </div>\r\n                  </div>\r\n                </Link>\r\n              }\r\n              {/* <UploadForm /> */}\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Authentication.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Contexts\\Authentication.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\UploadForm\\UploadForm.jsx",["72","73","74","75"],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Slides\\Slides.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\NavBar\\Navbar.jsx",["76"],"import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faHome, faPlus, faSignInAlt, faSignOutAlt, faUserMd } from '@fortawesome/free-solid-svg-icons'\r\nimport './Navbar.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { useState, useContext, useRef } from 'react'\r\nimport LoginModal from '../Modals/LoginModal'\r\nimport SignupModal from '../Modals/SignupModal' \r\nimport { Authentication } from '../../Contexts/Authentication';\r\nimport { confirmLogout } from '../../Tools/WebsiteResponses';\r\n\r\nconst Navbar = (props) => {\r\n    const [isLoginOpen,setIsLoginOpen] = useState(false);\r\n    const [isSignupOpen,setIsSignupOpen] = useState(false);\r\n    const {isLogged, setIsLogged} = useContext(Authentication)\r\n    \r\n    const openLogin = () => {\r\n        setIsLoginOpen(true);\r\n    }\r\n    const closeLogin = () => {\r\n        setIsLoginOpen(false)\r\n    }\r\n    const closeSignup = () => {\r\n        setIsSignupOpen(false)\r\n    }\r\n    const handleLogout = () => {\r\n        confirmLogout(setIsLogged);\r\n    }\r\n    \r\n    const modalStyle = {\r\n        overlay: {\r\n            backgroundColor     : '#2b1d13a0'\r\n        },\r\n        content : {\r\n          borderRadius          : '13px',\r\n          border                : '1px solid black',\r\n          backgroundColor       : 'whitesmoke',\r\n          top                   : '50%',\r\n          left                  : '50%',\r\n          right                 : 'auto',\r\n          bottom                : 'auto',\r\n          marginRight           : '-50%',\r\n          transform             : 'translate(-50%, -50%)',\r\n          display               : 'flex',\r\n          flexDirection : 'column',\r\n          justifyContent : 'center',\r\n          zIndex: 3\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo\"> SkinAI </div>\r\n            <ul className=\"nav-links-container\">\r\n                <Link to=\"/\"> \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faHome} size=\"2x\"/></li>\r\n                </Link>\r\n                <Link to=\"/upload\"> \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faPlus} size=\"2x\"/></li>\r\n                </Link>\r\n                {!isLogged && <li className=\"nav-links\" onClick={openLogin}><FontAwesomeIcon color='#36d68b' icon={faSignInAlt} size=\"2x\"/></li>}\r\n                {isLogged && <Link to='/'> \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faUserMd} size=\"2x\"/></li>\r\n                </Link>}\r\n                {isLogged && \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' onClick={handleLogout}icon={faSignOutAlt} size=\"2x\"/></li>\r\n                }\r\n            </ul>\r\n            <LoginModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isLoginOpen={isLoginOpen} closeLogin={closeLogin} modalStyle={modalStyle}/>\r\n            <SignupModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isSignupOpen={isSignupOpen} closeLogin={closeSignup} modalStyle={modalStyle}/>         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar ","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Modals\\LoginModal.jsx",["77","78"],"import axios from 'axios'\r\nimport { useContext, useState } from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {BASE_URL} from '../../App'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Authentication } from '../../Contexts/Authentication'\r\nimport Modal from 'react-modal';\r\nimport { signInSuccess } from '../../Tools/WebsiteResponses';\r\nimport url from '../../Tools/URLs';\r\n\r\nconst LoginModal = (props) => {\r\n    const [input, setInput] = useState(null) // Get input\r\n    const [error, setError] = useState(null) // Handle error from API\r\n\r\n    const {isLogged, setIsLogged} = useContext(Authentication) \r\n\r\n    const handleChange = (e) => {\r\n        setInput({...input, [e.target.name] : e.target.value})\r\n    }\r\n\r\n    const logIn = (e) => {\r\n        e.preventDefault()\r\n        axios.post(`${url}/login`, input)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                signInSuccess()\r\n                setIsLogged(true);\r\n                localStorage.setItem('token', res.data.token)\r\n                localStorage.setItem('sessionID', res.data.user._id)\r\n            }\r\n            props.setIsLoginOpen(false)\r\n        })\r\n        .catch(err => {\r\n            if(err.response.status === 409) {\r\n                setError(err.response.data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const errorStyle = {\r\n        color: '#d10000', \r\n        fontSize: '18px', \r\n        margin: '10px', \r\n        padding: '7px',\r\n        borderRadius: '9px',\r\n        backgroundColor: 'whitesmoke'\r\n    }\r\n\r\n    const goToSignup = () => {\r\n        props.setIsLoginOpen(false)\r\n        props.setIsSignupOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={props.isLoginOpen}\r\n          onRequestClose={props.closeLogin}\r\n          style={props.modalStyle}\r\n          contentLabel=\"Example Modal\"\r\n          closeLogin={props.closeLogin}\r\n            >\r\n            <span onClick={() => props.setIsLoginOpen(false)} className='modal-close-btn'><FontAwesomeIcon icon={faTimes}/></span>\r\n            <h2 style={{textAlign: 'center', color: '#434343'}}>Login</h2>\r\n            <Form className ='login-form' onSubmit={logIn}>\r\n                <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\r\n                <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\r\n                <Button type='submit' className='login-btn'> Login </Button>\r\n                {error && <span style={errorStyle}> {error} </span>}\r\n            </Form>\r\n            <div className='go-to-signup' onClick={goToSignup}> New ? Sign Up ! </div>\r\n       </Modal>\r\n    )\r\n}\r\n\r\nexport default LoginModal","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Modals\\SignupModal.jsx",["79"],"import Modal from 'react-modal';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport { useContext, useState } from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport { Authentication } from '../../Contexts/Authentication'\r\nimport { signUpSuccess } from '../../Tools/WebsiteResponses';\r\nimport url from '../../Tools/URLs';\r\n\r\nconst SignupModal = (props) => {\r\n    const [input, setInput] = useState(null)  // Get input\r\n    const [error, setError] = useState(null) // // Handle error from API\r\n\r\n    const {isLogged, setIsLogged} = useContext(Authentication)\r\n\r\n    const handleChange = (e) => {\r\n        setInput({...input, [e.target.name] : e.target.value})\r\n    }\r\n    const signUp = (e) => {\r\n        e.preventDefault()\r\n        axios.post(`${url}/signup`, input)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                setIsLogged(true);\r\n                signUpSuccess();\r\n                localStorage.setItem('token', res.data.token)\r\n                localStorage.setItem('sessionID', res.data.user._id)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const error = err.response.data\r\n            // Define error message based on API\r\n            const errorType = error.message || error.firstName || error.lastName || error.phone \r\n            if(err.response.status === 409) {\r\n                setError(errorType)\r\n            }\r\n        })\r\n    }\r\n\r\n    const errorStyle = {\r\n        color: '#d10000', \r\n        fontSize: '18px', \r\n        marginTop: '10px', \r\n        padding: '7px',\r\n        borderRadius: '9px',\r\n        backgroundColor: 'whitesmoke'\r\n    }\r\n\r\n    const goToLogin = () => {\r\n        props.setIsSignupOpen(false)\r\n        props.setIsLoginOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        isOpen={props.isSignupOpen}\r\n        onRequestClose={props.closeSignup}\r\n        style={props.modalStyle}\r\n        contentLabel=\"Example Modal\"\r\n        closeLogin={props.closeSignup}\r\n          >\r\n        <span onClick={goToLogin} className='modal-close-btn'><FontAwesomeIcon icon={faArrowLeft}/></span>\r\n        <h2 style={{textAlign: 'center', color: '#434343'}}>Signup</h2>\r\n        <Form className ='login-form' onSubmit={signUp}>\r\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm password\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"firstName\" placeholder=\"First name\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"lastName\" placeholder=\"Last name\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"phone\" placeholder=\"Phone number\" onChange={e=>handleChange(e)}/>\r\n            <Button type='submit' className=\"login-btn\"> Signup </Button>\r\n            {error && <span style={errorStyle}> {error} </span>}\r\n        </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SignupModal","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Tools\\WebsiteResponses.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Tools\\URLs.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Prediction\\Prediction.jsx",["80","81","82","83"],"import { Container, Card, Form, Button, Dropdown, Row } from \"react-bootstrap\";\r\nimport pic from \"./Team 12 (1).png\";\r\n\r\nimport MapsModal from \"../GoogleMap/mapsModal\";\r\n\r\nconst Prediction = () => {\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Card.Img variant=\"top\" src={pic} />\r\n      </Card>\r\n      <MapsModal />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Prediction;\r\n","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\GoogleMap\\mapsModal.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\GoogleMap\\MapContainer.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\GoogleMap\\GoogleMap.jsx",["84","85","86","87"],"import React from \"react\";\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\r\nconst GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_KEY;\r\nconst mapStyles = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nexport class MapContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showingInfoWindow: false,\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n    };\r\n  }\r\n\r\n  fetchDoctors = (mapProps, map) => {\r\n    const { google } = mapProps;\r\n    const service = new google.maps.places.PlacesService(map);\r\n    const position = { lat: this.props.lat, lng: this.props.lng };\r\n    const request = {\r\n      location: position,\r\n      radius: 10000,\r\n      types: [\"hospital\", \"health\", \"doctor\", \"medical\", \"clinic\"],\r\n    };\r\n    service.nearbySearch(request, (results, status) => {\r\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\r\n        console.log(\"results= \" + results);\r\n        for (const [key, value] of Object.entries(results)) {\r\n          console.log(`${key}: ${value}`);\r\n        }\r\n        //name\r\n        const image =\r\n          \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\";\r\n        for (let i = 0; i < results.length; i++) {\r\n          //this.addMarker(map,results[i].geometry.location,results[i].name)\r\n          new google.maps.Marker({\r\n            position: results[i].geometry.location,\r\n            map: map,\r\n            title: results[i].name,\r\n            animation: google.maps.Animation.DROP,\r\n          });\r\n        }\r\n        /*console.log(\"results= \"+ results[0].geometry.location);\r\n                for (const [key, value] of Object.entries(results[0].geometry)) {\r\n                    console.log(`${key}: ${value}`);\r\n                }*/\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        onReady={this.fetchDoctors}\r\n        zoom={14}\r\n        style={mapStyles}\r\n        initialCenter={{\r\n          lat: this.props.lat,\r\n          lng: this.props.lng,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: GOOGLE_MAP_API_KEY,\r\n})(MapContainer);\r\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":17,"column":3,"nodeType":"94","endLine":17,"endColumn":12,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":5,"column":45,"nodeType":"94","messageId":"98","endLine":5,"endColumn":48},{"ruleId":"96","severity":1,"message":"99","line":9,"column":40,"nodeType":"94","messageId":"98","endLine":9,"endColumn":62},{"ruleId":"96","severity":1,"message":"100","line":10,"column":8,"nodeType":"94","messageId":"98","endLine":10,"endColumn":26},{"ruleId":"96","severity":1,"message":"101","line":18,"column":22,"nodeType":"94","messageId":"98","endLine":18,"endColumn":33},{"ruleId":"96","severity":1,"message":"102","line":5,"column":32,"nodeType":"94","messageId":"98","endLine":5,"endColumn":38},{"ruleId":"96","severity":1,"message":"103","line":4,"column":9,"nodeType":"94","messageId":"98","endLine":4,"endColumn":17},{"ruleId":"96","severity":1,"message":"104","line":16,"column":12,"nodeType":"94","messageId":"98","endLine":16,"endColumn":20},{"ruleId":"96","severity":1,"message":"104","line":15,"column":12,"nodeType":"94","messageId":"98","endLine":15,"endColumn":20},{"ruleId":"96","severity":1,"message":"105","line":1,"column":27,"nodeType":"94","messageId":"98","endLine":1,"endColumn":31},{"ruleId":"96","severity":1,"message":"106","line":1,"column":33,"nodeType":"94","messageId":"98","endLine":1,"endColumn":39},{"ruleId":"96","severity":1,"message":"107","line":1,"column":41,"nodeType":"94","messageId":"98","endLine":1,"endColumn":49},{"ruleId":"96","severity":1,"message":"97","line":1,"column":51,"nodeType":"94","messageId":"98","endLine":1,"endColumn":54},{"ruleId":"96","severity":1,"message":"108","line":2,"column":33,"nodeType":"94","messageId":"98","endLine":2,"endColumn":43},{"ruleId":"96","severity":1,"message":"109","line":2,"column":45,"nodeType":"94","messageId":"98","endLine":2,"endColumn":51},{"ruleId":"110","severity":1,"message":"111","line":29,"column":18,"nodeType":"112","messageId":"113","endLine":29,"endColumn":20},{"ruleId":"96","severity":1,"message":"114","line":35,"column":15,"nodeType":"94","messageId":"98","endLine":35,"endColumn":20},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsLogged'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.","Identifier",["117"],"no-unused-vars","'Row' is defined but never used.","unusedVar","'displayFormDoctorImage' is defined but never used.","'ModalDoctorDisplay' is defined but never used.","'setRedirect' is assigned a value but never used.","'useRef' is defined but never used.","'BASE_URL' is defined but never used.","'isLogged' is assigned a value but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Dropdown' is defined but never used.","'InfoWindow' is defined but never used.","'Marker' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'image' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Add dependencies array: [token]",{"range":"120","text":"121"},[778,778],", [token]"]