[{"/home/burslf/ITC/SKIN/SkinAI/src/index.js":"1","/home/burslf/ITC/SKIN/SkinAI/src/App.js":"2","/home/burslf/ITC/SKIN/SkinAI/src/reportWebVitals.js":"3","/home/burslf/ITC/SKIN/SkinAI/src/Contexts/Authentication.js":"4","/home/burslf/ITC/SKIN/SkinAI/src/Components/NavBar/Navbar.jsx":"5","/home/burslf/ITC/SKIN/SkinAI/src/Components/Modals/LoginModal.jsx":"6","/home/burslf/ITC/SKIN/SkinAI/src/Components/Modals/SignupModal.jsx":"7","/home/burslf/ITC/SKIN/SkinAI/src/Components/Modals/LogoutModal.jsx":"8","/home/burslf/ITC/SKIN/SkinAI/src/Components/UploadForm/UploadForm.jsx":"9","/home/burslf/ITC/SKIN/SkinAI/src/Components/Slides/Slides.jsx":"10"},{"size":500,"mtime":1610985285359,"results":"11","hashOfConfig":"12"},{"size":1026,"mtime":1611045315485,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610985285359,"results":"14","hashOfConfig":"12"},{"size":86,"mtime":1610996907696,"results":"15","hashOfConfig":"12"},{"size":3036,"mtime":1611045285156,"results":"16","hashOfConfig":"12"},{"size":2592,"mtime":1611045239452,"results":"17","hashOfConfig":"12"},{"size":3018,"mtime":1611045251127,"results":"18","hashOfConfig":"12"},{"size":1024,"mtime":1610999055707,"results":"19","hashOfConfig":"12"},{"size":3834,"mtime":1611045357242,"results":"20","hashOfConfig":"12"},{"size":1251,"mtime":1611045305778,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1k7rxoc",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/burslf/ITC/SKIN/SkinAI/src/index.js",[],["47","48"],"/home/burslf/ITC/SKIN/SkinAI/src/App.js",["49"],"/home/burslf/ITC/SKIN/SkinAI/src/reportWebVitals.js",[],"/home/burslf/ITC/SKIN/SkinAI/src/Contexts/Authentication.js",[],"/home/burslf/ITC/SKIN/SkinAI/src/Components/NavBar/Navbar.jsx",["50"],"/home/burslf/ITC/SKIN/SkinAI/src/Components/Modals/LoginModal.jsx",["51"],"import axios from 'axios'\nimport { useContext, useState } from 'react'\nimport {Form, Button} from 'react-bootstrap'\nimport {BASE_URL} from '../../App'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Authentication } from '../../Contexts/Authentication'\nimport Modal from 'react-modal';\n\nconst LoginModal = (props) => {\n    const [input, setInput] = useState(null) // Get input\n    const [error, setError] = useState(null) // Handle error from API\n\n    const {isLogged, setIsLogged} = useContext(Authentication) \n\n    const handleChange = (e) => {\n        setInput({...input, [e.target.name] : e.target.value})\n    }\n\n    const logIn = (e) => {\n        e.preventDefault()\n        axios.post(`${BASE_URL}/login`, input)\n        .then(res => {\n            if (res.status === 200) {\n                setIsLogged(true)\n                localStorage.setItem('token', res.data.token)\n                localStorage.setItem('sessionID', res.data.user._id)\n            }\n            props.setIsLoginOpen(false)\n        })\n        .catch(err => {\n            if(err.response.status === 409) {\n                setError(err.response.data.message)\n            }\n        })\n    }\n\n    const errorStyle = {\n        color: '#d10000', \n        fontSize: '18px', \n        margin: '10px', \n        padding: '7px',\n        borderRadius: '9px',\n        backgroundColor: 'whitesmoke'\n    }\n\n    const goToSignup = () => {\n        props.setIsLoginOpen(false)\n        props.setIsSignupOpen(true)\n    }\n\n    return (\n        <Modal\n          isOpen={props.isLoginOpen}\n          onRequestClose={props.closeLogin}\n          style={props.modalStyle}\n          contentLabel=\"Example Modal\"\n          closeLogin={props.closeLogin}\n            >\n            <span onClick={() => props.setIsLoginOpen(false)} className='modal-close-btn'><FontAwesomeIcon icon={faTimes}/></span>\n            <h2 style={{textAlign: 'center', color: '#434343'}}>Login</h2>\n            <Form className ='login-form' onSubmit={logIn}>\n                <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\n                <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\n                <Button type='submit' className='login-btn'> Login </Button>\n                {error && <span style={errorStyle}> {error} </span>}\n            </Form>\n            <div className='go-to-signup' onClick={goToSignup}> New ? Sign Up ! </div>\n       </Modal>\n    )\n}\n\nexport default LoginModal","/home/burslf/ITC/SKIN/SkinAI/src/Components/Modals/SignupModal.jsx",["52"],"import Modal from 'react-modal';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport axios from 'axios'\nimport { useContext, useState } from 'react'\nimport {Form, Button} from 'react-bootstrap'\nimport {BASE_URL} from '../../App'\nimport { Authentication } from '../../Contexts/Authentication'\n\nconst SignupModal = (props) => {\n    const [input, setInput] = useState(null)  // Get input\n    const [error, setError] = useState(null) // // Handle error from API\n\n    const {isLogged, setIsLogged} = useContext(Authentication)\n\n    const handleChange = (e) => {\n        setInput({...input, [e.target.name] : e.target.value})\n    }\n    const signUp = (e) => {\n        e.preventDefault()\n        axios.post(`${BASE_URL}/signup`, input)\n        .then(res => {\n            if (res.status === 200) {\n                setIsLogged(true)\n                localStorage.setItem('token', res.data.token)\n                localStorage.setItem('sessionID', res.data.user._id)\n            }\n        })\n        .catch(err => {\n            const error = err.response.data\n            // Define error message based on API\n            const errorType = error.message || error.firstName || error.lastName || error.phone \n            if(err.response.status === 409) {\n                setError(errorType)\n            }\n        })\n    }\n\n    const errorStyle = {\n        color: '#d10000', \n        fontSize: '18px', \n        marginTop: '10px', \n        padding: '7px',\n        borderRadius: '9px',\n        backgroundColor: 'whitesmoke'\n    }\n\n    const goToLogin = () => {\n        props.setIsSignupOpen(false)\n        props.setIsLoginOpen(true)\n    }\n\n    return (\n        <Modal\n        isOpen={props.isSignupOpen}\n        onRequestClose={props.closeSignup}\n        style={props.modalStyle}\n        contentLabel=\"Example Modal\"\n        closeLogin={props.closeSignup}\n          >\n        <span onClick={goToLogin} className='modal-close-btn'><FontAwesomeIcon icon={faArrowLeft}/></span>\n        <h2 style={{textAlign: 'center', color: '#434343'}}>Signup</h2>\n        <Form className ='login-form' onSubmit={signUp}>\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\n            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\n            <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm password\" onChange={e=>handleChange(e)}/>\n            <Form.Control name=\"firstName\" placeholder=\"First name\" onChange={e=>handleChange(e)}/>\n            <Form.Control name=\"lastName\" placeholder=\"Last name\" onChange={e=>handleChange(e)}/>\n            <Form.Control name=\"phone\" placeholder=\"Phone number\" onChange={e=>handleChange(e)}/>\n            <Button type='submit' className=\"login-btn\"> Signup </Button>\n            {error && <span style={errorStyle}> {error} </span>}\n        </Form>\n        </Modal>\n    )\n}\n\nexport default SignupModal",["53","54"],"/home/burslf/ITC/SKIN/SkinAI/src/Components/Modals/LogoutModal.jsx",["55"],"import Modal from 'react-modal';\nimport { useContext } from 'react'\nimport {Button} from 'react-bootstrap'\nimport { Authentication } from '../../Contexts/Authentication'\nimport '../../Components/NavBar/Navbar.css'\n\nconst LogoutModal = (props) => {\n    const {isLogged, setIsLogged} = useContext(Authentication)\n\n    const logOut = () => {\n        setIsLogged(false)\n        localStorage.clear()\n        props.setIsLogoutOpen(false)\n    }\n\n    return (\n        <Modal\n        isOpen={props.isLogoutOpen}\n        onRequestClose={() => props.setIsLogoutOpen(false)}\n        style={props.modalStyle}\n        contentLabel=\"Example Modal\"\n        closeLogin={() => props.setIsLogoutOpen(false)}\n          >\n        <div className='logout-modal'>\n            <h2>Are you sure ?</h2>\n            <Button className='login-btn' onClick={logOut}> Logout </Button>\n            <Button className='login-btn' onClick={() => props.setIsLogoutOpen(false)}> Close </Button>\n        </div>\n        </Modal>\n    )\n}\n\nexport default LogoutModal","/home/burslf/ITC/SKIN/SkinAI/src/Components/UploadForm/UploadForm.jsx",[],"/home/burslf/ITC/SKIN/SkinAI/src/Components/Slides/Slides.jsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":15,"column":3,"nodeType":"62","endLine":15,"endColumn":12,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":15,"column":22,"nodeType":"62","messageId":"66","endLine":15,"endColumn":33},{"ruleId":"64","severity":1,"message":"67","line":14,"column":12,"nodeType":"62","messageId":"66","endLine":14,"endColumn":20},{"ruleId":"64","severity":1,"message":"67","line":14,"column":12,"nodeType":"62","messageId":"66","endLine":14,"endColumn":20},{"ruleId":"56","replacedBy":"68"},{"ruleId":"58","replacedBy":"69"},{"ruleId":"64","severity":1,"message":"67","line":8,"column":12,"nodeType":"62","messageId":"66","endLine":8,"endColumn":20},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsLogged'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.","Identifier",["72"],"no-unused-vars","'setIsLogged' is assigned a value but never used.","unusedVar","'isLogged' is assigned a value but never used.",["70"],["71"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Add dependencies array: [token]",{"range":"75","text":"76"},[664,664],", [token]"]