[{"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\index.js":"1","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\App.js":"2","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\reportWebVitals.js":"3","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Contexts\\Authentication.js":"4","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Slides\\Slides.jsx":"5","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Prediction\\Prediction.jsx":"6","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\NavBar\\Navbar.jsx":"7","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\UploadForm\\UploadForm.jsx":"8","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Tools\\WebsiteResponses.js":"9","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Tools\\URLs.js":"10","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\ImageCrop\\ImageCrop.js":"11","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Modals\\LoginModal.jsx":"12","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Modals\\SignupModal.jsx":"13","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\GoogleMap\\mapsModal.jsx":"14","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\GoogleMap\\MapContainer.jsx":"15","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\GoogleMap\\GoogleMap.jsx":"16","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\HomeImages\\HomeImages.jsx":"17","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\UserHistory\\UserHistory.jsx":"18"},{"size":517,"mtime":1610998001924,"results":"19","hashOfConfig":"20"},{"size":1816,"mtime":1611161257920,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1610998001924,"results":"22","hashOfConfig":"20"},{"size":89,"mtime":1611047761048,"results":"23","hashOfConfig":"20"},{"size":1191,"mtime":1611141456712,"results":"24","hashOfConfig":"20"},{"size":1494,"mtime":1611159967465,"results":"25","hashOfConfig":"20"},{"size":3135,"mtime":1611161438051,"results":"26","hashOfConfig":"20"},{"size":6379,"mtime":1611161522155,"results":"27","hashOfConfig":"20"},{"size":3450,"mtime":1611173092808,"results":"28","hashOfConfig":"20"},{"size":247,"mtime":1611143361277,"results":"29","hashOfConfig":"20"},{"size":2964,"mtime":1611153133522,"results":"30","hashOfConfig":"20"},{"size":2793,"mtime":1611134728199,"results":"31","hashOfConfig":"20"},{"size":3188,"mtime":1611134728200,"results":"32","hashOfConfig":"20"},{"size":1117,"mtime":1611159967463,"results":"33","hashOfConfig":"20"},{"size":2442,"mtime":1611141456696,"results":"34","hashOfConfig":"20"},{"size":2224,"mtime":1611141456695,"results":"35","hashOfConfig":"20"},{"size":735,"mtime":1611153112086,"results":"36","hashOfConfig":"20"},{"size":1819,"mtime":1611173067740,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"hewr9m",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\index.js",[],["84","85"],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\App.js",["86"],"import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Slides from \"./Components/Slides/Slides\";\r\nimport Navbar from \"./Components/NavBar/Navbar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Authentication } from \"./Contexts/Authentication\";\r\nimport UploadForm from \"./Components/UploadForm/UploadForm\";\r\nimport \"./App.css\";\r\nimport Prediction from \"./Components/Prediction/Prediction\";\r\nimport HomeImages from \"./Components/HomeImages/HomeImages\";\r\nimport UserHistory from \"./Components/UserHistory/UserHistory\";\r\n\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nfunction App() {\r\n  const [isLogged, setIsLogged] = useState(null);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      setIsLogged(true);\r\n    } else {\r\n      setIsLogged(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Authentication.Provider value={{ isLogged, setIsLogged }}>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/upload\">\r\n            <UploadForm />\r\n          </Route>\r\n          <Route path=\"/Prediction\">\r\n            <Prediction />\r\n          </Route>\r\n          <Route path=\"/user/:id\">\r\n            <UserHistory />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <div className=\"my-container\">\r\n              <Slides />\r\n              {\r\n                <Link to=\"/upload\" className=\"open-upload-form\">\r\n                  <div>\r\n                    <div> Upload </div>\r\n                  </div>\r\n                </Link>\r\n              }\r\n              {/* <UploadForm /> */}\r\n              <HomeImages />\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Authentication.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\reportWebVitals.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Contexts\\Authentication.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Slides\\Slides.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Prediction\\Prediction.jsx",["87","88","89","90","91","92","93","94"],"import {\r\n  Container,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Dropdown,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport pic from \"./Team 12 (1).png\";\r\nimport './Prediction.css';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport MapsModal from \"../GoogleMap/mapsModal\";\r\n\r\nconst Prediction = (props) => {\r\n  const location = useLocation();\r\n  // console.log(\"test=\" + location.state.data);\r\n\r\n  return (\r\n    <div className='my-container'>\r\n      <div className='prediction-container'>\r\n        <Card className ='image-result'>\r\n          <img src=\"https://source.unsplash.com/random/300x300\" alt=\"\"/>\r\n        </Card>\r\n        <Card className='text-result'>\r\n          <h1>Result:</h1>\r\n          <div>Lorem ipsum dolor sit amet consectetur adipisicing elit. Veritatis itaque, modi inventore quas facere sint veniam vero pariatur soluta eum reiciendis saepe vitae doloribus omnis dolores id error quasi earum.</div>\r\n        </Card>\r\n      </div>\r\n      <MapsModal />\r\n\r\n    </div>\r\n    // <Container>\r\n    //   <Row>\r\n    //     <Col>\r\n    //       <Card>\r\n    //         <Card.Img variant=\"top\" src={pic} className=\"mt-5\"></Card.Img>\r\n    //       </Card>\r\n    //     </Col>\r\n    //     <Col>\r\n    //       <Card className=\"mt-5\">\r\n    //         <h1>test</h1>\r\n    //       </Card>\r\n    //     </Col>\r\n    //   </Row>\r\n    //   <Row>\r\n    //     <Col md=\"auto\">\r\n          // <MapsModal />\r\n    //     </Col>\r\n    //   </Row>\r\n    // </Container>\r\n  );\r\n};\r\n\r\nexport default Prediction;\r\n","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\NavBar\\Navbar.jsx",["95"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faPlus, faSignInAlt, faSignOutAlt, faUserMd } from '@fortawesome/free-solid-svg-icons'\r\nimport './Navbar.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useState, useContext, useRef } from 'react'\r\nimport LoginModal from '../Modals/LoginModal'\r\nimport SignupModal from '../Modals/SignupModal'\r\nimport { Authentication } from '../../Contexts/Authentication';\r\nimport { confirmLogout } from '../../Tools/WebsiteResponses';\r\n\r\nconst Navbar = (props) => {\r\n    const [isLoginOpen, setIsLoginOpen] = useState(false);\r\n    const [isSignupOpen, setIsSignupOpen] = useState(false);\r\n    const { isLogged, setIsLogged } = useContext(Authentication)\r\n\r\n    const openLogin = () => {\r\n        setIsLoginOpen(true);\r\n    }\r\n    const closeLogin = () => {\r\n        setIsLoginOpen(false)\r\n    }\r\n    const closeSignup = () => {\r\n        setIsSignupOpen(false)\r\n    }\r\n    const handleLogout = () => {\r\n        confirmLogout(setIsLogged);\r\n    }\r\n\r\n    const modalStyle = {\r\n        overlay: {\r\n            backgroundColor: '#2b1d13a0'\r\n        },\r\n        content: {\r\n            borderRadius: '13px',\r\n            border: '1px solid black',\r\n            backgroundColor: 'whitesmoke',\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            zIndex: 3\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <Link to=\"/\">\r\n                <button className=\"logo\"> SkinAI </button>\r\n            </Link>\r\n            <ul className=\"nav-links-container\">\r\n                <Link to=\"/\">\r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faHome} size=\"2x\" /></li>\r\n                </Link>\r\n                <Link to=\"/upload\">\r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faPlus} size=\"2x\" /></li>\r\n                </Link>\r\n                {!isLogged && <li className=\"nav-links\" onClick={openLogin}><FontAwesomeIcon color='#36d68b' icon={faSignInAlt} size=\"2x\" /></li>}\r\n                {isLogged && <Link to={`/user/${localStorage.getItem('sessionID')}`}>\r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faUserMd} size=\"2x\" /></li>\r\n                </Link>}\r\n                {isLogged &&\r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' onClick={handleLogout} icon={faSignOutAlt} size=\"2x\" /></li>\r\n                }\r\n            </ul>\r\n            <LoginModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isLoginOpen={isLoginOpen} closeLogin={closeLogin} modalStyle={modalStyle} />\r\n            <SignupModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isSignupOpen={isSignupOpen} closeLogin={closeSignup} modalStyle={modalStyle} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar ","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\UploadForm\\UploadForm.jsx",["96","97","98","99"],"import { faArrowLeft, faCamera } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from 'axios';\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { Container, Form, Button, Dropdown, Row } from 'react-bootstrap'\r\nimport { Spinner } from 'reactstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './UploadForm.css'\r\nimport { Redirect } from 'react-router'\r\nimport { itemUploaded, formImageIssue, displayFormDoctorImage,redirecting } from '../../Tools/WebsiteResponses';\r\nimport ModalDoctorDisplay from './ModalDoctorDisplay.png';\r\nimport ImageCrop from '../ImageCrop/ImageCrop';\r\nimport url from '../../Tools/URLs';\r\n\r\n\r\nconst UploadForm = () => {\r\n    const [infos, setInfos] = useState(null)\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [pic, setPic] = useState({ selectedFile: null })\r\n    const [previewPic, setPreviewPic] = useState(\"\")\r\n    const [redirect, setRedirect] = useState(false) // in case of success\r\n    const [loading, setLoading] = useState(false);\r\n    const [croppedImage, setCroppedImage] = useState(null);\r\n    const [sendEmail, setSendEmail] = useState(false);\r\n    const [nextForm, goToNextForm] = useState(false);\r\n\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    const ref = useRef(null)\r\n    const history = useHistory();\r\n    const handleChange = (e) => {\r\n        setInfos({\r\n            ...infos,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const imageUploadStyle = {\r\n        color: \"#434343\",\r\n        fontSize: `${previewPic ? `15px` : `35px`}`,\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        setInfos({ ...infos, category: e.target.name })\r\n    }\r\n\r\n    const uploadForm = (e) => {\r\n        setLoading(true);\r\n        e.preventDefault()\r\n        const data = new FormData()\r\n        for (let key in infos) {\r\n            data.append(key, infos[key])\r\n        }\r\n        if (pic.selectedFile) {\r\n            data.append('user', localStorage.getItem('sessionID'));\r\n            let img = pic.selectedFile;\r\n            if (croppedImage) {\r\n                img = croppedImage;\r\n            }\r\n            data.append('image', img);\r\n        }\r\n        redirecting();\r\n        axios.post(`${url}/upload-image`, data)\r\n            .then((res) => {\r\n                itemUploaded('Image Uploaded'); \r\n                setLoading(false)\r\n                history.push({\r\n                    pathname: '/Prediction',\r\n                    state: {data: res.data}\r\n                })\r\n            })\r\n            .catch(err => { formImageIssue(\"There was an issue uploading your image\"); setLoading(false)});\r\n    }\r\n\r\n    useEffect(() => {\r\n        displayFormDoctorImage(ModalDoctorDisplay);\r\n    }, [])\r\n\r\n    const imageUploader = (e) => {\r\n        const file = e.target.files[0]\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => {\r\n            setPreviewPic(e.target.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n        setPic({ selectedFile: e.target.files[0] })\r\n    }\r\n\r\n    const goToPreviousForm = () => {\r\n        goToNextForm(false)\r\n    }\r\n\r\n    if (redirect) {\r\n        return (\r\n            <Redirect to={url} />\r\n        )\r\n    }\r\n\r\n    const checkBoxSwitch = () => {\r\n        if (sendEmail) {\r\n            setSendEmail(false)\r\n        } else if (!sendEmail) {\r\n            setSendEmail(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='my-container'>\r\n            <div className='upload-container'>\r\n            <div className='instructions'>\r\n                        <h5 >1. Keep the spot in the absolute middle of the picture.</h5>\r\n                        <br />\r\n                        <h5>2. Make sure the quality of the picture is good enough.</h5>\r\n                        <br />\r\n                        <h5>3. Do not take a picture in a dark environment.</h5>\r\n                    </div>\r\n               <Form action=\"\" name=\"image\" className=\"upload-form\" onSubmit={e => uploadForm(e)} method=\"post\" enctype=\"multipart/form-data\">\r\n                    {!nextForm && \r\n                    <>\r\n                    <input type=\"file\" name=\"image\" ref={ref} id=\"hidden\" onChange={(e) => imageUploader(e)} />\r\n                    <div className=\"image-upload\" style={{width: `${previewPic ? `45px` : `90px`}`,height: `${previewPic ? `45px` : `90px`}`}}onClick={() => ref.current.click()}><FontAwesomeIcon style={imageUploadStyle} icon={faCamera} /></div>\r\n                   \r\n                       {previewPic && <div className=\"image-preview\">\r\n                            <ImageCrop\r\n                                src={previewPic}\r\n                                setImage={setCroppedImage}\r\n                            />\r\n                        </div>}\r\n                        <Button onClick={() => goToNextForm(true)}> Next </Button>                        \r\n                        </>}\r\n                        {nextForm && \r\n                        <>\r\n                        <div style={{position: 'relative', alignSelf: 'flex-start', marginLeft: '20px', cursor: 'pointer'}} onClick={goToPreviousForm}> <FontAwesomeIcon icon={faArrowLeft} size=\"2x\"/> </div>\r\n                         <Form.Control className=\"upload-input\" name=\"name\" placeholder=\"Name\" onChange={e => handleChange(e)} />\r\n                    <Form.Control className=\"upload-input\" type=\"number\" name=\"age\" placeholder=\"Age\" onChange={e => handleChange(e)} />\r\n                    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                        <Dropdown.Toggle caret>{(infos && infos.category) || 'Gender'}</Dropdown.Toggle>\r\n                        <Dropdown.Menu align='right'>\r\n                            <Dropdown.Item onClick={(e) => handleSelect(e)} name='Male'> Male </Dropdown.Item>\r\n                            <Dropdown.Item onClick={(e) => handleSelect(e)} name='Female'> Female </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                        {!loading ? <Button type=\"submit\"> Submit </Button> : <div className=\"mt-1\"><Spinner className=\"mt-4 mb-3\" color=\"secondary\" /></div>}\r\n                        </>}\r\n                        </Form>\r\n\r\n                   \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadForm","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Tools\\WebsiteResponses.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Tools\\URLs.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\ImageCrop\\ImageCrop.js",["100"],"import React, { PureComponent } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n\r\nclass ImageCrop extends PureComponent {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        src: null,\r\n        crop: {\r\n          unit: 'px',\r\n          width: 224,\r\n          height: 224,\r\n        },\r\n    };\r\n  }\r\n  \r\n\r\n  onSelectFile = e => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () =>\r\n        this.setState({ src: reader.result })\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // If you setState the crop in here you should return false.\r\n  onImageLoaded = image => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = crop => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop });\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(blob => {\r\n        if (!blob) {\r\n          //reject(new Error('Canvas is empty'));\r\n          console.error('Canvas is empty');\r\n          return;\r\n        }\r\n        blob.name = fileName;\r\n        const jpegFile = new File([blob], fileName, { type: blob.type })\r\n        this.props.setImage(jpegFile);\r\n        window.URL.revokeObjectURL(this.fileUrl);\r\n        this.fileUrl = window.URL.createObjectURL(blob);\r\n        resolve(this.fileUrl);\r\n      }, 'image/jpeg');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { crop, croppedImageUrl, src } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {this.props.src && (\r\n          <ReactCrop\r\n            src={this.props.src}\r\n            crop={crop}\r\n            ruleOfThirds\r\n            onImageLoaded={this.onImageLoaded}\r\n            onComplete={this.onCropComplete}\r\n            onChange={this.onCropChange}\r\n          />\r\n        )}\r\n        {croppedImageUrl && (\r\n          <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedImageUrl} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCrop;","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Modals\\LoginModal.jsx",["101","102"],"import axios from 'axios'\r\nimport { useContext, useState } from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {BASE_URL} from '../../App'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Authentication } from '../../Contexts/Authentication'\r\nimport Modal from 'react-modal';\r\nimport { signInSuccess } from '../../Tools/WebsiteResponses';\r\nimport url from '../../Tools/URLs';\r\n\r\nconst LoginModal = (props) => {\r\n    const [input, setInput] = useState(null) // Get input\r\n    const [error, setError] = useState(null) // Handle error from API\r\n\r\n    const {isLogged, setIsLogged} = useContext(Authentication) \r\n\r\n    const handleChange = (e) => {\r\n        setInput({...input, [e.target.name] : e.target.value})\r\n    }\r\n\r\n    const logIn = (e) => {\r\n        e.preventDefault()\r\n        axios.post(`${url}/login`, input)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                signInSuccess()\r\n                setIsLogged(true);\r\n                localStorage.setItem('token', res.data.token)\r\n                localStorage.setItem('sessionID', res.data.user._id)\r\n            }\r\n            props.setIsLoginOpen(false)\r\n        })\r\n        .catch(err => {\r\n            if(err.response.status === 409) {\r\n                setError(err.response.data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const errorStyle = {\r\n        color: '#d10000', \r\n        fontSize: '18px', \r\n        margin: '10px', \r\n        padding: '7px',\r\n        borderRadius: '9px',\r\n        backgroundColor: 'whitesmoke'\r\n    }\r\n\r\n    const goToSignup = () => {\r\n        props.setIsLoginOpen(false)\r\n        props.setIsSignupOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={props.isLoginOpen}\r\n          onRequestClose={props.closeLogin}\r\n          style={props.modalStyle}\r\n          contentLabel=\"Example Modal\"\r\n          closeLogin={props.closeLogin}\r\n            >\r\n            <span onClick={() => props.setIsLoginOpen(false)} className='modal-close-btn'><FontAwesomeIcon icon={faTimes}/></span>\r\n            <h2 style={{textAlign: 'center', color: '#434343'}}>Login</h2>\r\n            <Form className ='login-form' onSubmit={logIn}>\r\n                <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\r\n                <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\r\n                <Button type='submit' className='login-btn'> Login </Button>\r\n                {error && <span style={errorStyle}> {error} </span>}\r\n            </Form>\r\n            <div className='go-to-signup' onClick={goToSignup}> New ? Sign Up ! </div>\r\n       </Modal>\r\n    )\r\n}\r\n\r\nexport default LoginModal","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\Modals\\SignupModal.jsx",["103"],"import Modal from 'react-modal';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport { useContext, useState } from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport { Authentication } from '../../Contexts/Authentication'\r\nimport { signUpSuccess } from '../../Tools/WebsiteResponses';\r\nimport url from '../../Tools/URLs';\r\n\r\nconst SignupModal = (props) => {\r\n    const [input, setInput] = useState(null)  // Get input\r\n    const [error, setError] = useState(null) // // Handle error from API\r\n\r\n    const {isLogged, setIsLogged} = useContext(Authentication)\r\n\r\n    const handleChange = (e) => {\r\n        setInput({...input, [e.target.name] : e.target.value})\r\n    }\r\n    const signUp = (e) => {\r\n        e.preventDefault()\r\n        axios.post(`${url}/signup`, input)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                setIsLogged(true);\r\n                signUpSuccess();\r\n                localStorage.setItem('token', res.data.token)\r\n                localStorage.setItem('sessionID', res.data.user._id)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const error = err.response.data\r\n            // Define error message based on API\r\n            const errorType = error.message || error.firstName || error.lastName || error.phone \r\n            if(err.response.status === 409) {\r\n                setError(errorType)\r\n            }\r\n        })\r\n    }\r\n\r\n    const errorStyle = {\r\n        color: '#d10000', \r\n        fontSize: '18px', \r\n        marginTop: '10px', \r\n        padding: '7px',\r\n        borderRadius: '9px',\r\n        backgroundColor: 'whitesmoke'\r\n    }\r\n\r\n    const goToLogin = () => {\r\n        props.setIsSignupOpen(false)\r\n        props.setIsLoginOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        isOpen={props.isSignupOpen}\r\n        onRequestClose={props.closeSignup}\r\n        style={props.modalStyle}\r\n        contentLabel=\"Example Modal\"\r\n        closeLogin={props.closeSignup}\r\n          >\r\n        <span onClick={goToLogin} className='modal-close-btn'><FontAwesomeIcon icon={faArrowLeft}/></span>\r\n        <h2 style={{textAlign: 'center', color: '#434343'}}>Signup</h2>\r\n        <Form className ='login-form' onSubmit={signUp}>\r\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm password\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"firstName\" placeholder=\"First name\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"lastName\" placeholder=\"Last name\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"phone\" placeholder=\"Phone number\" onChange={e=>handleChange(e)}/>\r\n            <Button type='submit' className=\"login-btn\"> Signup </Button>\r\n            {error && <span style={errorStyle}> {error} </span>}\r\n        </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SignupModal","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\GoogleMap\\mapsModal.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\GoogleMap\\MapContainer.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\GoogleMap\\GoogleMap.jsx",["104","105","106","107"],"import React from \"react\";\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\r\nconst GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_KEY;\r\nconst mapStyles = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nexport class MapContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showingInfoWindow: false,\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n    };\r\n  }\r\n\r\n  fetchDoctors = (mapProps, map) => {\r\n    const { google } = mapProps;\r\n    const service = new google.maps.places.PlacesService(map);\r\n    const position = { lat: this.props.lat, lng: this.props.lng };\r\n    const request = {\r\n      location: position,\r\n      radius: 10000,\r\n      types: [\"hospital\", \"health\", \"doctor\", \"medical\", \"clinic\"],\r\n    };\r\n    service.nearbySearch(request, (results, status) => {\r\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\r\n        console.log(\"results= \" + results);\r\n        for (const [key, value] of Object.entries(results)) {\r\n          console.log(`${key}: ${value}`);\r\n        }\r\n        //name\r\n        const image =\r\n          \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\";\r\n        for (let i = 0; i < results.length; i++) {\r\n          //this.addMarker(map,results[i].geometry.location,results[i].name)\r\n          new google.maps.Marker({\r\n            position: results[i].geometry.location,\r\n            map: map,\r\n            title: results[i].name,\r\n            animation: google.maps.Animation.DROP,\r\n          });\r\n        }\r\n        /*console.log(\"results= \"+ results[0].geometry.location);\r\n                for (const [key, value] of Object.entries(results[0].geometry)) {\r\n                    console.log(`${key}: ${value}`);\r\n                }*/\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        onReady={this.fetchDoctors}\r\n        zoom={14}\r\n        style={mapStyles}\r\n        initialCenter={{\r\n          lat: this.props.lat,\r\n          lng: this.props.lng,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: GOOGLE_MAP_API_KEY,\r\n})(MapContainer);\r\n","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\HomeImages\\HomeImages.jsx",["108","109"],"import React from 'react';\r\nimport { Row, Container } from 'reactstrap';\r\nimport './HomeImages.css';\r\nimport image1 from './images/16613513_101.jpg';\r\nimport image2 from './images/GettyImages-515772901-1.jpg';\r\nimport image3 from './images/skin-cancer_G_1219130913-860x573.jpg';\r\n\r\nconst HomeImages = () => {\r\n\r\n    return (\r\n        <div className=\"border images-grid mb-5\">\r\n            <div style={{backgroundImage:`url(${image1})`}} className=\"skin-image rounded\"></div>\r\n            <div style={{backgroundImage:`url(${image2})`}} className=\"skin-image rounded img-2\"></div>\r\n            <div style={{backgroundImage:`url(${image3})`}} className=\"skin-image rounded\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeImages; ","C:\\Users\\joey-\\OneDrive\\Desktop\\Hackathon\\SkinAI\\src\\Components\\UserHistory\\UserHistory.jsx",["110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":19,"column":3,"nodeType":"117","endLine":19,"endColumn":12,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":2,"column":3,"nodeType":"117","messageId":"121","endLine":2,"endColumn":12},{"ruleId":"119","severity":1,"message":"122","line":4,"column":3,"nodeType":"117","messageId":"121","endLine":4,"endColumn":7},{"ruleId":"119","severity":1,"message":"123","line":5,"column":3,"nodeType":"117","messageId":"121","endLine":5,"endColumn":9},{"ruleId":"119","severity":1,"message":"124","line":6,"column":3,"nodeType":"117","messageId":"121","endLine":6,"endColumn":11},{"ruleId":"119","severity":1,"message":"125","line":7,"column":3,"nodeType":"117","messageId":"121","endLine":7,"endColumn":6},{"ruleId":"119","severity":1,"message":"126","line":8,"column":3,"nodeType":"117","messageId":"121","endLine":8,"endColumn":6},{"ruleId":"119","severity":1,"message":"127","line":10,"column":8,"nodeType":"117","messageId":"121","endLine":10,"endColumn":11},{"ruleId":"119","severity":1,"message":"128","line":16,"column":9,"nodeType":"117","messageId":"121","endLine":16,"endColumn":17},{"ruleId":"119","severity":1,"message":"129","line":5,"column":32,"nodeType":"117","messageId":"121","endLine":5,"endColumn":38},{"ruleId":"119","severity":1,"message":"120","line":5,"column":10,"nodeType":"117","messageId":"121","endLine":5,"endColumn":19},{"ruleId":"119","severity":1,"message":"125","line":5,"column":45,"nodeType":"117","messageId":"121","endLine":5,"endColumn":48},{"ruleId":"119","severity":1,"message":"130","line":21,"column":22,"nodeType":"117","messageId":"121","endLine":21,"endColumn":33},{"ruleId":"119","severity":1,"message":"131","line":99,"column":11,"nodeType":"117","messageId":"121","endLine":99,"endColumn":25},{"ruleId":"119","severity":1,"message":"132","line":94,"column":36,"nodeType":"117","messageId":"121","endLine":94,"endColumn":39},{"ruleId":"119","severity":1,"message":"133","line":4,"column":9,"nodeType":"117","messageId":"121","endLine":4,"endColumn":17},{"ruleId":"119","severity":1,"message":"134","line":16,"column":12,"nodeType":"117","messageId":"121","endLine":16,"endColumn":20},{"ruleId":"119","severity":1,"message":"134","line":15,"column":12,"nodeType":"117","messageId":"121","endLine":15,"endColumn":20},{"ruleId":"119","severity":1,"message":"135","line":2,"column":33,"nodeType":"117","messageId":"121","endLine":2,"endColumn":43},{"ruleId":"119","severity":1,"message":"136","line":2,"column":45,"nodeType":"117","messageId":"121","endLine":2,"endColumn":51},{"ruleId":"137","severity":1,"message":"138","line":29,"column":18,"nodeType":"139","messageId":"140","endLine":29,"endColumn":20},{"ruleId":"119","severity":1,"message":"141","line":35,"column":15,"nodeType":"117","messageId":"121","endLine":35,"endColumn":20},{"ruleId":"119","severity":1,"message":"125","line":2,"column":10,"nodeType":"117","messageId":"121","endLine":2,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":2,"column":15,"nodeType":"117","messageId":"121","endLine":2,"endColumn":24},{"ruleId":"115","severity":1,"message":"142","line":16,"column":8,"nodeType":"143","endLine":16,"endColumn":10,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsLogged'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.","Identifier",["147"],"no-unused-vars","'Container' is defined but never used.","unusedVar","'Form' is defined but never used.","'Button' is defined but never used.","'Dropdown' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'pic' is defined but never used.","'location' is assigned a value but never used.","'useRef' is defined but never used.","'setRedirect' is assigned a value but never used.","'checkBoxSwitch' is assigned a value but never used.","'src' is assigned a value but never used.","'BASE_URL' is defined but never used.","'isLogged' is assigned a value but never used.","'InfoWindow' is defined but never used.","'Marker' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'image' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.","ArrayExpression",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Add dependencies array: [token]",{"range":"153","text":"154"},"Update the dependencies array to be: [config]",{"range":"155","text":"156"},[905,905],", [token]",[682,684],"[config]"]