{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/burslf/ITC/SKIN/SkinAI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/home/burslf/ITC/SKIN/SkinAI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/burslf/ITC/SKIN/SkinAI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/burslf/ITC/SKIN/SkinAI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/burslf/ITC/SKIN/SkinAI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Map,GoogleApiWrapper,InfoWindow,Marker}from\"google-maps-react\";var GOOGLE_MAP_API_KEY=process.env.REACT_APP_GOOGLE_MAP_KEY;var mapStyles={width:\"100%\",height:\"100%\"};export var MapContainer=/*#__PURE__*/function(_React$Component){_inherits(MapContainer,_React$Component);var _super=_createSuper(MapContainer);function MapContainer(props){var _this;_classCallCheck(this,MapContainer);_this=_super.call(this,props);_this.fetchDoctors=function(mapProps,map){var google=mapProps.google;var service=new google.maps.places.PlacesService(map);var position={lat:_this.props.lat,lng:_this.props.lng};var request={location:position,radius:10000,types:[\"hospital\",\"health\",\"doctor\",\"medical\",\"clinic\"]};service.nearbySearch(request,function(results,status){if(status==google.maps.places.PlacesServiceStatus.OK){console.log(\"results= \"+results);for(var _i=0,_Object$entries=Object.entries(results);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];console.log(\"\".concat(key,\": \").concat(value));}//name\nvar image=\"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\";for(var i=0;i<results.length;i++){//this.addMarker(map,results[i].geometry.location,results[i].name)\nnew google.maps.Marker({position:results[i].geometry.location,map:map,title:results[i].name,animation:google.maps.Animation.DROP});}/*console.log(\"results= \"+ results[0].geometry.location);\n                for (const [key, value] of Object.entries(results[0].geometry)) {\n                    console.log(`${key}: ${value}`);\n                }*/}});};_this.state={showingInfoWindow:false,activeMarker:{},selectedPlace:{}};return _this;}_createClass(MapContainer,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(Map,{google:this.props.google,onReady:this.fetchDoctors,zoom:14,style:mapStyles,initialCenter:{lat:this.props.lat,lng:this.props.lng}});}}]);return MapContainer;}(React.Component);export default GoogleApiWrapper({apiKey:GOOGLE_MAP_API_KEY})(MapContainer);","map":{"version":3,"sources":["/home/burslf/ITC/SKIN/SkinAI/src/Components/GoogleMap/GoogleMap.jsx"],"names":["React","Map","GoogleApiWrapper","InfoWindow","Marker","GOOGLE_MAP_API_KEY","process","env","REACT_APP_GOOGLE_MAP_KEY","mapStyles","width","height","MapContainer","props","fetchDoctors","mapProps","map","google","service","maps","places","PlacesService","position","lat","lng","request","location","radius","types","nearbySearch","results","status","PlacesServiceStatus","OK","console","log","Object","entries","key","value","image","i","length","geometry","title","name","animation","Animation","DROP","state","showingInfoWindow","activeMarker","selectedPlace","Component","apiKey"],"mappings":"0vBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,gBAAd,CAAgCC,UAAhC,CAA4CC,MAA5C,KAA0D,mBAA1D,CACA,GAAMC,CAAAA,kBAAkB,CAAGC,OAAO,CAACC,GAAR,CAAYC,wBAAvC,CACA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,KAAK,CAAE,MADS,CAEhBC,MAAM,CAAE,MAFQ,CAAlB,CAKA,UAAaC,CAAAA,YAAb,wHACE,sBAAYC,KAAZ,CAAmB,8CACjB,uBAAMA,KAAN,EADiB,MASnBC,YATmB,CASJ,SAACC,QAAD,CAAWC,GAAX,CAAmB,IACxBC,CAAAA,MADwB,CACbF,QADa,CACxBE,MADwB,CAEhC,GAAMC,CAAAA,OAAO,CAAG,GAAID,CAAAA,MAAM,CAACE,IAAP,CAAYC,MAAZ,CAAmBC,aAAvB,CAAqCL,GAArC,CAAhB,CACA,GAAMM,CAAAA,QAAQ,CAAG,CAAEC,GAAG,CAAE,MAAKV,KAAL,CAAWU,GAAlB,CAAuBC,GAAG,CAAE,MAAKX,KAAL,CAAWW,GAAvC,CAAjB,CACA,GAAMC,CAAAA,OAAO,CAAG,CACdC,QAAQ,CAAEJ,QADI,CAEdK,MAAM,CAAE,KAFM,CAGdC,KAAK,CAAE,CAAC,UAAD,CAAa,QAAb,CAAuB,QAAvB,CAAiC,SAAjC,CAA4C,QAA5C,CAHO,CAAhB,CAKAV,OAAO,CAACW,YAAR,CAAqBJ,OAArB,CAA8B,SAACK,OAAD,CAAUC,MAAV,CAAqB,CACjD,GAAIA,MAAM,EAAId,MAAM,CAACE,IAAP,CAAYC,MAAZ,CAAmBY,mBAAnB,CAAuCC,EAArD,CAAyD,CACvDC,OAAO,CAACC,GAAR,CAAY,YAAcL,OAA1B,EACA,6BAA2BM,MAAM,CAACC,OAAP,CAAeP,OAAf,CAA3B,gCAAoD,8DAAxCQ,GAAwC,uBAAnCC,KAAmC,uBAClDL,OAAO,CAACC,GAAR,WAAeG,GAAf,cAAuBC,KAAvB,GACD,CACD;AACA,GAAMC,CAAAA,KAAK,CACT,gGADF,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGX,OAAO,CAACY,MAA5B,CAAoCD,CAAC,EAArC,CAAyC,CACvC;AACA,GAAIxB,CAAAA,MAAM,CAACE,IAAP,CAAYf,MAAhB,CAAuB,CACrBkB,QAAQ,CAAEQ,OAAO,CAACW,CAAD,CAAP,CAAWE,QAAX,CAAoBjB,QADT,CAErBV,GAAG,CAAEA,GAFgB,CAGrB4B,KAAK,CAAEd,OAAO,CAACW,CAAD,CAAP,CAAWI,IAHG,CAIrBC,SAAS,CAAE7B,MAAM,CAACE,IAAP,CAAY4B,SAAZ,CAAsBC,IAJZ,CAAvB,EAMD,CACD;AACR;AACA;AACA,mBACO,CACF,CAvBD,EAwBD,CA1CkB,CAEjB,MAAKC,KAAL,CAAa,CACXC,iBAAiB,CAAE,KADR,CAEXC,YAAY,CAAE,EAFH,CAGXC,aAAa,CAAE,EAHJ,CAAb,CAFiB,aAOlB,CARH,gEA6CW,CACP,mBACE,KAAC,GAAD,EACE,MAAM,CAAE,KAAKvC,KAAL,CAAWI,MADrB,CAEE,OAAO,CAAE,KAAKH,YAFhB,CAGE,IAAI,CAAE,EAHR,CAIE,KAAK,CAAEL,SAJT,CAKE,aAAa,CAAE,CACbc,GAAG,CAAE,KAAKV,KAAL,CAAWU,GADH,CAEbC,GAAG,CAAE,KAAKX,KAAL,CAAWW,GAFH,CALjB,EADF,CAYD,CA1DH,0BAAkCxB,KAAK,CAACqD,SAAxC,EA6DA,cAAenD,CAAAA,gBAAgB,CAAC,CAC9BoD,MAAM,CAAEjD,kBADsB,CAAD,CAAhB,CAEZO,YAFY,CAAf","sourcesContent":["import React from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nconst GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_KEY;\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n    };\n  }\n\n  fetchDoctors = (mapProps, map) => {\n    const { google } = mapProps;\n    const service = new google.maps.places.PlacesService(map);\n    const position = { lat: this.props.lat, lng: this.props.lng };\n    const request = {\n      location: position,\n      radius: 10000,\n      types: [\"hospital\", \"health\", \"doctor\", \"medical\", \"clinic\"],\n    };\n    service.nearbySearch(request, (results, status) => {\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\n        console.log(\"results= \" + results);\n        for (const [key, value] of Object.entries(results)) {\n          console.log(`${key}: ${value}`);\n        }\n        //name\n        const image =\n          \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\";\n        for (let i = 0; i < results.length; i++) {\n          //this.addMarker(map,results[i].geometry.location,results[i].name)\n          new google.maps.Marker({\n            position: results[i].geometry.location,\n            map: map,\n            title: results[i].name,\n            animation: google.maps.Animation.DROP,\n          });\n        }\n        /*console.log(\"results= \"+ results[0].geometry.location);\n                for (const [key, value] of Object.entries(results[0].geometry)) {\n                    console.log(`${key}: ${value}`);\n                }*/\n      }\n    });\n  };\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        onReady={this.fetchDoctors}\n        zoom={14}\n        style={mapStyles}\n        initialCenter={{\n          lat: this.props.lat,\n          lng: this.props.lng,\n        }}\n      />\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: GOOGLE_MAP_API_KEY,\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}