{"ast":null,"code":"const Swal = require(\"sweetalert2\");\n\nconst axios = require('axios');\n\nconst invalidFields = message => {\n  return Swal.fire({\n    title: \"Invalid fields\",\n    icon: \"error\",\n    confirmButtonText: message\n  });\n};\n\nconst wrongCredentials = message => {\n  return Swal.fire({\n    title: \"Invalid fields\",\n    icon: \"error\",\n    confirmButtonText: message\n  });\n};\n\nconst signUpSuccess = () => {\n  return Swal.fire({\n    title: \"Signed Up\",\n    icon: \"success\",\n    timer: 1000,\n    showConfirmButton: false\n  });\n};\n\nconst signInSuccess = () => {\n  return Swal.fire({\n    title: \"Welcome back\",\n    icon: \"success\",\n    timer: 1000,\n    showConfirmButton: false\n  });\n};\n\nconst formImageIssue = msg => {\n  return Swal.fire({\n    title: msg,\n    icon: \"error\",\n    timer: 2000,\n    showConfirmButton: false\n  });\n};\n\nconst itemUploaded = msg => {\n  return Swal.fire({\n    title: msg,\n    text: \"redirecting...\",\n    icon: \"success\",\n    timer: 2500,\n    showConfirmButton: false\n  });\n};\n\nconst loggedOut = () => {\n  return Swal.fire({\n    title: \"Logged out\",\n    icon: \"error\",\n    timer: 1000,\n    showConfirmButton: false\n  });\n};\n\nconst confirmLogout = setAuthenticated => {\n  return Swal.fire({\n    text: \"Logout?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes\"\n  }).then(result => {\n    if (result.isConfirmed) {\n      setAuthenticated(false);\n      localStorage.clear();\n      loggedOut();\n    }\n  });\n};\n\nconst displayFormDoctorImage = image => {\n  Swal.fire({\n    title: \"Please make sure to follow our image instructions.\",\n    text: \"This is to make sure we're able to help you the best we can.\",\n    imageUrl: image,\n    // imageWidth: 300,\n    // imageHeight: 240,\n    imageAlt: \"Instructions Alert\"\n  });\n};\n\nconst redirecting = () => {\n  return Swal.fire({\n    title: \"Loading...\",\n    icon: \"success\",\n    timer: 2000,\n    showConfirmButton: false\n  });\n};\n\nconst askForAllResultsDelete = (url, config, setUserResults) => {\n  return Swal.fire({\n    title: \"Your results will be deleted and can't be recovered.\",\n    text: \"Are you sure?\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#3085d6',\n    cancelButtonColor: '#d33',\n    confirmButtonText: 'Yes'\n  }).then(result => {\n    if (result.isConfirmed) {\n      axios.delete(`${url}/remove-history`, config).then(res => setUserResults(null)).catch(err => console.log(\"Couldn't delete all results from the database\"));\n    }\n  });\n};\n\nconst askForOneResultDelete = (id, url, config, userResults, setUserResults) => {\n  return Swal.fire({\n    title: \"Your results will be deleted and can't be recovered.\",\n    text: \"Are you sure?\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#3085d6',\n    cancelButtonColor: '#d33',\n    confirmButtonText: 'Yes'\n  }).then(result => {\n    if (result.isConfirmed) {\n      console.log(url);\n      axios.delete(`${url}/remove/${id}`, config).then(res => {\n        const newResults = userResults.filter(obj => {\n          return obj.resultId !== id;\n        });\n        setUserResults(newResults);\n      }).catch(err => console.log(\"Couldn't delete result from the database\"));\n    }\n  });\n};\n\nexport { invalidFields, wrongCredentials, signUpSuccess, signInSuccess, itemUploaded, formImageIssue, confirmLogout, displayFormDoctorImage, redirecting, askForAllResultsDelete, askForOneResultDelete };","map":{"version":3,"sources":["/home/burslf/ITC/SKIN/SkinAI/src/Tools/WebsiteResponses.js"],"names":["Swal","require","axios","invalidFields","message","fire","title","icon","confirmButtonText","wrongCredentials","signUpSuccess","timer","showConfirmButton","signInSuccess","formImageIssue","msg","itemUploaded","text","loggedOut","confirmLogout","setAuthenticated","showCancelButton","confirmButtonColor","cancelButtonColor","then","result","isConfirmed","localStorage","clear","displayFormDoctorImage","image","imageUrl","imageAlt","redirecting","askForAllResultsDelete","url","config","setUserResults","delete","res","catch","err","console","log","askForOneResultDelete","id","userResults","newResults","filter","obj","resultId"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,aAAD,CAApB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAME,aAAa,GAAIC,OAAD,IAAa;AACjC,SAAOJ,IAAI,CAACK,IAAL,CAAU;AACfC,IAAAA,KAAK,EAAE,gBADQ;AAEfC,IAAAA,IAAI,EAAE,OAFS;AAGfC,IAAAA,iBAAiB,EAAEJ;AAHJ,GAAV,CAAP;AAKD,CAND;;AAQA,MAAMK,gBAAgB,GAAIL,OAAD,IAAa;AACpC,SAAOJ,IAAI,CAACK,IAAL,CAAU;AACfC,IAAAA,KAAK,EAAE,gBADQ;AAEfC,IAAAA,IAAI,EAAE,OAFS;AAGfC,IAAAA,iBAAiB,EAAEJ;AAHJ,GAAV,CAAP;AAKD,CAND;;AAQA,MAAMM,aAAa,GAAG,MAAM;AAC1B,SAAOV,IAAI,CAACK,IAAL,CAAU;AACfC,IAAAA,KAAK,EAAE,WADQ;AAEfC,IAAAA,IAAI,EAAE,SAFS;AAGfI,IAAAA,KAAK,EAAE,IAHQ;AAIfC,IAAAA,iBAAiB,EAAE;AAJJ,GAAV,CAAP;AAMD,CAPD;;AASA,MAAMC,aAAa,GAAG,MAAM;AAC1B,SAAOb,IAAI,CAACK,IAAL,CAAU;AACfC,IAAAA,KAAK,EAAE,cADQ;AAEfC,IAAAA,IAAI,EAAE,SAFS;AAGfI,IAAAA,KAAK,EAAE,IAHQ;AAIfC,IAAAA,iBAAiB,EAAE;AAJJ,GAAV,CAAP;AAMD,CAPD;;AASA,MAAME,cAAc,GAAIC,GAAD,IAAS;AAC9B,SAAOf,IAAI,CAACK,IAAL,CAAU;AACfC,IAAAA,KAAK,EAAES,GADQ;AAEfR,IAAAA,IAAI,EAAE,OAFS;AAGfI,IAAAA,KAAK,EAAE,IAHQ;AAIfC,IAAAA,iBAAiB,EAAE;AAJJ,GAAV,CAAP;AAMD,CAPD;;AASA,MAAMI,YAAY,GAAID,GAAD,IAAS;AAC5B,SAAOf,IAAI,CAACK,IAAL,CAAU;AACfC,IAAAA,KAAK,EAAES,GADQ;AAEfE,IAAAA,IAAI,EAAE,gBAFS;AAGfV,IAAAA,IAAI,EAAE,SAHS;AAIfI,IAAAA,KAAK,EAAE,IAJQ;AAKfC,IAAAA,iBAAiB,EAAE;AALJ,GAAV,CAAP;AAOD,CARD;;AAUA,MAAMM,SAAS,GAAG,MAAM;AACtB,SAAOlB,IAAI,CAACK,IAAL,CAAU;AACfC,IAAAA,KAAK,EAAE,YADQ;AAEfC,IAAAA,IAAI,EAAE,OAFS;AAGfI,IAAAA,KAAK,EAAE,IAHQ;AAIfC,IAAAA,iBAAiB,EAAE;AAJJ,GAAV,CAAP;AAMD,CAPD;;AASA,MAAMO,aAAa,GAAIC,gBAAD,IAAsB;AAC1C,SAAOpB,IAAI,CAACK,IAAL,CAAU;AACfY,IAAAA,IAAI,EAAE,SADS;AAEfV,IAAAA,IAAI,EAAE,SAFS;AAGfc,IAAAA,gBAAgB,EAAE,IAHH;AAIfC,IAAAA,kBAAkB,EAAE,SAJL;AAKfC,IAAAA,iBAAiB,EAAE,MALJ;AAMff,IAAAA,iBAAiB,EAAE;AANJ,GAAV,EAOJgB,IAPI,CAOEC,MAAD,IAAY;AAClB,QAAIA,MAAM,CAACC,WAAX,EAAwB;AACtBN,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAO,MAAAA,YAAY,CAACC,KAAb;AACAV,MAAAA,SAAS;AACV;AACF,GAbM,CAAP;AAcD,CAfD;;AAiBA,MAAMW,sBAAsB,GAAIC,KAAD,IAAW;AACxC9B,EAAAA,IAAI,CAACK,IAAL,CAAU;AACRC,IAAAA,KAAK,EAAE,oDADC;AAERW,IAAAA,IAAI,EAAE,8DAFE;AAGRc,IAAAA,QAAQ,EAAED,KAHF;AAIR;AACA;AACAE,IAAAA,QAAQ,EAAE;AANF,GAAV;AAQD,CATD;;AAWA,MAAMC,WAAW,GAAG,MAAM;AACxB,SAAOjC,IAAI,CAACK,IAAL,CAAU;AACfC,IAAAA,KAAK,EAAE,YADQ;AAEfC,IAAAA,IAAI,EAAE,SAFS;AAGfI,IAAAA,KAAK,EAAE,IAHQ;AAIfC,IAAAA,iBAAiB,EAAE;AAJJ,GAAV,CAAP;AAMD,CAPD;;AASA,MAAMsB,sBAAsB,GAAG,CAACC,GAAD,EAAKC,MAAL,EAAYC,cAAZ,KAA+B;AAC5D,SAAOrC,IAAI,CAACK,IAAL,CAAU;AACfC,IAAAA,KAAK,EAAE,sDADQ;AAEfW,IAAAA,IAAI,EAAE,eAFS;AAGfV,IAAAA,IAAI,EAAE,SAHS;AAIfc,IAAAA,gBAAgB,EAAE,IAJH;AAKfC,IAAAA,kBAAkB,EAAE,SALL;AAMfC,IAAAA,iBAAiB,EAAE,MANJ;AAOff,IAAAA,iBAAiB,EAAE;AAPJ,GAAV,EAQJgB,IARI,CAQEC,MAAD,IAAY;AAClB,QAAIA,MAAM,CAACC,WAAX,EAAwB;AACtBxB,MAAAA,KAAK,CAACoC,MAAN,CAAc,GAAEH,GAAI,iBAApB,EAAsCC,MAAtC,EACGZ,IADH,CACQe,GAAG,IAAIF,cAAc,CAAC,IAAD,CAD7B,EAEGG,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,+CAAZ,CAFhB;AAGD;AACF,GAdM,CAAP;AAeD,CAhBD;;AAkBA,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAKV,GAAL,EAASC,MAAT,EAAgBU,WAAhB,EAA4BT,cAA5B,KAA+C;AAC3E,SAAOrC,IAAI,CAACK,IAAL,CAAU;AACfC,IAAAA,KAAK,EAAE,sDADQ;AAEfW,IAAAA,IAAI,EAAE,eAFS;AAGfV,IAAAA,IAAI,EAAE,SAHS;AAIfc,IAAAA,gBAAgB,EAAE,IAJH;AAKfC,IAAAA,kBAAkB,EAAE,SALL;AAMfC,IAAAA,iBAAiB,EAAE,MANJ;AAOff,IAAAA,iBAAiB,EAAE;AAPJ,GAAV,EAQJgB,IARI,CAQEC,MAAD,IAAY;AAClB,QAAIA,MAAM,CAACC,WAAX,EAAwB;AACtBgB,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAjC,MAAAA,KAAK,CAACoC,MAAN,CAAc,GAAEH,GAAI,WAAUU,EAAG,EAAjC,EAAoCT,MAApC,EACGZ,IADH,CACQe,GAAG,IAAI;AACX,cAAMQ,UAAU,GAAGD,WAAW,CAACE,MAAZ,CAAoBC,GAAD,IAAS;AAC7C,iBAAOA,GAAG,CAACC,QAAJ,KAAeL,EAAtB;AACD,SAFkB,CAAnB;AAGAR,QAAAA,cAAc,CAACU,UAAD,CAAd;AACD,OANH,EAOGP,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,0CAAZ,CAPhB;AAQD;AACF,GApBM,CAAP;AAqBD,CAtBD;;AAwBA,SAASxC,aAAT,EAAwBM,gBAAxB,EAA0CC,aAA1C,EAAyDG,aAAzD,EAAwEG,YAAxE,EAAsFF,cAAtF,EAAsGK,aAAtG,EAAqHU,sBAArH,EAA6II,WAA7I,EAA0JC,sBAA1J,EAAkLU,qBAAlL","sourcesContent":["const Swal = require(\"sweetalert2\");\nconst axios = require('axios');\n\nconst invalidFields = (message) => {\n  return Swal.fire({\n    title: \"Invalid fields\",\n    icon: \"error\",\n    confirmButtonText: message,\n  });\n};\n\nconst wrongCredentials = (message) => {\n  return Swal.fire({\n    title: \"Invalid fields\",\n    icon: \"error\",\n    confirmButtonText: message,\n  });\n};\n\nconst signUpSuccess = () => {\n  return Swal.fire({\n    title: \"Signed Up\",\n    icon: \"success\",\n    timer: 1000,\n    showConfirmButton: false,\n  });\n};\n\nconst signInSuccess = () => {\n  return Swal.fire({\n    title: \"Welcome back\",\n    icon: \"success\",\n    timer: 1000,\n    showConfirmButton: false,\n  });\n};\n\nconst formImageIssue = (msg) => {\n  return Swal.fire({\n    title: msg,\n    icon: \"error\",\n    timer: 2000,\n    showConfirmButton: false,\n  });\n};\n\nconst itemUploaded = (msg) => {\n  return Swal.fire({\n    title: msg,\n    text: \"redirecting...\",\n    icon: \"success\",\n    timer: 2500,\n    showConfirmButton: false,\n  });\n};\n\nconst loggedOut = () => {\n  return Swal.fire({\n    title: \"Logged out\",\n    icon: \"error\",\n    timer: 1000,\n    showConfirmButton: false,\n  });\n};\n\nconst confirmLogout = (setAuthenticated) => {\n  return Swal.fire({\n    text: \"Logout?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      setAuthenticated(false);\n      localStorage.clear();\n      loggedOut();\n    }\n  });\n};\n\nconst displayFormDoctorImage = (image) => {\n  Swal.fire({\n    title: \"Please make sure to follow our image instructions.\",\n    text: \"This is to make sure we're able to help you the best we can.\",\n    imageUrl: image,\n    // imageWidth: 300,\n    // imageHeight: 240,\n    imageAlt: \"Instructions Alert\",\n  });\n};\n\nconst redirecting = () => {\n  return Swal.fire({\n    title: \"Loading...\",\n    icon: \"success\",\n    timer: 2000,\n    showConfirmButton: false,\n  });\n};\n\nconst askForAllResultsDelete = (url,config,setUserResults) => {\n  return Swal.fire({\n    title: \"Your results will be deleted and can't be recovered.\",\n    text: \"Are you sure?\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#3085d6',\n    cancelButtonColor: '#d33',\n    confirmButtonText: 'Yes'\n  }).then((result) => {\n    if (result.isConfirmed) {\n      axios.delete(`${url}/remove-history`, config)\n        .then(res => setUserResults(null))\n        .catch(err => console.log(\"Couldn't delete all results from the database\"));\n    }\n  })\n}\n\nconst askForOneResultDelete = (id, url,config,userResults,setUserResults) => {\n  return Swal.fire({\n    title: \"Your results will be deleted and can't be recovered.\",\n    text: \"Are you sure?\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#3085d6',\n    cancelButtonColor: '#d33',\n    confirmButtonText: 'Yes'\n  }).then((result) => {\n    if (result.isConfirmed) {\n      console.log(url)\n      axios.delete(`${url}/remove/${id}`, config)\n        .then(res => {\n          const newResults = userResults.filter((obj) => {\n            return obj.resultId!==id;\n          })\n          setUserResults(newResults);\n        })\n        .catch(err => console.log(\"Couldn't delete result from the database\"));\n    }\n  })\n}\n\nexport { invalidFields, wrongCredentials, signUpSuccess, signInSuccess, itemUploaded, formImageIssue, confirmLogout, displayFormDoctorImage, redirecting, askForAllResultsDelete, askForOneResultDelete };\n"]},"metadata":{},"sourceType":"module"}