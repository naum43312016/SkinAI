{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/burslf/ITC/SKIN/SkinAI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{BrowserRouter as Router,Switch,Route,Link}from\"react-router-dom\";import\"bootstrap/dist/css/bootstrap.min.css\";import Slides from\"./Components/Slides/Slides\";import Navbar from\"./Components/NavBar/Navbar\";import{useEffect,useState}from\"react\";import{Authentication}from\"./Contexts/Authentication\";import UploadForm from\"./Components/UploadForm/UploadForm\";import\"./App.css\";import Prediction from\"./Components/Prediction/Prediction\";import HomeImages from\"./Components/HomeImages/HomeImages\";export var BASE_URL=process.env.REACT_APP_BASE_URL;function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),isLogged=_useState2[0],setIsLogged=_useState2[1];var token=localStorage.getItem(\"token\");useEffect(function(){if(token){setIsLogged(true);}else{setIsLogged(false);}});return/*#__PURE__*/_jsx(Authentication.Provider,{value:{isLogged:isLogged,setIsLogged:setIsLogged},children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/upload\",children:/*#__PURE__*/_jsx(UploadForm,{})}),/*#__PURE__*/_jsx(Route,{path:\"/Prediction\",children:/*#__PURE__*/_jsx(Prediction,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"my-container\",children:[/*#__PURE__*/_jsx(Slides,{}),/*#__PURE__*/_jsx(Link,{to:\"/upload\",className:\"open-upload-form\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:\" Upload \"})})}),/*#__PURE__*/_jsx(HomeImages,{})]})})]})]})});}export default App;","map":{"version":3,"sources":["/home/burslf/ITC/SKIN/SkinAI/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","Link","Slides","Navbar","useEffect","useState","Authentication","UploadForm","Prediction","HomeImages","BASE_URL","process","env","REACT_APP_BASE_URL","App","isLogged","setIsLogged","token","localStorage","getItem"],"mappings":"2OAAA,OAASA,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,CAAiDC,IAAjD,KAA6D,kBAA7D,CACA,MAAO,sCAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,cAAT,KAA+B,2BAA/B,CACA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA7B,CAEP,QAASC,CAAAA,GAAT,EAAe,eACmBT,QAAQ,CAAC,IAAD,CAD3B,wCACNU,QADM,eACIC,WADJ,eAEb,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAEAf,SAAS,CAAC,UAAM,CACd,GAAIa,KAAJ,CAAW,CACTD,WAAW,CAAC,IAAD,CAAX,CACD,CAFD,IAEO,CACLA,WAAW,CAAC,KAAD,CAAX,CACD,CACF,CANQ,CAAT,CAQA,mBACE,KAAC,cAAD,CAAgB,QAAhB,EAAyB,KAAK,CAAE,CAAED,QAAQ,CAARA,QAAF,CAAYC,WAAW,CAAXA,WAAZ,CAAhC,uBACE,MAAC,MAAD,yBACE,KAAC,MAAD,IADF,cAEE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,uBACE,KAAC,UAAD,IADF,EADF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,aAAZ,uBACE,KAAC,UAAD,IADF,EAJF,cAOE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,uBACE,aAAK,SAAS,CAAC,cAAf,wBACE,KAAC,MAAD,IADF,cAGI,KAAC,IAAD,EAAM,EAAE,CAAC,SAAT,CAAmB,SAAS,CAAC,kBAA7B,uBACE,kCACE,iCADF,EADF,EAHJ,cASE,KAAC,UAAD,IATF,GADF,EAPF,GAFF,GADF,EADF,CA4BD,CAED,cAAeF,CAAAA,GAAf","sourcesContent":["import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Slides from \"./Components/Slides/Slides\";\nimport Navbar from \"./Components/NavBar/Navbar\";\nimport { useEffect, useState } from \"react\";\nimport { Authentication } from \"./Contexts/Authentication\";\nimport UploadForm from \"./Components/UploadForm/UploadForm\";\nimport \"./App.css\";\nimport Prediction from \"./Components/Prediction/Prediction\";\nimport HomeImages from \"./Components/HomeImages/HomeImages\";\n\nexport const BASE_URL = process.env.REACT_APP_BASE_URL;\n\nfunction App() {\n  const [isLogged, setIsLogged] = useState(null);\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    if (token) {\n      setIsLogged(true);\n    } else {\n      setIsLogged(false);\n    }\n  });\n\n  return (\n    <Authentication.Provider value={{ isLogged, setIsLogged }}>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/upload\">\n            <UploadForm />\n          </Route>\n          <Route path=\"/Prediction\">\n            <Prediction />\n          </Route>\n          <Route path=\"/\">\n            <div className=\"my-container\">\n              <Slides />\n              {\n                <Link to=\"/upload\" className=\"open-upload-form\">\n                  <div>\n                    <div> Upload </div>\n                  </div>\n                </Link>\n              }\n              <HomeImages/>\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </Authentication.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}