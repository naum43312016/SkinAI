{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/burslf/ITC/SKIN/SkinAI/src/Components/UploadForm/UploadForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react';\nimport { Container, Form, Input, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport './UploadForm.css'; // import { invalidFields } from '../../Tools/WebsiteResponses';\n// import { itemUploaded } from '../../Tools/WebsiteResponses';\n\nimport { Redirect } from 'react-router';\nimport { BASE_URL } from '../../App';\n\nconst UploadForm = () => {\n  _s();\n\n  const [itemInfos, setItemInfos] = useState(null);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [categories, setCategories] = useState({\n    categories: null,\n    selected: null\n  });\n  const [pic, setPic] = useState({\n    selectedFile: null\n  });\n  const [previewPic, setPreviewPic] = useState(\"\");\n  const [redirect, setRedirect] = useState(false); // in case of success\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const ref = useRef(null);\n\n  const handleChange = e => {\n    setItemInfos({ ...itemInfos,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const imageUploadStyle = {\n    color: \"#4a81ff\",\n    fontSize: \"35px\"\n  };\n\n  const handleSelect = e => {\n    setCategories({ ...categories,\n      selected: e.target.value\n    });\n    setItemInfos({ ...itemInfos,\n      category: e.target.value\n    });\n  };\n\n  const postItem = e => {\n    e.preventDefault();\n    const data = new FormData();\n\n    for (let key in itemInfos) {\n      data.append(key, itemInfos[key]);\n    }\n\n    if (pic.selectedFile) {\n      data.append('image', pic.selectedFile, `${Date.now()}-${pic.selectedFile.name}`);\n    }\n\n    axios.post(`${BASE_URL}/item`, data, {\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      }\n    }).then(itemUploaded().then(setRedirect(true))) // if success so set success & redirect to homepage\n    .catch(err => {\n      // fetch error message from server\n      const error = err.response.data;\n      const errorMessages = error.message || error.category || error.name || error.condition || error.description || error.price;\n      invalidFields(errorMessages); // else show error message\n    });\n  };\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/category/all`).then(res => setCategories({ ...categories,\n      categories: res.data\n    })).catch(err => console.error(err));\n  }, []);\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: BASE_URL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      action: \"\",\n      className: \"add-item-form\",\n      onSubmit: e => postItem(e),\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: ref,\n        id: \"hidden\",\n        onChange: e => {\n          const file = e.target.files[0];\n          const reader = new FileReader();\n\n          reader.onload = e => {\n            setPreviewPic(e.target.result);\n          };\n\n          reader.readAsDataURL(file);\n          setPic({\n            selectedFile: e.target.files[0]\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-upload\",\n        onClick: () => ref.current.click(),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          style: imageUploadStyle,\n          icon: faCamera\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 79\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), previewPic && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewPic,\n          alt: \"loaded pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        isOpen: dropdownOpen,\n        toggle: toggle,\n        children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n          caret: true,\n          color: \"light\",\n          children: [categories.categories && categories.selected || 'Category', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n          children: categories.categories && categories.categories.map((category, index) => /*#__PURE__*/_jsxDEV(DropdownItem, {\n            onClick: handleSelect,\n            value: category.name,\n            children: [\" \", category.name, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"add-item-input\",\n        name: \"name\",\n        placeholder: \"Name of product\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"add-item-input\",\n        name: \"condition\",\n        placeholder: \"Contition\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"add-item-input\",\n        type: \"number\",\n        name: \"price\",\n        placeholder: \"Price\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"add-item-input\",\n        name: \"description\",\n        placeholder: \"Description\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"light\",\n        type: \"submit\",\n        children: \" Add an item \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadForm, \"MChfuDvu8HyVdSnxs4JvcnYnlm4=\");\n\n_c = UploadForm;\nexport default UploadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"sources":["/home/burslf/ITC/SKIN/SkinAI/src/Components/UploadForm/UploadForm.jsx"],"names":["faCamera","FontAwesomeIcon","axios","useEffect","useRef","useState","Container","Form","Input","Button","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Redirect","BASE_URL","UploadForm","itemInfos","setItemInfos","dropdownOpen","setDropdownOpen","categories","setCategories","selected","pic","setPic","selectedFile","previewPic","setPreviewPic","redirect","setRedirect","toggle","prevState","ref","handleChange","e","target","name","value","imageUploadStyle","color","fontSize","handleSelect","category","postItem","preventDefault","data","FormData","key","append","Date","now","post","headers","localStorage","getItem","then","itemUploaded","catch","err","error","response","errorMessages","message","condition","description","price","invalidFields","get","res","console","file","files","reader","FileReader","onload","result","readAsDataURL","current","click","map","index"],"mappings":"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","sourcesContent":["import { faCamera} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react'\nimport {Container,Form, Input, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport './UploadForm.css'\n// import { invalidFields } from '../../Tools/WebsiteResponses';\n// import { itemUploaded } from '../../Tools/WebsiteResponses';\nimport {Redirect} from 'react-router'\nimport {BASE_URL} from '../../App'\n\nconst UploadForm = () => {\n    const [itemInfos, setItemInfos] = useState(null)\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [categories, setCategories] = useState({categories: null, selected: null})\n    const [pic, setPic] = useState({selectedFile: null})\n    const [previewPic, setPreviewPic] = useState(\"\")\n    const [redirect, setRedirect] = useState(false) // in case of success\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n  \n    const ref = useRef(null)\n\n    const handleChange = (e) => {\n        setItemInfos({\n            ...itemInfos,\n            [e.target.name] : e.target.value\n        })\n    }\n    const imageUploadStyle = {\n        color: \"#4a81ff\", \n        fontSize: \"35px\",\n    }\n\n    const handleSelect = (e) => {\n        setCategories({...categories, selected: e.target.value})\n        setItemInfos({...itemInfos, category: e.target.value})\n    }\n\n    const postItem = (e) => {\n        e.preventDefault()\n        const data = new FormData()\n        for(let key in itemInfos) {\n            data.append(key, itemInfos[key])\n        }\n        if(pic.selectedFile) {\n            data.append('image', pic.selectedFile, `${Date.now()}-${pic.selectedFile.name}`)\n        }\n        axios.post(`${BASE_URL}/item`, data, {headers: {'Authorization' : 'Bearer ' + localStorage.getItem('token')}})\n            .then(itemUploaded().then(setRedirect(true))) // if success so set success & redirect to homepage\n            .catch(err => {\n                // fetch error message from server\n                const error = err.response.data \n                const errorMessages = error.message || error.category || error.name || error.condition || error.description || error.price \n                invalidFields(errorMessages) // else show error message\n            })\n    }\n\n    useEffect(() => {\n        axios.get(`${BASE_URL}/category/all`)\n        .then(res => setCategories({...categories, categories: res.data}))\n        .catch(err => console.error(err))\n    }, [])\n\n    if(redirect) {\n        return (\n            <Redirect to={BASE_URL}/>\n        )\n    }\n    return (\n        <Container>\n        <Form action=\"\" className=\"add-item-form\" onSubmit={e=> postItem(e)} encType=\"multipart/form-data\">\n            <input type=\"file\" ref={ref} id=\"hidden\" onChange={(e) => {     \n                const file = e.target.files[0]\n                const reader = new FileReader()\n                reader.onload = (e) => {\n                    setPreviewPic(e.target.result)\n                }\n                reader.readAsDataURL(file)\n                setPic({selectedFile :e.target.files[0]})\n                } }/>\n            <div className=\"image-upload\" onClick={() => ref.current.click()}><FontAwesomeIcon style={imageUploadStyle} icon={faCamera}/></div>\n            {previewPic && <div className=\"image-preview\"><img src={previewPic} alt=\"loaded pic\" /></div>}\n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                <DropdownToggle caret color=\"light\">\n                    {categories.categories && categories.selected || 'Category'} {/* Setting the select name based on selected category  */}\n                </DropdownToggle>\n                <DropdownMenu >\n                    {categories.categories && categories.categories.map((category, index) => (\n                        <DropdownItem key={index} onClick={handleSelect} value={category.name}> {category.name} </DropdownItem>\n                    ))}\n                </DropdownMenu>\n        </Dropdown>\n            <Input className=\"add-item-input\" name=\"name\" placeholder=\"Name of product\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" name=\"condition\" placeholder=\"Contition\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" type=\"number\" name=\"price\" placeholder=\"Price\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" name=\"description\" placeholder=\"Description\" onChange={e => handleChange(e)}/>\n            <Button color=\"light\" type=\"submit\"> Add an item </Button>\n        </Form>\n    </Container>\n    )\n}\n\nexport default UploadForm"]},"metadata":{},"sourceType":"module"}