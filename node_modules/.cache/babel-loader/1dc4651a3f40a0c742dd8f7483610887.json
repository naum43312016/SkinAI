{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/burslf/ITC/SKIN/SkinAI/src/Components/UploadForm/UploadForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react';\nimport { Container, Form, Button, Dropdown, Row } from 'react-bootstrap';\nimport './UploadForm.css';\nimport { Redirect } from 'react-router';\nimport { itemUploaded, formImageIssue, displayFormDoctorImage } from '../../Tools/WebsiteResponses';\nimport ModalDoctorDisplay from './ModalDoctorDisplay.png';\n\nconst UploadForm = () => {\n  _s();\n\n  const [infos, setInfos] = useState(null);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [pic, setPic] = useState({\n    selectedFile: null\n  });\n  const [previewPic, setPreviewPic] = useState(\"\");\n  const [redirect, setRedirect] = useState(false); // in case of success\n\n  const BASE_URL = process.env.REACT_APP_BASE_URL;\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const ref = useRef(null);\n\n  const handleChange = e => {\n    setInfos({ ...infos,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const imageUploadStyle = {\n    color: \"#434343\",\n    fontSize: \"35px\"\n  };\n\n  const handleSelect = e => {\n    setInfos({ ...infos,\n      category: e.target.name\n    });\n  };\n\n  const uploadForm = e => {\n    e.preventDefault();\n    const data = new FormData();\n\n    for (let key in infos) {\n      data.append(key, infos[key]);\n    }\n\n    console.log(pic.selectedFile);\n\n    if (pic.selectedFile) {\n      data.append('user', localStorage.getItem('sessionID'));\n      data.append('image', pic.selectedFile);\n    }\n\n    axios.post(`${BASE_URL}/upload-image`, data).then(res => {\n      itemUploaded('Image Uploaded');\n      setTimeout(setRedirect(true), 2500);\n    }).catch(err => formImageIssue(\"There was an issue uploading your image\"));\n  };\n\n  useEffect(() => {\n    displayFormDoctorImage(ModalDoctorDisplay);\n  }, []);\n\n  const imageUploader = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      console.log(e.target.result);\n      setPreviewPic(e.target.result);\n    };\n\n    reader.readAsDataURL(file);\n    setPic({\n      selectedFile: e.target.files[0]\n    });\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      action: \"\",\n      name: \"image\",\n      className: \"upload-form\",\n      onSubmit: e => uploadForm(e),\n      method: \"post\",\n      enctype: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mt-5\",\n          children: \"1. Keep the spot in the absolute middle of the picture.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"2. Make sure the quality of the picture is good enough.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"3. Do not take a picture in a dark environment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        ref: ref,\n        id: \"hidden\",\n        onChange: e => imageUploader(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-upload\",\n        onClick: () => ref.current.click(),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          style: imageUploadStyle,\n          icon: faCamera\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), previewPic && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewPic,\n          alt: \"loaded pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"upload-input\",\n        name: \"name\",\n        placeholder: \"Name\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"upload-input\",\n        type: \"number\",\n        name: \"age\",\n        placeholder: \"Age\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        isOpen: dropdownOpen,\n        toggle: toggle,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          caret: true,\n          children: infos && infos.category || 'Gender'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          align: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: e => handleSelect(e),\n            name: \"Male\",\n            children: \" Male \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: e => handleSelect(e),\n            name: \"Female\",\n            children: \" Female \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \" Submit for results \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadForm, \"aIgYQdDQckexpJtUT04Omgs1dWE=\");\n\n_c = UploadForm;\nexport default UploadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"sources":["/home/burslf/ITC/SKIN/SkinAI/src/Components/UploadForm/UploadForm.jsx"],"names":["faCamera","FontAwesomeIcon","axios","useEffect","useRef","useState","Container","Form","Button","Dropdown","Row","Redirect","itemUploaded","formImageIssue","displayFormDoctorImage","ModalDoctorDisplay","UploadForm","infos","setInfos","dropdownOpen","setDropdownOpen","pic","setPic","selectedFile","previewPic","setPreviewPic","redirect","setRedirect","BASE_URL","process","env","REACT_APP_BASE_URL","toggle","prevState","ref","handleChange","e","target","name","value","imageUploadStyle","color","fontSize","handleSelect","category","uploadForm","preventDefault","data","FormData","key","append","console","log","localStorage","getItem","post","then","res","setTimeout","catch","err","imageUploader","file","files","reader","FileReader","onload","result","readAsDataURL","current","click"],"mappings":"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","sourcesContent":["import { faCamera } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react'\nimport { Container, Form, Button, Dropdown, Row } from 'react-bootstrap'\nimport './UploadForm.css'\nimport { Redirect } from 'react-router'\nimport { itemUploaded, formImageIssue, displayFormDoctorImage } from '../../Tools/WebsiteResponses';\nimport ModalDoctorDisplay from './ModalDoctorDisplay.png';\n\nconst UploadForm = () => {\n    const [infos, setInfos] = useState(null)\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [pic, setPic] = useState({ selectedFile: null })\n    const [previewPic, setPreviewPic] = useState(\"\")\n    const [redirect, setRedirect] = useState(false) // in case of success\n    const BASE_URL = process.env.REACT_APP_BASE_URL;\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    const ref = useRef(null)\n\n    const handleChange = (e) => {\n        setInfos({\n            ...infos,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const imageUploadStyle = {\n        color: \"#434343\",\n        fontSize: \"35px\",\n    }\n\n    const handleSelect = (e) => {\n        setInfos({ ...infos, category: e.target.name })\n    }\n\n    const uploadForm = (e) => {\n        e.preventDefault()\n        const data = new FormData()\n        for (let key in infos) {\n            data.append(key, infos[key])\n        }\n        console.log(pic.selectedFile)\n        if (pic.selectedFile) {\n            data.append('user', localStorage.getItem('sessionID'));\n            data.append('image', pic.selectedFile);\n        }\n        axios.post(`${BASE_URL}/upload-image`, data)\n            .then(res => {\n                itemUploaded('Image Uploaded')\n                setTimeout(setRedirect(true), 2500)\n            })\n            .catch(err => formImageIssue(\"There was an issue uploading your image\"));\n    }\n\n    useEffect(() => {\n        displayFormDoctorImage(ModalDoctorDisplay);\n    }, [])\n\n    const imageUploader = (e) => {\n        const file = e.target.files[0]\n        const reader = new FileReader()\n        reader.onload = (e) => {\n            console.log(e.target.result)\n            setPreviewPic(e.target.result)\n        }\n        reader.readAsDataURL(file)\n        setPic({selectedFile :e.target.files[0]})\n    }\n\n    if (redirect) {\n        return (\n            <Redirect to='/prediction' />\n        )\n    }\n    return (\n        <Container>\n            <Form action=\"\" name=\"image\" className=\"upload-form\" onSubmit={e => uploadForm(e)} method=\"post\" enctype=\"multipart/form-data\">\n                <div>\n                    <h5 className=\"mt-5\">1. Keep the spot in the absolute middle of the picture.</h5>\n                    <br />\n                    <h5>2. Make sure the quality of the picture is good enough.</h5>\n                    <br />\n                    <h5>3. Do not take a picture in a dark environment.</h5>\n                </div>\n                <input type=\"file\" name=\"image\" ref={ref} id=\"hidden\" onChange={(e) => imageUploader(e)} />\n                <div className=\"image-upload\" onClick={() => ref.current.click()}><FontAwesomeIcon style={imageUploadStyle} icon={faCamera} /></div>\n                {previewPic && <div className=\"image-preview\"><img src={previewPic} alt=\"loaded pic\" /></div>}\n                <Form.Control className=\"upload-input\" name=\"name\" placeholder=\"Name\" onChange={e => handleChange(e)} />\n                <Form.Control className=\"upload-input\" type=\"number\" name=\"age\" placeholder=\"Age\" onChange={e => handleChange(e)} />\n                <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                    <Dropdown.Toggle caret>{(infos && infos.category) || 'Gender'}</Dropdown.Toggle>\n                    <Dropdown.Menu align='right'>\n                        <Dropdown.Item onClick={(e) => handleSelect(e)} name='Male'> Male </Dropdown.Item>\n                        <Dropdown.Item onClick={(e) => handleSelect(e)} name='Female'> Female </Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <Button type=\"submit\"> Submit for results </Button>\n            </Form>\n        </Container>\n    )\n}\n\nexport default UploadForm"]},"metadata":{},"sourceType":"module"}