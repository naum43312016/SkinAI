{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/burslf/ITC/SKIN/SkinAI/src/Components/UploadForm/UploadForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { faArrowLeft, faCamera, faToggleOn, faToggleOff } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useRef, useState, useContext } from 'react';\nimport { Form, Button, Dropdown, Row } from 'react-bootstrap';\nimport { Spinner } from 'reactstrap';\nimport { useHistory } from \"react-router-dom\";\nimport './UploadForm.css';\nimport { Redirect } from 'react-router';\nimport { itemUploaded, formImageIssue, displayFormDoctorImage, redirecting } from '../../Tools/WebsiteResponses';\nimport ModalDoctorDisplay from './ModalDoctorDisplay.png';\nimport ImageCrop from '../ImageCrop/ImageCrop';\nimport { Authentication } from \"../../Contexts/Authentication\";\nimport url from '../../Tools/URLs';\n\nconst UploadForm = () => {\n  _s();\n\n  const [infos, setInfos] = useState({\n    sendemail: false\n  });\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [pic, setPic] = useState({\n    selectedFile: null\n  });\n  const [previewPic, setPreviewPic] = useState(\"\");\n  const [redirect, setRedirect] = useState(false); // in case of success\n\n  const [loading, setLoading] = useState(false);\n  const [croppedImage, setCroppedImage] = useState('bold');\n  const [sendEmail, setSendEmail] = useState(false);\n  const [nextForm, goToNextForm] = useState(false);\n  const {\n    isLogged,\n    setIsLogged\n  } = useContext(Authentication);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const ref = useRef(null);\n  const history = useHistory();\n\n  const handleChange = e => {\n    setInfos({ ...infos,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const imageUploadStyle = {\n    color: \"#434343\",\n    fontSize: `${previewPic ? `15px` : `35px`}`\n  };\n\n  const handleSelect = e => {\n    setInfos({ ...infos,\n      gender: e.target.name\n    });\n  };\n\n  const uploadForm = e => {\n    setLoading(true);\n    e.preventDefault();\n    const data = new FormData();\n\n    for (let key in infos) {\n      data.append(key, infos[key]);\n    }\n\n    if (pic.selectedFile) {\n      data.append('user', localStorage.getItem('sessionID'));\n      let img = pic.selectedFile;\n\n      if (croppedImage) {\n        img = croppedImage;\n      }\n\n      data.append('image', img);\n    }\n\n    if (!infos.age || !infos.gender) {\n      formImageIssue(\"There was an issue uploading your image\");\n      setLoading(false);\n      return;\n    }\n\n    redirecting();\n    axios.post(`${url}/upload-image`, data).then(res => {\n      itemUploaded('Image Uploaded');\n      setLoading(false);\n      history.push({\n        pathname: '/Prediction',\n        state: {\n          data: res.data\n        }\n      });\n    }).catch(err => {\n      formImageIssue(\"There was an issue uploading your image\");\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    displayFormDoctorImage(ModalDoctorDisplay);\n  }, []);\n\n  const imageUploader = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      setPreviewPic(e.target.result);\n    };\n\n    reader.readAsDataURL(file);\n    setPic({\n      selectedFile: e.target.files[0]\n    }); // setInfos({sendemail: false})\n  };\n\n  const goToPreviousForm = image => {\n    setCroppedImage(image);\n    goToNextForm(false);\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"1. Keep the spot in the absolute middle of the picture.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"2. Make sure the quality of the picture is good enough.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"3. Do not take a picture in a dark environment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        action: \"\",\n        name: \"image\",\n        className: \"upload-form\",\n        onSubmit: e => uploadForm(e),\n        method: \"post\",\n        enctype: \"multipart/form-data\",\n        children: [!nextForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"image\",\n            ref: ref,\n            id: \"hidden\",\n            onChange: e => imageUploader(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-upload\",\n            style: {\n              width: `${previewPic ? `45px` : `90px`}`,\n              height: `${previewPic ? `45px` : `90px`}`\n            },\n            onClick: () => ref.current.click(),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              style: imageUploadStyle,\n              icon: faCamera\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 179\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), previewPic && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-preview\",\n            children: /*#__PURE__*/_jsxDEV(ImageCrop, {\n              haveCropped: croppedImage && croppedImage,\n              src: previewPic,\n              setImage: setCroppedImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 39\n          }, this), pic.selectedFile && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => goToNextForm(true),\n            children: \" Next \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true), nextForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              alignSelf: 'flex-start',\n              marginLeft: '20px',\n              cursor: 'pointer'\n            },\n            onClick: () => goToPreviousForm(),\n            children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faArrowLeft,\n              size: \"2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 161\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"upload-input\",\n            type: \"number\",\n            name: \"age\",\n            min: \"0\",\n            max: \"120\",\n            placeholder: \"Age\",\n            onChange: e => handleChange(e),\n            value: infos && infos.age && infos.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            isOpen: dropdownOpen,\n            toggle: toggle,\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              caret: true,\n              children: infos && infos.category || 'Gender'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              align: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => handleSelect(e),\n                name: \"Male\",\n                children: \" Male \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => handleSelect(e),\n                name: \"Female\",\n                children: \" Female \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"send-email\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \" Recieve the result by e-mail ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cstm-checkbox\",\n              children: [!sendEmail && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faToggleOff,\n                size: \"2x\",\n                onClick: () => {\n                  setInfos({ ...infos,\n                    sendemail: true\n                  });\n                  setSendEmail(true);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 44\n              }, this), sendEmail && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faToggleOn,\n                size: \"2x\",\n                onClick: () => {\n                  setInfos({ ...infos,\n                    sendemail: false\n                  });\n                  setSendEmail(false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }, this), sendEmail && !isLogged && /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"email-input\",\n              required: sendEmail,\n              type: \"e mail\",\n              name: \"email\",\n              placeholder: \"Enter your e-mail\",\n              onChange: e => handleChange(e),\n              value: infos && infos.email && infos.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), !loading ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \" Submit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1\",\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              className: \"mt-4 mb-3\",\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 101\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadForm, \"47c9dpQ4zsz0ME4nrEJQBzXJehw=\", false, function () {\n  return [useHistory];\n});\n\n_c = UploadForm;\nexport default UploadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"sources":["/home/burslf/ITC/SKIN/SkinAI/src/Components/UploadForm/UploadForm.jsx"],"names":["faArrowLeft","faCamera","faToggleOn","faToggleOff","FontAwesomeIcon","axios","useEffect","useRef","useState","useContext","Form","Button","Dropdown","Row","Spinner","useHistory","Redirect","itemUploaded","formImageIssue","displayFormDoctorImage","redirecting","ModalDoctorDisplay","ImageCrop","Authentication","url","UploadForm","infos","setInfos","sendemail","dropdownOpen","setDropdownOpen","pic","setPic","selectedFile","previewPic","setPreviewPic","redirect","setRedirect","loading","setLoading","croppedImage","setCroppedImage","sendEmail","setSendEmail","nextForm","goToNextForm","isLogged","setIsLogged","toggle","prevState","ref","history","handleChange","e","target","name","value","imageUploadStyle","color","fontSize","handleSelect","gender","uploadForm","preventDefault","data","FormData","key","append","localStorage","getItem","img","age","post","then","res","push","pathname","state","catch","err","imageUploader","file","files","reader","FileReader","onload","result","readAsDataURL","goToPreviousForm","image","width","height","current","click","position","alignSelf","marginLeft","cursor","category","email"],"mappings":"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","sourcesContent":["import { faArrowLeft, faCamera,faToggleOn, faToggleOff } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useRef, useState, useContext } from 'react'\nimport { Form, Button, Dropdown, Row } from 'react-bootstrap'\nimport { Spinner } from 'reactstrap';\nimport { useHistory } from \"react-router-dom\";\nimport './UploadForm.css'\nimport { Redirect } from 'react-router'\nimport { itemUploaded, formImageIssue, displayFormDoctorImage,redirecting } from '../../Tools/WebsiteResponses';\nimport ModalDoctorDisplay from './ModalDoctorDisplay.png';\nimport ImageCrop from '../ImageCrop/ImageCrop';\nimport { Authentication } from \"../../Contexts/Authentication\";\nimport url from '../../Tools/URLs';\n\n\nconst UploadForm = () => {\n    const [infos, setInfos] = useState({sendemail: false})\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [pic, setPic] = useState({ selectedFile: null })\n    const [previewPic, setPreviewPic] = useState(\"\")\n    const [redirect, setRedirect] = useState(false) // in case of success\n    const [loading, setLoading] = useState(false);\n    const [croppedImage, setCroppedImage] = useState('bold');\n    const [sendEmail, setSendEmail] = useState(false)\n    const [nextForm, goToNextForm] = useState(false)\n    const {isLogged, setIsLogged} = useContext(Authentication) \n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    const ref = useRef(null)\n    const history = useHistory();\n    const handleChange = (e) => {\n        setInfos({\n            ...infos,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const imageUploadStyle = {\n        color: \"#434343\",\n        fontSize: `${previewPic ? `15px` : `35px`}`,\n    }\n\n    const handleSelect = (e) => {\n        setInfos({ ...infos, gender: e.target.name })\n    }\n\n    const uploadForm = (e) => {\n        setLoading(true);\n        e.preventDefault()\n        const data = new FormData()\n        for (let key in infos) {\n            data.append(key, infos[key])\n        }\n        if (pic.selectedFile) {\n            data.append('user', localStorage.getItem('sessionID'));\n            let img = pic.selectedFile;\n            if (croppedImage) {\n                img = croppedImage;\n            }\n            data.append('image', img);\n        }\n        if (!infos.age || !infos.gender) {\n            formImageIssue(\"There was an issue uploading your image\")\n            setLoading(false)\n            return \n        }\n        redirecting();\n        axios.post(`${url}/upload-image`, data)\n            .then((res) => {\n                itemUploaded('Image Uploaded'); \n                setLoading(false)\n                history.push({\n                    pathname: '/Prediction',\n                    state: {data: res.data}\n                })\n            })\n            .catch(err => { formImageIssue(\"There was an issue uploading your image\"); setLoading(false)});\n    }\n\n    useEffect(() => {\n        displayFormDoctorImage(ModalDoctorDisplay);\n    }, [])\n\n    const imageUploader = (e) => {\n        const file = e.target.files[0]\n        const reader = new FileReader()\n        reader.onload = (e) => {\n            setPreviewPic(e.target.result)\n        }\n        reader.readAsDataURL(file)\n        setPic({ selectedFile: e.target.files[0] })\n        // setInfos({sendemail: false})\n    }\n\n    const goToPreviousForm = (image) => {\n        setCroppedImage(image)\n        goToNextForm(false)\n    }\n\n    if (redirect) {\n        return (\n            <Redirect to={url} />\n        )\n    }\n\n    return (\n        <div className='my-container'>\n            <div className='upload-container'>\n            <div className='instructions'>\n                        <h5 >1. Keep the spot in the absolute middle of the picture.</h5>\n                        <br />\n                        <h5>2. Make sure the quality of the picture is good enough.</h5>\n                        <br />\n                        <h5>3. Do not take a picture in a dark environment.</h5>\n                    </div>\n               <Form action=\"\" name=\"image\" className=\"upload-form\" onSubmit={e => uploadForm(e)} method=\"post\" enctype=\"multipart/form-data\">\n                    {!nextForm && \n                    <>\n                    <input type=\"file\" name=\"image\" ref={ref} id=\"hidden\" onChange={(e) => imageUploader(e)} />\n                    <div className=\"image-upload\" style={{width: `${previewPic ? `45px` : `90px`}`,height: `${previewPic ? `45px` : `90px`}`}}onClick={() => ref.current.click()}><FontAwesomeIcon style={imageUploadStyle} icon={faCamera} /></div>\n                   \n                       {previewPic && <div className=\"image-preview\">\n                            <ImageCrop\n                                haveCropped={croppedImage && croppedImage}\n                                src={previewPic}\n                                setImage={setCroppedImage}\n                            />\n                        </div>}\n                        {pic.selectedFile && <Button onClick={() => goToNextForm(true)}> Next </Button>}                        \n                        </>}\n                        {nextForm && \n                        <>\n                        <div style={{position: 'relative', alignSelf: 'flex-start', marginLeft: '20px', cursor: 'pointer'}} onClick={() => goToPreviousForm()}> <FontAwesomeIcon icon={faArrowLeft} size=\"2x\"/> </div>\n                    <Form.Control className=\"upload-input\" type=\"number\" name=\"age\" min=\"0\" max=\"120\" placeholder=\"Age\" onChange={e => handleChange(e)} value={(infos && infos.age) && infos.age}/>\n                    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                        <Dropdown.Toggle caret>{(infos && infos.category) || 'Gender'}</Dropdown.Toggle>\n                        <Dropdown.Menu align='right'>\n                            <Dropdown.Item onClick={(e) => handleSelect(e)} name='Male'> Male </Dropdown.Item>\n                            <Dropdown.Item onClick={(e) => handleSelect(e)} name='Female'> Female </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <div className=\"send-email\">\n                        <h5> Recieve the result by e-mail ?</h5>\n                        <div className=\"cstm-checkbox\">\n                            {!sendEmail && <FontAwesomeIcon icon={faToggleOff} size='2x' onClick={() => {\n                                setInfos({...infos, sendemail : true})\n                                setSendEmail(true)\n                                }} />}\n                            {sendEmail && <FontAwesomeIcon icon={faToggleOn} size='2x' onClick={() => {\n                                setInfos({...infos, sendemail : false})\n                                setSendEmail(false)\n                                }} />}\n                        </div>\n                        {(sendEmail && !isLogged) && <Form.Control className=\"email-input\" required={sendEmail} type=\"e mail\" name=\"email\" placeholder=\"Enter your e-mail\" onChange={e => handleChange(e)} value={(infos && infos.email) && infos.email}/>}\n                    </div>\n                        {!loading ? <Button type=\"submit\"> Submit </Button> : <div className=\"mt-1\"><Spinner className=\"mt-4 mb-3\" color=\"secondary\" /></div>}\n                        </>}\n                        </Form>\n\n                   \n\n            </div>\n        </div>\n    )\n}\n\nexport default UploadForm"]},"metadata":{},"sourceType":"module"}