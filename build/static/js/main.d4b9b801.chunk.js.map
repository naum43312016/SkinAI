{"version":3,"sources":["Components/Slides/Slides.jsx","Contexts/Authentication.js","Tools/WebsiteResponses.js","Tools/URLs.js","Components/Modals/LoginModal.jsx","Components/Modals/SignupModal.jsx","Components/NavBar/Navbar.jsx","Components/UploadForm/ModalDoctorDisplay.png","Components/ImageCrop/ImageCrop.js","Components/UploadForm/UploadForm.jsx","Components/Prediction/Team 12 (1).png","Components/GoogleMap/GoogleMap.jsx","Components/GoogleMap/MapContainer.jsx","Components/GoogleMap/mapsModal.jsx","Components/Prediction/Prediction.jsx","Components/HomeImages/images/16613513_101.jpg","Components/HomeImages/images/GettyImages-515772901-1.jpg","Components/HomeImages/images/skin-cancer_G_1219130913-860x573.jpg","Components/HomeImages/HomeImages.jsx","App.js","reportWebVitals.js","index.js"],"names":["Slides","Carousel","style","backgroundColor","zIndex","Item","className","Authentication","React","createContext","Swal","require","confirmLogout","setAuthenticated","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","localStorage","clear","title","timer","showConfirmButton","url","LoginModal","props","useState","input","setInput","error","setError","useContext","setIsLogged","isLogged","handleChange","e","target","name","value","isOpen","isLoginOpen","onRequestClose","closeLogin","modalStyle","contentLabel","onClick","setIsLoginOpen","faTimes","textAlign","color","Form","onSubmit","preventDefault","axios","post","res","status","setItem","data","token","user","_id","catch","err","response","message","Control","type","placeholder","onChange","Button","fontSize","margin","padding","borderRadius","setIsSignupOpen","SignupModal","isSignupOpen","closeSignup","faArrowLeft","errorType","firstName","lastName","phone","marginTop","Navbar","overlay","content","border","top","left","right","bottom","marginRight","transform","display","flexDirection","justifyContent","to","faHome","size","faPlus","faSignInAlt","faUserMd","faSignOutAlt","ImageCrop","onSelectFile","files","length","reader","FileReader","addEventListener","setState","src","readAsDataURL","onImageLoaded","image","imageRef","onCropComplete","crop","makeClientCrop","onCropChange","percentCrop","state","unit","width","height","this","getCroppedImg","croppedImageUrl","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","jpegFile","File","setImage","window","URL","revokeObjectURL","fileUrl","createObjectURL","console","ruleOfThirds","onComplete","haveCropped","alt","maxWidth","PureComponent","UploadForm","infos","setInfos","dropdownOpen","setDropdownOpen","selectedFile","pic","setPic","previewPic","setPreviewPic","redirect","loading","setLoading","croppedImage","setCroppedImage","sendEmail","setSendEmail","nextForm","goToNextForm","ref","useRef","history","useHistory","imageUploadStyle","handleSelect","category","uploadForm","FormData","key","append","getItem","img","msg","push","pathname","useEffect","ModalDoctorDisplay","imageUrl","imageWidth","imageHeight","imageAlt","action","method","enctype","id","file","onload","imageUploader","current","click","faCamera","position","alignSelf","marginLeft","cursor","age","Dropdown","toggle","prevState","Toggle","caret","Menu","align","faToggleOff","sendemail","faToggleOn","required","email","Spinner","mapStyles","MapContainer","fetchDoctors","mapProps","map","google","service","maps","places","PlacesService","request","location","lat","lng","radius","types","nearbySearch","results","PlacesServiceStatus","OK","log","Object","entries","i","Marker","geometry","animation","Animation","DROP","showingInfoWindow","activeMarker","selectedPlace","onReady","zoom","initialCenter","Component","GoogleApiWrapper","apiKey","process","getPosition","navigator","geolocation","getCurrentPosition","showPosition","posError","alert","permissions","query","a","coords","latitude","long","longitude","doctors","MapsModal","show","setShow","handleClose","Modal","onHide","Header","closeButton","Title","Body","Footer","variant","Prediction","useLocation","Card","HomeImages","backgroundImage","image1","image2","image3","App","Provider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d4b9b801.chunk.js","sourcesContent":["import \"./Slides.css\";\nimport { Carousel } from \"react-bootstrap\";\n\nconst Slides = () => {\n  const carouselStyle = {\n    backgroundColor: \"whitesmoke\",\n    zIndex: 0,\n  };\n  return (\n    <div>\n      <Carousel style={carouselStyle}>\n        <Carousel.Item className=\"about\">\n          <h1>Skin AI</h1>\n          <div>\n            The most common early sign of skin cancer is a change in the skin or\n            a lesion such as a beauty spot, freckle or mole.\n            <br /> Most skin cancers can be cured if caught early. Get to know\n            the symptoms of skin cancer to look out for. Sign up to Skin AI and\n            get with a certain accuracy a result before even going to the doctor\n            !\n          </div>\n        </Carousel.Item>\n        <Carousel.Item className=\"about\">\n          <h1>About Us</h1>\n          <div>\n            We are a group formed through ITC Fullstack and Data Science and\n            decided to solve an issue where we can determine weather you have\n            cancer by uploading a photo of a skin spot.\n          </div>\n        </Carousel.Item>\n      </Carousel>\n    </div>\n  );\n};\n\nexport default Slides;\n","import React from 'react';\n\nexport const Authentication = React.createContext(false);\n","const Swal = require('sweetalert2');\n\nconst invalidFields = (message) => {\n  return Swal.fire({\n    title: 'Invalid fields',\n    icon: 'error',\n    confirmButtonText: message,\n  })\n}\n\nconst wrongCredentials = (message) => {\n  return Swal.fire({\n    title: 'Invalid fields',\n    icon: 'error',\n    confirmButtonText: message,\n  })\n}\n\nconst signUpSuccess = () => {\n  return Swal.fire({\n    title: 'Signed Up',\n    icon: 'success',\n    timer: 1000,\n    showConfirmButton: false,\n  })\n}\n\nconst signInSuccess = () => {\n  return Swal.fire({\n    title: 'Welcome back',\n    icon: 'success',\n    timer: 1000,\n    showConfirmButton: false,\n  })\n}\n\nconst formImageIssue = (msg) => {\n  return Swal.fire({\n    title: msg,\n    icon: 'error',\n    timer: 1500,\n    showConfirmButton: false,\n  })\n}\n\nconst itemUploaded = (msg) => {\n  return Swal.fire({\n    title: msg,\n    text: \"redirecting...\",\n    icon: 'success',\n    timer: 2500,\n    showConfirmButton: false,\n  })\n}\n\nconst loggedOut = () => {\n  return Swal.fire({\n    title: \"Logged out\",\n    icon: 'error',\n    timer: 1000,\n    showConfirmButton: false,\n  })\n}\n\nconst confirmLogout = (setAuthenticated) => {\n  return Swal.fire({\n    text: \"Logout?\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#3085d6',\n    cancelButtonColor: '#d33',\n    confirmButtonText: 'Yes'\n  }).then((result) => {\n    if (result.isConfirmed) {\n      setAuthenticated(false);\n      localStorage.clear();\n      loggedOut();\n    }\n  })\n}\n\nconst displayFormDoctorImage = (image) => {\n  Swal.fire({\n    title: 'Please make sure to follow our image instructions.',\n    text: \"This is to make sure we're able to help you the best we can.\",\n    imageUrl: image,\n    imageWidth: 300,\n    imageHeight: 240,\n    imageAlt: 'Instructions Alert',\n  })\n}\n\nconst redirecting = () => {\n  return Swal.fire({\n    title: 'Redirecting',\n    icon: 'success',\n    timer: 2000,\n    showConfirmButton: false,\n  })\n}\n\nexport { invalidFields, wrongCredentials, signUpSuccess, signInSuccess, itemUploaded, formImageIssue, confirmLogout, displayFormDoctorImage,redirecting };","let url = \"\";\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    // dev code\n    url = \"http://localhost:3001\"\n} else {\n    // production code\n    url=\"https://skin-ai-hackathon.herokuapp.com\";\n}\nexport default url;","import axios from 'axios'\nimport { useContext, useState } from 'react'\nimport {Form, Button} from 'react-bootstrap'\nimport {BASE_URL} from '../../App'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Authentication } from '../../Contexts/Authentication'\nimport Modal from 'react-modal';\nimport { signInSuccess } from '../../Tools/WebsiteResponses';\nimport url from '../../Tools/URLs';\n\nconst LoginModal = (props) => {\n    const [input, setInput] = useState(null) // Get input\n    const [error, setError] = useState(null) // Handle error from API\n\n    const {isLogged, setIsLogged} = useContext(Authentication) \n\n    const handleChange = (e) => {\n        setInput({...input, [e.target.name] : e.target.value})\n    }\n\n    const logIn = (e) => {\n        e.preventDefault()\n        axios.post(`${url}/login`, input)\n        .then(res => {\n            if (res.status === 200) {\n                signInSuccess()\n                setIsLogged(true);\n                localStorage.setItem('token', res.data.token)\n                localStorage.setItem('sessionID', res.data.user._id)\n            }\n            props.setIsLoginOpen(false)\n        })\n        .catch(err => {\n            if(err.response.status === 409) {\n                setError(err.response.data.message)\n            }\n        })\n    }\n\n    const errorStyle = {\n        color: '#d10000', \n        fontSize: '18px', \n        margin: '10px', \n        padding: '7px',\n        borderRadius: '9px',\n        backgroundColor: 'whitesmoke'\n    }\n\n    const goToSignup = () => {\n        props.setIsLoginOpen(false)\n        props.setIsSignupOpen(true)\n    }\n\n    return (\n        <Modal\n          isOpen={props.isLoginOpen}\n          onRequestClose={props.closeLogin}\n          style={props.modalStyle}\n          contentLabel=\"Example Modal\"\n          closeLogin={props.closeLogin}\n            >\n            <span onClick={() => props.setIsLoginOpen(false)} className='modal-close-btn'><FontAwesomeIcon icon={faTimes}/></span>\n            <h2 style={{textAlign: 'center', color: '#434343'}}>Login</h2>\n            <Form className ='login-form' onSubmit={logIn}>\n                <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\n                <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\n                <Button type='submit' className='login-btn'> Login </Button>\n                {error && <span style={errorStyle}> {error} </span>}\n            </Form>\n            <div className='go-to-signup' onClick={goToSignup}> New ? Sign Up ! </div>\n       </Modal>\n    )\n}\n\nexport default LoginModal","import Modal from 'react-modal';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport axios from 'axios'\nimport { useContext, useState } from 'react'\nimport {Form, Button} from 'react-bootstrap'\nimport { Authentication } from '../../Contexts/Authentication'\nimport { signUpSuccess } from '../../Tools/WebsiteResponses';\nimport url from '../../Tools/URLs';\n\nconst SignupModal = (props) => {\n    const [input, setInput] = useState(null)  // Get input\n    const [error, setError] = useState(null) // // Handle error from API\n\n    const {isLogged, setIsLogged} = useContext(Authentication)\n\n    const handleChange = (e) => {\n        setInput({...input, [e.target.name] : e.target.value})\n    }\n    const signUp = (e) => {\n        e.preventDefault()\n        axios.post(`${url}/signup`, input)\n        .then(res => {\n            if (res.status === 200) {\n                setIsLogged(true);\n                signUpSuccess();\n                localStorage.setItem('token', res.data.token)\n                localStorage.setItem('sessionID', res.data.user._id)\n            }\n        })\n        .catch(err => {\n            const error = err.response.data\n            // Define error message based on API\n            const errorType = error.message || error.firstName || error.lastName || error.phone \n            if(err.response.status === 409) {\n                setError(errorType)\n            }\n        })\n    }\n\n    const errorStyle = {\n        color: '#d10000', \n        fontSize: '18px', \n        marginTop: '10px', \n        padding: '7px',\n        borderRadius: '9px',\n        backgroundColor: 'whitesmoke'\n    }\n\n    const goToLogin = () => {\n        props.setIsSignupOpen(false)\n        props.setIsLoginOpen(true)\n    }\n\n    return (\n        <Modal\n        isOpen={props.isSignupOpen}\n        onRequestClose={props.closeSignup}\n        style={props.modalStyle}\n        contentLabel=\"Example Modal\"\n        closeLogin={props.closeSignup}\n          >\n        <span onClick={goToLogin} className='modal-close-btn'><FontAwesomeIcon icon={faArrowLeft}/></span>\n        <h2 style={{textAlign: 'center', color: '#434343'}}>Signup</h2>\n        <Form className ='login-form' onSubmit={signUp}>\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\n            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\n            <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm password\" onChange={e=>handleChange(e)}/>\n            <Form.Control name=\"firstName\" placeholder=\"First name\" onChange={e=>handleChange(e)}/>\n            <Form.Control name=\"lastName\" placeholder=\"Last name\" onChange={e=>handleChange(e)}/>\n            <Form.Control name=\"phone\" placeholder=\"Phone number\" onChange={e=>handleChange(e)}/>\n            <Button type='submit' className=\"login-btn\"> Signup </Button>\n            {error && <span style={errorStyle}> {error} </span>}\n        </Form>\n        </Modal>\n    )\n}\n\nexport default SignupModal","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faPlus, faSignInAlt, faSignOutAlt, faUserMd } from '@fortawesome/free-solid-svg-icons'\nimport './Navbar.css'\nimport { Link } from 'react-router-dom'\nimport { useState, useContext, useRef } from 'react'\nimport LoginModal from '../Modals/LoginModal'\nimport SignupModal from '../Modals/SignupModal'\nimport { Authentication } from '../../Contexts/Authentication';\nimport { confirmLogout } from '../../Tools/WebsiteResponses';\n\nconst Navbar = (props) => {\n    const [isLoginOpen, setIsLoginOpen] = useState(false);\n    const [isSignupOpen, setIsSignupOpen] = useState(false);\n    const { isLogged, setIsLogged } = useContext(Authentication)\n\n    const openLogin = () => {\n        setIsLoginOpen(true);\n    }\n    const closeLogin = () => {\n        setIsLoginOpen(false)\n    }\n    const closeSignup = () => {\n        setIsSignupOpen(false)\n    }\n    const handleLogout = () => {\n        confirmLogout(setIsLogged);\n    }\n\n    const modalStyle = {\n        overlay: {\n            backgroundColor: '#2b1d13a0'\n        },\n        content: {\n            borderRadius: '13px',\n            border: '1px solid black',\n            backgroundColor: 'whitesmoke',\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            zIndex: 3\n        }\n    };\n\n    return (\n        <div className=\"nav-container\">\n            <Link to=\"/\">\n                <button className=\"logo\"> SkinAI </button>\n            </Link>\n            <ul className=\"nav-links-container\">\n                <Link to=\"/\">\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faHome} size=\"2x\" /></li>\n                </Link>\n                <Link to=\"/upload\">\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faPlus} size=\"2x\" /></li>\n                </Link>\n                {!isLogged && <li className=\"nav-links\" onClick={openLogin}><FontAwesomeIcon color='#36d68b' icon={faSignInAlt} size=\"2x\" /></li>}\n                {isLogged && <Link to='/'>\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faUserMd} size=\"2x\" /></li>\n                </Link>}\n                {isLogged &&\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' onClick={handleLogout} icon={faSignOutAlt} size=\"2x\" /></li>\n                }\n            </ul>\n            <LoginModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isLoginOpen={isLoginOpen} closeLogin={closeLogin} modalStyle={modalStyle} />\n            <SignupModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isSignupOpen={isSignupOpen} closeLogin={closeSignup} modalStyle={modalStyle} />\n        </div>\n    )\n}\n\nexport default Navbar ","export default __webpack_public_path__ + \"static/media/ModalDoctorDisplay.1f78b1ae.png\";","import React, { PureComponent } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\n\nclass ImageCrop extends PureComponent {\n\n  constructor(props){\n    super(props);\n    this.state = {\n        src: null,\n        crop: {\n          unit: 'px',\n          width: 224,\n          height: 224,\n        },\n    };\n  }\n  \n\n  onSelectFile = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () =>\n        this.setState({ src: reader.result })\n      );\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  // If you setState the crop in here you should return false.\n  onImageLoaded = image => {\n    this.imageRef = image;\n  };\n\n  onCropComplete = crop => {\n    this.makeClientCrop(crop);\n  };\n\n  onCropChange = (crop, percentCrop) => {\n    // You could also use percentCrop:\n    // this.setState({ crop: percentCrop });\n    this.setState({ crop });\n  };\n\n  async makeClientCrop(crop) {\n    if (this.imageRef && crop.width && crop.height) {\n      const croppedImageUrl = await this.getCroppedImg(\n        this.imageRef,\n        crop,\n        'newFile.jpeg'\n      );\n      this.setState({ croppedImageUrl });\n    }\n  }\n\n  getCroppedImg(image, crop, fileName) {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          //reject(new Error('Canvas is empty'));\n          console.error('Canvas is empty');\n          return;\n        }\n        blob.name = fileName;\n        const jpegFile = new File([blob], fileName, { type: blob.type })\n        this.props.setImage(jpegFile);\n        window.URL.revokeObjectURL(this.fileUrl);\n        this.fileUrl = window.URL.createObjectURL(blob);\n        resolve(this.fileUrl);\n      }, 'image/jpeg');\n    });\n  }\n\n  render() {\n    const { crop, croppedImageUrl, src } = this.state;\n\n    return (\n      <div>\n        {this.props.src && (\n          <ReactCrop\n            src={this.props.src}\n            crop={crop}\n            ruleOfThirds\n            onImageLoaded={this.onImageLoaded}\n            onComplete={this.onCropComplete}\n            onChange={this.onCropChange}\n          />\n        )}\n        {this.props.haveCropped ? <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedImageUrl} /> : croppedImageUrl && (\n          <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedImageUrl} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ImageCrop;","import { faArrowLeft, faCamera,faToggleOn, faToggleOff } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useRef, useState, useContext } from 'react'\nimport { Form, Button, Dropdown, Row } from 'react-bootstrap'\nimport { Spinner } from 'reactstrap';\nimport { useHistory } from \"react-router-dom\";\nimport './UploadForm.css'\nimport { Redirect } from 'react-router'\nimport { itemUploaded, formImageIssue, displayFormDoctorImage,redirecting } from '../../Tools/WebsiteResponses';\nimport ModalDoctorDisplay from './ModalDoctorDisplay.png';\nimport ImageCrop from '../ImageCrop/ImageCrop';\nimport { Authentication } from \"../../Contexts/Authentication\";\nimport url from '../../Tools/URLs';\n\n\nconst UploadForm = () => {\n    const [infos, setInfos] = useState(null)\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [pic, setPic] = useState({ selectedFile: null })\n    const [previewPic, setPreviewPic] = useState(\"\")\n    const [redirect, setRedirect] = useState(false) // in case of success\n    const [loading, setLoading] = useState(false);\n    const [croppedImage, setCroppedImage] = useState('bold');\n    const [sendEmail, setSendEmail] = useState(false)\n    const [nextForm, goToNextForm] = useState(false)\n    const {isLogged, setIsLogged} = useContext(Authentication) \n \n    const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    const ref = useRef(null)\n    const history = useHistory();\n    const handleChange = (e) => {\n        setInfos({\n            ...infos,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const imageUploadStyle = {\n        color: \"#434343\",\n        fontSize: `${previewPic ? `15px` : `35px`}`,\n    }\n\n    const handleSelect = (e) => {\n        setInfos({ ...infos, category: e.target.name })\n    }\n\n    const uploadForm = (e) => {\n        setLoading(true);\n        e.preventDefault()\n        const data = new FormData()\n        for (let key in infos) {\n            data.append(key, infos[key])\n        }\n        if (pic.selectedFile) {\n            data.append('user', localStorage.getItem('sessionID'));\n            let img = pic.selectedFile;\n            if (croppedImage) {\n                img = croppedImage;\n            }\n            data.append('image', img);\n        }\n        redirecting();\n        axios.post(`${url}/upload-image`, data)\n            .then((res) => {\n                itemUploaded('Image Uploaded'); \n                setLoading(false)\n                history.push({\n                    pathname: '/Prediction',\n                    state: {data: res.data}\n                })\n            })\n            .catch(err => { formImageIssue(\"There was an issue uploading your image\"); setLoading(false)});\n    }\n\n    useEffect(() => {\n        displayFormDoctorImage(ModalDoctorDisplay);\n    }, [])\n\n    const imageUploader = (e) => {\n        const file = e.target.files[0]\n        const reader = new FileReader()\n        reader.onload = (e) => {\n            //console.log(e.target.result)\n            setPreviewPic(e.target.result)\n        }\n        reader.readAsDataURL(file)\n        setPic({ selectedFile: e.target.files[0] })\n    }\n\n    const goToPreviousForm = (image) => {\n        setCroppedImage(image)\n        goToNextForm(false)\n    }\n\n    if (redirect) {\n        return (\n            <Redirect to={url} />\n        )\n    }\n\n    return (\n        <div className='my-container'>\n            <div className='upload-container'>\n            <div className='instructions'>\n                        <h5 >1. Keep the spot in the absolute middle of the picture.</h5>\n                        <br />\n                        <h5>2. Make sure the quality of the picture is good enough.</h5>\n                        <br />\n                        <h5>3. Do not take a picture in a dark environment.</h5>\n                    </div>\n               <Form action=\"\" name=\"image\" className=\"upload-form\" onSubmit={e => uploadForm(e)} method=\"post\" enctype=\"multipart/form-data\">\n                    {!nextForm && \n                    <>\n                    <input type=\"file\" name=\"image\" ref={ref} id=\"hidden\" onChange={(e) => imageUploader(e)} />\n                    <div className=\"image-upload\" style={{width: `${previewPic ? `45px` : `90px`}`,height: `${previewPic ? `45px` : `90px`}`}}onClick={() => ref.current.click()}><FontAwesomeIcon style={imageUploadStyle} icon={faCamera} /></div>\n                   \n                       {previewPic && <div className=\"image-preview\">\n                            <ImageCrop\n                                haveCropped={croppedImage && croppedImage}\n                                src={previewPic}\n                                setImage={setCroppedImage}\n                            />\n                        </div>}\n\n                        <Button onClick={() => goToNextForm(true)}> Next </Button>\n                        \n                        </>}\n\n                        {nextForm && \n                        <>\n                        <div style={{position: 'relative', alignSelf: 'flex-start', marginLeft: '20px', cursor: 'pointer'}} onClick={() => goToPreviousForm()}> <FontAwesomeIcon icon={faArrowLeft} size=\"2x\"/> </div>\n                         <Form.Control className=\"upload-input\" name=\"name\" placeholder=\"Name\" onChange={e => handleChange(e)} value={(infos && infos.name) && infos.name}/>\n                    <Form.Control className=\"upload-input\" type=\"number\" name=\"age\" placeholder=\"Age\" onChange={e => handleChange(e)} value={(infos && infos.age) && infos.age}/>\n                    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                        <Dropdown.Toggle caret>{(infos && infos.category) || 'Gender'}</Dropdown.Toggle>\n                        <Dropdown.Menu align='right'>\n                            <Dropdown.Item onClick={(e) => handleSelect(e)} name='Male'> Male </Dropdown.Item>\n                            <Dropdown.Item onClick={(e) => handleSelect(e)} name='Female'> Female </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <div className=\"send-email\">\n                        <h5> Recieve the result by e-mail ?</h5>\n                        <div className=\"cstm-checkbox\">\n                            {!sendEmail && <FontAwesomeIcon icon={faToggleOff} size='2x' onClick={() => {\n                                setInfos({...infos, sendemail : true})\n                                setSendEmail(true)\n                                }} />}\n                            {sendEmail && <FontAwesomeIcon icon={faToggleOn} size='2x' onClick={() => {\n                                setInfos({...infos, sendemail : false})\n                                setSendEmail(false)\n                                }} />}\n                        </div>\n                        {(sendEmail && !isLogged) && <Form.Control className=\"email-input\" required={sendEmail} type=\"e mail\" name=\"email\" placeholder=\"Enter your e-mail\" onChange={e => handleChange(e)} value={(infos && infos.email) && infos.email}/>}\n                    </div>\n      \n                        {!loading ? <Button type=\"submit\"> Submit </Button> : <div className=\"mt-1\"><Spinner className=\"mt-4 mb-3\" color=\"secondary\" /></div>}\n                        </>}\n\n                        </Form>\n\n                   \n\n            </div>\n        </div>\n    )\n}\n\nexport default UploadForm","export default __webpack_public_path__ + \"static/media/Team 12 (1).db5ce199.png\";","import React from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nconst GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_KEY;\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n    };\n  }\n\n  fetchDoctors = (mapProps, map) => {\n    const { google } = mapProps;\n    const service = new google.maps.places.PlacesService(map);\n    const position = { lat: this.props.lat, lng: this.props.lng };\n    const request = {\n      location: position,\n      radius: 10000,\n      types: [\"hospital\", \"health\", \"doctor\", \"medical\", \"clinic\"],\n    };\n    service.nearbySearch(request, (results, status) => {\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\n        console.log(\"results= \" + results);\n        for (const [key, value] of Object.entries(results)) {\n          console.log(`${key}: ${value}`);\n        }\n        //name\n        const image =\n          \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\";\n        for (let i = 0; i < results.length; i++) {\n          //this.addMarker(map,results[i].geometry.location,results[i].name)\n          new google.maps.Marker({\n            position: results[i].geometry.location,\n            map: map,\n            title: results[i].name,\n            animation: google.maps.Animation.DROP,\n          });\n        }\n        /*console.log(\"results= \"+ results[0].geometry.location);\n                for (const [key, value] of Object.entries(results[0].geometry)) {\n                    console.log(`${key}: ${value}`);\n                }*/\n      }\n    });\n  };\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        onReady={this.fetchDoctors}\n        zoom={14}\n        style={mapStyles}\n        initialCenter={{\n          lat: this.props.lat,\n          lng: this.props.lng,\n        }}\n      />\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: GOOGLE_MAP_API_KEY,\n})(MapContainer);\n","import React from \"react\";\nimport Map from \"../GoogleMap/GoogleMap\";\nimport \"./Map.css\";\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: false,\n      lat: \"\",\n      lng: \"\",\n      doctors: \"\",\n    };\n  }\n  componentDidMount() {\n    this.getPosition();\n    console.log(\"hello\");\n  }\n  getPosition = () => {\n    console.log(\"get position\");\n    if (navigator.geolocation) {\n      console.log(\"get position If\");\n      navigator.geolocation.getCurrentPosition(\n        this.showPosition,\n        this.posError\n      ); // Passing in a success callback and an error callback fn\n    } else {\n      console.log(\"get position else\");\n      alert(\"Sorry, Geolocation is not supported by this browser.\"); // Alert is browser does not support geolocation\n    }\n  };\n  // Geolocation error callback fn. Query permissions to check if the error occured due to user not allowing location to be shared\n  posError = () => {\n    console.log(\"posError\");\n    if (navigator.permissions) {\n      navigator.permissions.query({ name: \"geolocation\" }).then((res) => {\n        if (res.state === \"denied\") {\n          alert(\n            \"Enable location permissions for this website in your browser settings.\"\n          );\n        }\n      });\n    } else {\n      alert(\n        \"Unable to access your location. You can continue by submitting location manually.\"\n      ); // Obtaining Lat/long from address necessary\n    }\n  };\n  // Geolocation success callback fn\n  showPosition = async (position) => {\n    console.log(\"showposition\");\n    let lat = position.coords.latitude; // You have obtained latitude coordinate!\n    let long = position.coords.longitude; // You have obtained longitude coordinate!\n    console.log(\"Lat= \" + lat);\n    console.log(\"long= \" + long);\n    //getmarkers\n    //const doctors =\n    this.setState({ lat: lat, lng: long, position: true });\n    //props.set_lat(lat) // Using dispatch to modify lat store state\n    //props.set_long(long) // Using dispatch to modify long store state\n    //convertToAddress(lat, long) // Will convert lat/long to City, State, & Zip code\n  };\n  render() {\n    return (\n      <div className=\"mapContainer\">\n        {this.state.position && (\n          <Map lat={this.state.lat} lng={this.state.lng} />\n        )}\n      </div>\n    );\n  }\n}\nexport default MapContainer;\n","import { Button, Modal } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport MapContainer from \"./MapContainer\";\nimport \"./Map.css\";\nconst MapsModal = () => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <div className=\"maps-result\">\n      <Button className=\"login-btn\" onClick={handleShow}>\n        Find your closest Doctor\n      </Button>\n      {show && (\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Find your closest Doctor</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"map-wrapper\">\n              <MapContainer />\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              className=\"login-btn\"\n              variant=\"secondary\"\n              onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n    </div>\n  );\n};\nexport default MapsModal;\n","import {\n  Container,\n  Card,\n  Form,\n  Button,\n  Dropdown,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport pic from \"./Team 12 (1).png\";\nimport './Prediction.css';\nimport { useLocation } from \"react-router-dom\";\nimport MapsModal from \"../GoogleMap/mapsModal\";\n\nconst Prediction = (props) => {\n  const location = useLocation();\n  // console.log(\"test=\" + location.state.data);\n\n  return (\n    <div className='my-container'>\n      <div className='prediction-container'>\n        <Card className ='image-result'>\n          <img src=\"https://source.unsplash.com/random/300x300\" alt=\"\"/>\n        </Card>\n        <Card className='text-result'>\n          <h1>Result:</h1>\n          <div>Lorem ipsum dolor sit amet consectetur adipisicing elit. Veritatis itaque, modi inventore quas facere sint veniam vero pariatur soluta eum reiciendis saepe vitae doloribus omnis dolores id error quasi earum.</div>\n        </Card>\n      </div>\n      <MapsModal />\n\n    </div>\n    // <Container>\n    //   <Row>\n    //     <Col>\n    //       <Card>\n    //         <Card.Img variant=\"top\" src={pic} className=\"mt-5\"></Card.Img>\n    //       </Card>\n    //     </Col>\n    //     <Col>\n    //       <Card className=\"mt-5\">\n    //         <h1>test</h1>\n    //       </Card>\n    //     </Col>\n    //   </Row>\n    //   <Row>\n    //     <Col md=\"auto\">\n          // <MapsModal />\n    //     </Col>\n    //   </Row>\n    // </Container>\n  );\n};\n\nexport default Prediction;\n","export default __webpack_public_path__ + \"static/media/16613513_101.24d8e9e1.jpg\";","export default __webpack_public_path__ + \"static/media/GettyImages-515772901-1.eec46856.jpg\";","export default __webpack_public_path__ + \"static/media/skin-cancer_G_1219130913-860x573.0023fa41.jpg\";","import React from 'react';\nimport { Row, Container } from 'reactstrap';\nimport './HomeImages.css';\nimport image1 from './images/16613513_101.jpg';\nimport image2 from './images/GettyImages-515772901-1.jpg';\nimport image3 from './images/skin-cancer_G_1219130913-860x573.jpg';\n\nconst HomeImages = () => {\n\n    return (\n        <div className=\"border images-grid mb-5\">\n            <div style={{backgroundImage:`url(${image1})`}} className=\"skin-image rounded\"></div>\n            <div style={{backgroundImage:`url(${image2})`}} className=\"skin-image rounded img-2\"></div>\n            <div style={{backgroundImage:`url(${image3})`}} className=\"skin-image rounded\"></div>\n        </div>\n    )\n}\n\nexport default HomeImages; ","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Slides from \"./Components/Slides/Slides\";\nimport Navbar from \"./Components/NavBar/Navbar\";\nimport { useEffect, useState } from \"react\";\nimport { Authentication } from \"./Contexts/Authentication\";\nimport UploadForm from \"./Components/UploadForm/UploadForm\";\nimport \"./App.css\";\nimport Prediction from \"./Components/Prediction/Prediction\";\nimport HomeImages from \"./Components/HomeImages/HomeImages\";\n\nexport const BASE_URL = process.env.REACT_APP_BASE_URL;\n\nfunction App() {\n  const [isLogged, setIsLogged] = useState(null);\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    if (token) {\n      setIsLogged(true);\n    } else {\n      setIsLogged(false);\n    }\n  });\n\n  return (\n    <Authentication.Provider value={{ isLogged, setIsLogged }}>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/upload\">\n            <UploadForm />\n          </Route>\n          <Route path=\"/Prediction\">\n            <Prediction />\n          </Route>\n          <Route path=\"/\">\n            <div className=\"my-container\">\n              <Slides />\n              {\n                <Link to=\"/upload\" className=\"open-upload-form\">\n                  <div>\n                    <div> Upload </div>\n                  </div>\n                </Link>\n              }\n              <HomeImages/>\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </Authentication.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}