{"version":3,"sources":["Components/Slides/Slides.jsx","Contexts/Authentication.js","Tools/WebsiteResponses.js","Components/Modals/LoginModal.jsx","Components/Modals/SignupModal.jsx","Components/NavBar/Navbar.jsx","Components/UploadForm/ModalDoctorDisplay.png","Components/UploadForm/UploadForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["Slides","Carousel","style","backgroundColor","zIndex","Item","className","Authentication","React","createContext","Swal","require","LoginModal","props","useState","input","setInput","error","setError","useContext","setIsLogged","isLogged","handleChange","e","target","name","value","isOpen","isLoginOpen","onRequestClose","closeLogin","modalStyle","contentLabel","onClick","setIsLoginOpen","icon","faTimes","textAlign","color","Form","onSubmit","preventDefault","axios","post","BASE_URL","then","res","status","fire","title","timer","showConfirmButton","localStorage","setItem","data","token","user","_id","catch","err","response","message","Control","type","placeholder","onChange","Button","fontSize","margin","padding","borderRadius","setIsSignupOpen","SignupModal","isSignupOpen","closeSignup","faArrowLeft","errorType","firstName","lastName","phone","marginTop","Navbar","overlay","content","border","top","left","right","bottom","marginRight","transform","display","flexDirection","justifyContent","to","faHome","size","faPlus","faSignInAlt","faUserMd","setAuthenticated","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","clear","faSignOutAlt","UploadForm","infos","setInfos","dropdownOpen","setDropdownOpen","selectedFile","pic","setPic","previewPic","setPreviewPic","redirect","loading","setLoading","process","ref","useRef","handleSelect","category","uploadForm","FormData","key","append","console","log","getItem","msg","useEffect","image","ModalDoctorDisplay","imageUrl","imageWidth","imageHeight","imageAlt","Container","action","method","enctype","id","file","files","reader","FileReader","onload","readAsDataURL","imageUploader","current","click","faCamera","src","alt","Dropdown","toggle","prevState","Toggle","caret","Menu","align","class","role","App","Provider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4719a40.chunk.js","sourcesContent":["import \"./Slides.css\";\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nconst Slides = () => {\r\n  const carouselStyle = {\r\n    backgroundColor: 'whitesmoke',\r\n    zIndex: 0\r\n  }\r\n  return (\r\n    <div>\r\n\r\n    <Carousel style={carouselStyle}>\r\n    <Carousel.Item className='about'>\r\n      <h1>Skin AI</h1>\r\n      <div>\r\n        The most common early sign of skin cancer is a change in the skin or a\r\n        lesion such as a beauty spot, freckle or mole.\r\n        <br /> Most skin cancers can be cured if caught early. Get to know the\r\n        symptoms of skin cancer to look out for. Sign up to Skin AI and get with\r\n        a certain accuracy a result before even going to the doctor !\r\n      </div>\r\n  </Carousel.Item>\r\n  <Carousel.Item className='about'>\r\n      <h1>About Us</h1>\r\n      <div>\r\n        The most common early sign of skin cancer is a change in the skin or a\r\n        lesion such as a beauty spot, freckle or mole.\r\n        <br /> Most skin cancers can be cured if caught early. Get to know the\r\n        symptoms of skin cancer to look out for. Sign up to Skin AI and get with\r\n        a certain accuracy a result before even going to the doctor !\r\n      </div>\r\n  </Carousel.Item>\r\n</Carousel>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Slides;\r\n","import React from 'react';\r\n\r\nexport const Authentication = React.createContext(false);\r\n","const Swal = require('sweetalert2');\r\n\r\nconst invalidFields = (message) => {\r\n  return Swal.fire({\r\n    title: 'Invalid fields',\r\n    icon: 'error',\r\n    confirmButtonText: message,\r\n  })\r\n}\r\n\r\nconst wrongCredentials = (message) => {\r\n  return Swal.fire({\r\n    title: 'Invalid fields',\r\n    icon: 'error',\r\n    confirmButtonText: message,\r\n  })\r\n}\r\n\r\nconst signUpSuccess = () => {\r\n  return Swal.fire({\r\n    title: 'Signed Up',\r\n    icon: 'success',\r\n    timer: 1000,\r\n    showConfirmButton: false,\r\n  })\r\n}\r\n\r\nconst signInSuccess = () => {\r\n  return Swal.fire({\r\n    title: 'Welcome back',\r\n    icon: 'success',\r\n    timer: 1000,\r\n    showConfirmButton: false,\r\n  })\r\n}\r\n\r\nconst formImageIssue = (msg) => {\r\n  return Swal.fire({\r\n    title: msg,\r\n    icon: 'error',\r\n    timer: 1500,\r\n    showConfirmButton: false,\r\n  })\r\n}\r\n\r\nconst itemUploaded = (msg) => {\r\n  return Swal.fire({\r\n    title: msg,\r\n    text: \"redirecting...\",\r\n    icon: 'success',\r\n    timer: 2500,\r\n    showConfirmButton: false,\r\n  })\r\n}\r\n\r\nconst confirmLogout = (setAuthenticated) => {\r\n  return Swal.fire({\r\n    text: \"Logout?\",\r\n    icon: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#3085d6',\r\n    cancelButtonColor: '#d33',\r\n    confirmButtonText: 'Yes'\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      setAuthenticated(false);\r\n      localStorage.clear();\r\n    }\r\n  })\r\n}\r\n\r\nconst displayFormDoctorImage = (image) => {\r\n  Swal.fire({\r\n    title: 'Please make sure to follow our image instructions.',\r\n    text: \"This is to make sure we're able to help you the best we can.\",\r\n    imageUrl: image,\r\n    imageWidth: 400,\r\n    imageHeight: 300,\r\n    imageAlt: 'Instructions Alert',\r\n  })\r\n}\r\n\r\nexport { invalidFields, wrongCredentials, signUpSuccess, signInSuccess, itemUploaded, formImageIssue, confirmLogout, displayFormDoctorImage };","import axios from 'axios'\r\nimport { useContext, useState } from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {BASE_URL} from '../../App'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Authentication } from '../../Contexts/Authentication'\r\nimport Modal from 'react-modal';\r\nimport { signInSuccess } from '../../Tools/WebsiteResponses';\r\n\r\nconst LoginModal = (props) => {\r\n    const [input, setInput] = useState(null) // Get input\r\n    const [error, setError] = useState(null) // Handle error from API\r\n\r\n    const {isLogged, setIsLogged} = useContext(Authentication) \r\n\r\n    const handleChange = (e) => {\r\n        setInput({...input, [e.target.name] : e.target.value})\r\n    }\r\n\r\n    const logIn = (e) => {\r\n        e.preventDefault()\r\n        axios.post(`${BASE_URL}/login`, input)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                signInSuccess()\r\n                setIsLogged(true);\r\n                localStorage.setItem('token', res.data.token)\r\n                localStorage.setItem('sessionID', res.data.user._id)\r\n            }\r\n            props.setIsLoginOpen(false)\r\n        })\r\n        .catch(err => {\r\n            if(err.response.status === 409) {\r\n                setError(err.response.data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const errorStyle = {\r\n        color: '#d10000', \r\n        fontSize: '18px', \r\n        margin: '10px', \r\n        padding: '7px',\r\n        borderRadius: '9px',\r\n        backgroundColor: 'whitesmoke'\r\n    }\r\n\r\n    const goToSignup = () => {\r\n        props.setIsLoginOpen(false)\r\n        props.setIsSignupOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={props.isLoginOpen}\r\n          onRequestClose={props.closeLogin}\r\n          style={props.modalStyle}\r\n          contentLabel=\"Example Modal\"\r\n          closeLogin={props.closeLogin}\r\n            >\r\n            <span onClick={() => props.setIsLoginOpen(false)} className='modal-close-btn'><FontAwesomeIcon icon={faTimes}/></span>\r\n            <h2 style={{textAlign: 'center', color: '#434343'}}>Login</h2>\r\n            <Form className ='login-form' onSubmit={logIn}>\r\n                <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\r\n                <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\r\n                <Button type='submit' className='login-btn'> Login </Button>\r\n                {error && <span style={errorStyle}> {error} </span>}\r\n            </Form>\r\n            <div className='go-to-signup' onClick={goToSignup}> New ? Sign Up ! </div>\r\n       </Modal>\r\n    )\r\n}\r\n\r\nexport default LoginModal","import Modal from 'react-modal';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport { useContext, useState } from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {BASE_URL} from '../../App'\r\nimport { Authentication } from '../../Contexts/Authentication'\r\nimport { signUpSuccess } from '../../Tools/WebsiteResponses';\r\n\r\nconst SignupModal = (props) => {\r\n    const [input, setInput] = useState(null)  // Get input\r\n    const [error, setError] = useState(null) // // Handle error from API\r\n\r\n    const {isLogged, setIsLogged} = useContext(Authentication)\r\n\r\n    const handleChange = (e) => {\r\n        setInput({...input, [e.target.name] : e.target.value})\r\n    }\r\n    const signUp = (e) => {\r\n        e.preventDefault()\r\n        axios.post(`${BASE_URL}/signup`, input)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                setIsLogged(true);\r\n                signUpSuccess();\r\n                localStorage.setItem('token', res.data.token)\r\n                localStorage.setItem('sessionID', res.data.user._id)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const error = err.response.data\r\n            // Define error message based on API\r\n            const errorType = error.message || error.firstName || error.lastName || error.phone \r\n            if(err.response.status === 409) {\r\n                setError(errorType)\r\n            }\r\n        })\r\n    }\r\n\r\n    const errorStyle = {\r\n        color: '#d10000', \r\n        fontSize: '18px', \r\n        marginTop: '10px', \r\n        padding: '7px',\r\n        borderRadius: '9px',\r\n        backgroundColor: 'whitesmoke'\r\n    }\r\n\r\n    const goToLogin = () => {\r\n        props.setIsSignupOpen(false)\r\n        props.setIsLoginOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        isOpen={props.isSignupOpen}\r\n        onRequestClose={props.closeSignup}\r\n        style={props.modalStyle}\r\n        contentLabel=\"Example Modal\"\r\n        closeLogin={props.closeSignup}\r\n          >\r\n        <span onClick={goToLogin} className='modal-close-btn'><FontAwesomeIcon icon={faArrowLeft}/></span>\r\n        <h2 style={{textAlign: 'center', color: '#434343'}}>Signup</h2>\r\n        <Form className ='login-form' onSubmit={signUp}>\r\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm password\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"firstName\" placeholder=\"First name\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"lastName\" placeholder=\"Last name\" onChange={e=>handleChange(e)}/>\r\n            <Form.Control name=\"phone\" placeholder=\"Phone number\" onChange={e=>handleChange(e)}/>\r\n            <Button type='submit' className=\"login-btn\"> Signup </Button>\r\n            {error && <span style={errorStyle}> {error} </span>}\r\n        </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SignupModal","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faHome, faPlus, faSignInAlt, faSignOutAlt, faUserMd } from '@fortawesome/free-solid-svg-icons'\r\nimport './Navbar.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { useState, useContext, useRef } from 'react'\r\nimport LoginModal from '../Modals/LoginModal'\r\nimport SignupModal from '../Modals/SignupModal' \r\nimport { Authentication } from '../../Contexts/Authentication';\r\nimport { confirmLogout } from '../../Tools/WebsiteResponses';\r\n\r\nconst Navbar = (props) => {\r\n    const [isLoginOpen,setIsLoginOpen] = useState(false);\r\n    const [isSignupOpen,setIsSignupOpen] = useState(false);\r\n    const {isLogged, setIsLogged} = useContext(Authentication)\r\n    \r\n    const openLogin = () => {\r\n        setIsLoginOpen(true);\r\n    }\r\n    const closeLogin = () => {\r\n        setIsLoginOpen(false)\r\n    }\r\n    const closeSignup = () => {\r\n        setIsSignupOpen(false)\r\n    }\r\n    const handleLogout = () => {\r\n        confirmLogout(setIsLogged);\r\n    }\r\n    \r\n    const modalStyle = {\r\n        overlay: {\r\n            backgroundColor     : '#2b1d13a0'\r\n        },\r\n        content : {\r\n          borderRadius          : '13px',\r\n          border                : '1px solid black',\r\n          backgroundColor       : 'whitesmoke',\r\n          top                   : '50%',\r\n          left                  : '50%',\r\n          right                 : 'auto',\r\n          bottom                : 'auto',\r\n          marginRight           : '-50%',\r\n          transform             : 'translate(-50%, -50%)',\r\n          display               : 'flex',\r\n          flexDirection : 'column',\r\n          justifyContent : 'center',\r\n          zIndex: 3\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo\"> SkinAI </div>\r\n            <ul className=\"nav-links-container\">\r\n                <Link to=\"/\"> \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faHome} size=\"2x\"/></li>\r\n                </Link>\r\n                <Link to=\"/upload\"> \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faPlus} size=\"2x\"/></li>\r\n                </Link>\r\n                {!isLogged && <li className=\"nav-links\" onClick={openLogin}><FontAwesomeIcon color='#36d68b' icon={faSignInAlt} size=\"2x\"/></li>}\r\n                {isLogged && <Link to='/'> \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' icon={faUserMd} size=\"2x\"/></li>\r\n                </Link>}\r\n                {isLogged && \r\n                    <li className=\"nav-links\"><FontAwesomeIcon color='#36d68b' onClick={handleLogout}icon={faSignOutAlt} size=\"2x\"/></li>\r\n                }\r\n            </ul>\r\n            <LoginModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isLoginOpen={isLoginOpen} closeLogin={closeLogin} modalStyle={modalStyle}/>\r\n            <SignupModal setIsLoginOpen={setIsLoginOpen} setIsSignupOpen={setIsSignupOpen} isSignupOpen={isSignupOpen} closeLogin={closeSignup} modalStyle={modalStyle}/>         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar ","export default __webpack_public_path__ + \"static/media/ModalDoctorDisplay.1f78b1ae.png\";","import { faCamera } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from 'axios';\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { Container, Form, Button, Dropdown, Row, Spinner } from 'react-bootstrap'\r\nimport './UploadForm.css'\r\nimport { Redirect } from 'react-router'\r\nimport { itemUploaded, formImageIssue, displayFormDoctorImage } from '../../Tools/WebsiteResponses';\r\nimport ModalDoctorDisplay from './ModalDoctorDisplay.png';\r\n\r\nconst UploadForm = () => {\r\n    const [infos, setInfos] = useState(null)\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [pic, setPic] = useState({ selectedFile: null })\r\n    const [previewPic, setPreviewPic] = useState(\"\")\r\n    const [redirect, setRedirect] = useState(false) // in case of success\r\n    const [loading, setLoading] = useState(false);\r\n    const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    const ref = useRef(null)\r\n\r\n    const handleChange = (e) => {\r\n        setInfos({\r\n            ...infos,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const imageUploadStyle = {\r\n        color: \"#434343\",\r\n        fontSize: \"35px\",\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        setInfos({ ...infos, category: e.target.name })\r\n    }\r\n\r\n    const uploadForm = (e) => {\r\n        setLoading(true);\r\n        e.preventDefault()\r\n        const data = new FormData()\r\n        for (let key in infos) {\r\n            data.append(key, infos[key])\r\n        }\r\n        console.log(pic.selectedFile)\r\n        if (pic.selectedFile) {\r\n            data.append('user', localStorage.getItem('sessionID'));\r\n            data.append('image', pic.selectedFile);\r\n        }\r\n        axios.post(`${BASE_URL}/upload-image`, data)\r\n            .then(res => itemUploaded('Image Uploaded'), setLoading(false))\r\n            .catch(err => { setLoading(false); formImageIssue(\"There was an issue uploading your image\") });\r\n    }\r\n\r\n    useEffect(() => {\r\n        displayFormDoctorImage(ModalDoctorDisplay);\r\n    }, [])\r\n\r\n    const imageUploader = (e) => {\r\n        const file = e.target.files[0]\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => {\r\n            console.log(e.target.result)\r\n            setPreviewPic(e.target.result)\r\n        }\r\n        reader.readAsDataURL(file)\r\n        setPic({ selectedFile: e.target.files[0] })\r\n    }\r\n\r\n    if (redirect) {\r\n        return (\r\n            <Redirect to={BASE_URL} />\r\n        )\r\n    }\r\n    return (\r\n        <Container>\r\n            <Form action=\"\" name=\"image\" className=\"upload-form\" onSubmit={e => uploadForm(e)} method=\"post\" enctype=\"multipart/form-data\">\r\n                <div>\r\n                    <h5 className=\"mt-5\">1. Keep the spot in the absolute middle of the picture.</h5>\r\n                    <br />\r\n                    <h5>2. Make sure the quality of the picture is good enough.</h5>\r\n                    <br />\r\n                    <h5>3. Do not take a picture in a dark environment.</h5>\r\n                </div>\r\n                <input type=\"file\" name=\"image\" ref={ref} id=\"hidden\" onChange={(e) => imageUploader(e)} />\r\n                <div className=\"image-upload\" onClick={() => ref.current.click()}><FontAwesomeIcon style={imageUploadStyle} icon={faCamera} /></div>\r\n                {previewPic && <div className=\"image-preview\"><img src={previewPic} alt=\"loaded pic\" /></div>}\r\n                <Form.Control className=\"upload-input\" name=\"name\" placeholder=\"Name\" onChange={e => handleChange(e)} />\r\n                <Form.Control className=\"upload-input\" type=\"number\" name=\"age\" placeholder=\"Age\" onChange={e => handleChange(e)} />\r\n                <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                    <Dropdown.Toggle caret>{(infos && infos.category) || 'Gender'}</Dropdown.Toggle>\r\n                    <Dropdown.Menu align='right'>\r\n                        <Dropdown.Item onClick={(e) => handleSelect(e)} name='Male'> Male </Dropdown.Item>\r\n                        <Dropdown.Item onClick={(e) => handleSelect(e)} name='Female'> Female </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                {!loading ? <Button type=\"submit\"> Submit for results </Button> : <div class=\"spinner-border text-primary mt-4\" role=\"status\">\r\n  <span class=\"sr-only\">Loading...</span>\r\n</div>}\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UploadForm","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Slides from \"./Components/Slides/Slides\";\r\nimport Navbar from \"./Components/NavBar/Navbar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Authentication } from './Contexts/Authentication';\r\nimport UploadForm from \"./Components/UploadForm/UploadForm\";\r\nimport './App.css'\r\n\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nfunction App() {\r\n  const [isLogged, setIsLogged] = useState(null)\r\n  const token = localStorage.getItem('token')\r\n\r\n  useEffect(() => {\r\n    if(token) {\r\n      setIsLogged(true)\r\n    } else {\r\n      setIsLogged(false)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Authentication.Provider value={{isLogged, setIsLogged}}>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n            <Route path=\"/upload\">\r\n              <UploadForm/>\r\n            </Route>\r\n            <Route path=\"/\" >\r\n              <div className=\"my-container\">\r\n              <Slides />\r\n              {<Link to='/upload' className='open-upload-form' >\r\n              <div>\r\n                  <div> Upload </div>\r\n              </div>\r\n              </Link>}\r\n              {/* <UploadForm /> */}\r\n              </div>\r\n            </Route>         \r\n        </Switch>\r\n      </Router>\r\n    </Authentication.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}